<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="addrManage">
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	
	<insert id="AddrManageService.InsrtAddrGroupInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.InsrtAddrGroupInfo - mariaDB */
		INSERT INTO $DB_NEOS$t_tmpg_addrGroup
			(
			  addr_group_seq
			 ,addr_group_nm
			 ,addr_group_tp
			 ,addr_group_desc
			 ,use_yn
			 ,order_num
			 ,create_seq
			 ,create_date
			)
		VALUES
			(
			  #addr_group_id#
			 ,#addr_group_nm#
			 ,#addr_group_tp#
			 ,#addr_group_desc#
			 ,#useYn#
			 ,#orderNum#
			 ,#empSeq#
			 ,now()
			)
	</insert>
	
	<update id="AddrManageService.UpdateAddrGroupInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.UpdateAddrGroupInfo - mariaDB */
		UPDATE $DB_NEOS$t_tmpg_addrGroup
			SET addr_group_nm = #addr_group_nm#
			   ,addr_group_tp = #addr_group_tp#
			   ,addr_group_desc = #addr_group_desc#
			   ,use_yn = #useYn#
			   ,order_num = #orderNum#
			   ,modify_seq = #empSeq#
			   ,modify_date = now()
	    WHERE addr_group_seq = #addr_group_id#
	</update>
	
	
	
	<select id="AddrManageService.GetAddrGroupID" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrGroupID - mariaDB */
		SELECT 
			MAX(CAST(addr_group_seq AS INT))
		FROM $DB_NEOS$t_tmpg_addrGroup
	</select>
	
	
	<select id="AddrManageService.GetAddrPublicID" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrPublicID - mariaDB */
		select $DB_NEOS$nextval('addrPublic')
	</select>
	
	<delete id="AddrManageService.DeleteAddrPublicID" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrPublicID - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addrpublic
		WHERE addr_group_seq = #addr_group_id#
	</delete>
	
	
	
	<insert id="AddrManageService.InsertAddrPublicInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.InsertAddrPublicInfo - mariaDB */
		INSERT INTO $DB_NEOS$t_tmpg_addrPublic
			(
			  addr_public_seq
			 ,addr_group_seq
			 <isNotEmpty property="addrDeptSeq">
			 ,dept_seq
			 </isNotEmpty>
			 ,org_div
			 ,org_seq
			 ,org_subSeq
			 ,create_seq
			 ,create_date
			)
		VALUES
			(
			  #addr_public_id#
			 ,#addr_group_id#
			 <isNotEmpty property="addrDeptSeq">
			 ,#addrDeptSeq#
			 </isNotEmpty>
			 ,#gbnInfo#
			 ,#seqInfo#
			 ,null
			 ,#empSeq#
			 ,now()
			)
	</insert>
	
	
	
	
	
	<select id="AddrManageService.GetAddrGroupList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" remapResults="true">

		/* AddrManageService.GetAddrGroupList - mariaDB */

		SELECT Distinct 
			a.addr_group_seq
			,case when a.addr_group_tp = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#) 
			when a.addr_group_tp = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when a.addr_group_tp = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when a.addr_group_tp = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#) end as addr_group_tp_nm
			,a.addr_group_tp
			,a.addr_group_nm
			,$DB_NEOS$FN_GetMultiLang(#langCode#, em.emp_name_multi) as create_nm
			,concat($DB_NEOS$FN_GetMultiLang(#langCode#, em.emp_name_multi),'(', (select login_id from $DB_NEOS$t_co_emp where emp_seq = em.emp_seq) ,')') as create_nm2
			,a.addr_group_desc
			,a.create_seq
			,a.use_yn
			,$DB_NEOS$get_code_detail_info('0','COM514',a.use_yn,#langCode#) as use_yn2
			,a.order_num
			,(select if(count(*)>0,count(*),0)
					from $DB_NEOS$t_tmpg_addr B 
					where B.addr_group_seq = a.addr_group_seq) cntAddr
			,#empSeq# as userEmpSeq
		from $DB_NEOS$t_tmpg_addrgroup a
		left outer join $DB_NEOS$v_t_co_emp_multi em on a.create_seq = em.emp_seq
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE ifnull('%$txtSearchGroupNm$%','')
		<isEmpty property="chkMyGroup">
			<isEmpty property="adminAuth">
		   		AND ((case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
				when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
				when a.addr_group_tp = 20 then (#deptSeq# in (				
												SELECT 
													dept_seq
												FROM 
													$DB_NEOS$t_Co_dept a
												WHERE 
													CONCAT('|',a.path,'|') LIKE CONCAT('%|',(SELECT path FROM $DB_NEOS$t_Co_Dept WHERE dept_Seq = C.org_seq LIMIT 1), '|%')
											) and c.org_div = 'd') or (C.org_seq = #empSeq# and org_div = 'm') 
									 or (#compSeq# = C.org_seq and org_Div = 'c')
				when a.addr_group_tp = 50 then C.org_seq = #compSeq# end) OR a.create_seq = #empSeq#)  		   
		    </isEmpty>
	    </isEmpty>
		<isNotEmpty property="chkMyGroup">
		   		AND a.create_seq = #empSeq#
	    </isNotEmpty>
		<isNotEmpty property="useYN">
		   		AND a.use_yn = #useYN#  		   
	    </isNotEmpty>
	    <isNotEmpty property="addrGroupTp">
	    	<isNotEqual property="addrGroupTp" compareValue="0">
	    			AND a.addr_group_tp = #addrGroupTp#
	    	</isNotEqual>	    	
	    </isNotEmpty>
	    <isEqual property="com400" compareValue="0">
	    	and a.addr_group_tp != '10'
	    </isEqual>
	    order by a.order_num,
	    case a.addr_group_tp
	   	when '30' then 1
	   	when '10' then 2
	   	when '20' then 3
	   	end, a.addr_group_nm='SENT' desc
		<isNotEmpty property="startNum">
		   		LIMIT $startNum$, $endNum$   
	    </isNotEmpty>
	</select>
	
	
	
	
	
	<select id="AddrManageService.GetCmmPopAddrGroupList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetCmmPopAddrGroupList - mariaDB */
		SELECT Distinct 
			'folder' as folder	
			,a.addr_group_seq as group_seq
			,case when a.addr_group_tp = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#) 
			when a.addr_group_tp = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when a.addr_group_tp = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when a.addr_group_tp = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#) end as addr_group_tp_nm
			,a.addr_group_tp
			,a.addr_group_nm as group_nm
			,$DB_NEOS$FN_GetMultiLang(#langCode#,em.emp_name_multi) as create_nm
			,a.addr_group_desc
			,a.create_seq
			,a.use_yn
			,(select if(count(*)>0,count(*),0)
					from $DB_NEOS$t_tmpg_addr B 
					where B.addr_group_seq = a.addr_group_seq) cntAddr
		from $DB_NEOS$t_tmpg_addrgroup a
		left join $DB_NEOS$v_t_co_emp_multi em on em.emp_seq = a.create_seq
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE ifnull('%$txtSearchGroupNm$%','')
		<isEmpty property="chkMyGroup">
			<isEmpty property="adminAuth">
		   		AND (case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
				when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
				when a.addr_group_tp = 20 then #deptSeq# in (
												 SELECT org2.dept_seq 
													FROM $DB_NEOS$v_org_chart org
												 INNER JOIN $DB_NEOS$v_org_chart org2
													 ON org2.path LIKE CONCAT(org.path, '|%')
												 WHERE org.seq = C.org_seq and org.gbn_org = 'd'
												   ) or C.org_seq = #empSeq# 
									 or #compSeq# in (
												 SELECT org2.comp_seq 
													FROM $DB_NEOS$v_org_chart org
												 INNER JOIN $DB_NEOS$v_org_chart org2
													 ON org2.path LIKE CONCAT(org.path, '|%')
												 WHERE org.seq = C.org_seq and org.gbn_org = 'c'
												   )
				when a.addr_group_tp = 50 then C.org_seq = #compSeq# end)
			</isEmpty>		   
	    </isEmpty>		
		<isNotEmpty property="chkMyGroup">
		   		AND a.create_seq = #empSeq#  		   
	    </isNotEmpty>
		<isNotEmpty property="useYN">
		   		AND a.use_yn = #useYN#  		   
	    </isNotEmpty>	    
	    
	    <isNotEmpty property="addrGroupTp">
	    		AND a.addr_group_tp = #addrGroupTp#
	    </isNotEmpty>
	    order by a.order_num, 
	    case a.addr_group_tp
	   	when '30' then 1
	   	when '10' then 2
	   	when '20' then 3
	   	end, a.addr_group_nm='SENT' desc
		<isNotEmpty property="startNum">
		   		LIMIT $startNum$, $endNum$   
	    </isNotEmpty>
	    
	    
	</select>
	
	
	
	
	<select id="AddrManageService.GetAddrGroupList2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrGroupList2 - mariaDB*/
		SELECT Distinct 
			a.addr_group_seq as addrGroupSeq
			,case when a.addr_group_tp = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#) 
			when a.addr_group_tp = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when a.addr_group_tp = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when a.addr_group_tp = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#) end as addrGroupTpNm
			,a.addr_group_tp as addrGroupTp 
			,a.addr_group_nm as addrGroupNm
			,a.addr_group_desc as addrGroupDesc
			,(select if(count(*)>0,count(*),0)
					from $DB_NEOS$t_tmpg_addr B 
					where B.addr_group_seq = a.addr_group_seq) cntAddr
		from $DB_NEOS$t_tmpg_addrgroup a
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE ifnull('%$txtSearchGroupNm$%','')
		AND (case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
		when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
		when a.addr_group_tp = 20 then (#deptSeq# in (				
											SELECT 
												dept_seq
											FROM 
												$DB_NEOS$t_Co_dept a
											WHERE 
												CONCAT('|',a.path,'|') LIKE CONCAT('%|',(SELECT path FROM $DB_NEOS$t_Co_Dept WHERE dept_Seq = C.org_seq LIMIT 1), '|%')
										) and c.org_div = 'd') or (c.org_seq = #empSeq# and org_div = 'm')
										or (#compSeq# = c.org_seq and org_div = 'c')	
		when a.addr_group_tp = 50 then C.org_seq = #compSeq# end)
		<isNotEmpty property="useYN">
		   		AND a.use_yn = #useYN#  		   
	    </isNotEmpty>
	    <isNotEmpty property="chkMyGroup">
		   		AND a.create_seq = #empSeq#  		   
	    </isNotEmpty>
	    <isNotEmpty property="addrGroupTp">
	    		AND a.addr_group_tp = #addrGroupTp#
	    </isNotEmpty>
	    order by a.order_num, 
	    case a.addr_group_tp
	   	when '30' then 1
	   	when '10' then 2
	   	when '20' then 3
	   	end, a.addr_group_nm='SENT' desc
		<isNotEmpty property="startNum">
		   		LIMIT $startNum$, $endNum$   
	    </isNotEmpty>
	    
	    
	</select>
	
	
	<select id="AddrManageService.GetAddrGroupList_api" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrGroupList_api - mariaDB */
		SELECT Distinct 
			ifnull(a.addr_group_seq,'') as addrGroupSeq
			,ifnull(a.addr_group_nm,'') as addrGroupNm
		from $DB_NEOS$t_tmpg_addrgroup a
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE ifnull('%$txtSearchGroupNm$%','')
		AND (case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
		when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
		when a.addr_group_tp = 20 then (#deptSeq# in (				
											SELECT 
												dept_seq
											FROM 
												$DB_NEOS$t_Co_dept a
											WHERE 
												CONCAT('|',a.path,'|') LIKE CONCAT('%|',(SELECT path FROM $DB_NEOS$t_Co_Dept WHERE dept_Seq = C.org_seq LIMIT 1), '|%')
										) and c.org_div = 'd') or (c.org_seq = #empSeq# and org_div = 'm')
										or (#compSeq# = c.org_seq and org_div = 'c') 		
		when a.addr_group_tp = 50 then C.org_seq = #compSeq# end)
		<isNotEmpty property="useYN">
		   		AND a.use_yn = #useYN#  		   
	    </isNotEmpty>
	    <isNotEmpty property="chkMyGroup">
		   		AND a.create_seq = #empSeq#  		   
	    </isNotEmpty>
	    order by a.order_num, 
	    case a.addr_group_tp
	   	when '30' then 1
	   	when '10' then 2
	   	when '20' then 3
	   	end, a.addr_group_nm='SENT' desc
		<isNotEmpty property="startNum">
		   		LIMIT $startNum$, $endNum$   
	    </isNotEmpty>
	    
	</select>
	
	<select id="AddrManageService.GetAddrGroupList_TOTALCOUNT" parameterClass="java.util.HashMap" resultClass="String" remapResults="true">

		/* AddrManageService.GetAddrGroupList_TOTALCOUNT - mariaDB */
		SELECT count(Distinct a.addr_group_seq)
		from $DB_NEOS$t_tmpg_addrgroup a
		left outer join $DB_NEOS$v_t_co_emp_multi em on a.create_seq = em.emp_seq
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE ifnull('%$txtSearchGroupNm$%','')
		<isEmpty property="chkMyGroup">
		   		AND ((case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
				when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
				when a.addr_group_tp = 20 then (#deptSeq# in (				
											SELECT 
												dept_seq
											FROM 
												$DB_NEOS$t_Co_dept a
											WHERE 
												CONCAT('|',a.path,'|') LIKE CONCAT('%|',(SELECT path FROM $DB_NEOS$t_Co_Dept WHERE dept_Seq = C.org_seq LIMIT 1), '|%')
										) and c.org_div = 'd') or (c.org_seq = #empSeq# and org_div = 'm')
										or (#compSeq# = c.org_seq and org_div = 'c')
				when a.addr_group_tp = 50 then C.org_seq = #compSeq# end) OR a.create_seq = #empSeq#)  		   
	    </isEmpty>		
		<isNotEmpty property="chkMyGroup">
		   		AND a.create_seq = #empSeq#
	    </isNotEmpty>
		<isNotEmpty property="useYN">
		   		AND a.use_yn = #useYN#  		   
	    </isNotEmpty>	    
	    
	    <isNotEmpty property="addrGroupTp">
	    	<isNotEqual property="addrGroupTp" compareValue="0">
	    			AND a.addr_group_tp = #addrGroupTp#
	    	</isNotEqual>	    	
	    </isNotEmpty>

	</select>
	
	<delete id="AddrManageService.DeleteAddrGroupInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrGroupInfo - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addrGroup
		WHERE addr_group_seq = #addr_group_seq#
	</delete>
	<delete id="AddrManageService.DeleteAddrPublicInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrPublicInfo - mairaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addrPublic
		WHERE addr_group_seq = #addr_group_seq#
	</delete>
	
	<delete id="AddrManageService.DeleteAddrPublicList" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrPublicList - mairaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addrPublic
		WHERE addr_group_seq in($arrGroupSeqList$)
	</delete>
	
	<select id="AddrManageService.GetGroupList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
<!-- 		SELECT  -->
<!-- 			addr_group_seq AS CD_SEQ -->
<!-- 			,addr_group_nm as CD_NAME -->
<!-- 		FROM t_tmpg_addrGroup -->

<!-- 		SELECT  -->
<!-- 			addr_group_seq AS CD_SEQ -->
<!-- 			,addr_group_nm as CD_NAME -->
<!-- 		from t_tmpg_addrgroup a -->
<!-- 		WHERE use_yn = 'Y'  	 -->
<!-- 		<isNotEmpty property="groupDiv"> -->
<!-- 			AND addr_group_tp = #groupDiv# -->
<!-- 		</isNotEmpty>	   -->
		/* AddrManageService.GetGroupList - mariaDB */
		SELECT Distinct 
			a.addr_group_seq AS CD_SEQ
			,a.addr_group_nm AS CD_NAME
		from $DB_NEOS$t_tmpg_addrgroup a
		left outer join $DB_NEOS$t_tmpg_addr B on A.addr_group_seq = B.addr_group_seq
		left outer join $DB_NEOS$t_tmpg_addrpublic C on a.addr_group_seq = c.addr_group_seq
		WHERE ifnull(addr_group_nm,'') LIKE CONCAT('%',ifnull(#txtSearchGroupNm#,''),'%')
		<isEqual property="adminAuth" compareValue="USER">
			AND (case when a.addr_group_tp = 30 then A.create_seq = #empSeq# or B.create_seq = #empSeq# 
			when a.addr_group_tp = 10 then (B.comp_seq = #compSeq# or C.org_seq = #compSeq#)
			when a.addr_group_tp = 20 then #deptSeq# in (
													 SELECT org2.dept_seq 
														FROM $DB_NEOS$v_org_chart org
													 INNER JOIN $DB_NEOS$v_org_chart org2
														ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')
													--	 ON org2.path LIKE CONCAT(org.path, '|%')
													 WHERE org.seq = C.org_seq and org.gbn_org = 'd'
													   ) or C.org_seq = #empSeq# 
										 or #compSeq# in (
													 SELECT org2.comp_seq 
														FROM $DB_NEOS$v_org_chart org
													 INNER JOIN $DB_NEOS$v_org_chart org2
													 	ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')
													--	 ON org2.path LIKE CONCAT(org.path, '|%')
													 WHERE org.seq = C.org_seq and org.gbn_org = 'c'
													   )
			when a.addr_group_tp = 50 then C.org_seq = #compSeq# end)
		</isEqual>
		<isNotEmpty property="groupDiv">
			AND a.addr_group_tp = #groupDiv#
 		</isNotEmpty>
 		order by a.order_num, 
 		case a.addr_group_tp
	   	when '30' then 1
	   	when '10' then 2
	   	when '20' then 3
	   	end, a.addr_group_nm='SENT' desc
	</select>
	
	
	<select id="AddrManageService.GetAddrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrList - mariaDB */
		SELECT
			addr_seq
			,case when addr_div = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#)
			when addr_div = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when addr_div = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when addr_div = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#) 
			end as addr_div_nm
			,B.addr_group_nm as addr_group_nm
			,emp_nm
			,comp_nm
			,emp_email
			,emp_fax
			,comp_fax
			,$DB_NEOS$FN_GetMultiLang(#langCode#,em.emp_name_multi) as create_nm
			,A.create_seq
			,A.order_num
			,#empSeq# as "userEmpSeq"
		FROM $DB_NEOS$t_tmpg_addr A
		left join $DB_NEOS$v_t_co_emp_multi em on em.emp_seq = A.create_seq
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																			ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')
																		--	 ON org2.path LIKE CONCAT(org.path, '|%')
																		 WHERE org.seq = A.org_seq
																		   ) 
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and (B.addr_group_tp = '20' or B.addr_group_tp = '50') 
		WHERE ifnull(emp_nm,'') LIKE ifnull('%$txtEmpNm$%','')
			AND ifnull(comp_nm,'') LIKE ifnull('%$txtCompNm$%','')
			AND (ifnull(emp_hp,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(emp_tel,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(comp_tel,'') LIKE ifnull('%$txtPhNum$%',''))
			AND (ifnull(emp_fax,'') LIKE ifnull('%$txtFaxNum$%','')
			OR  ifnull(comp_fax,'') LIKE ifnull('%$txtFaxNum$%',''))
			<isNotEmpty property="syncTime">
				and LEFT(DATE_FORMAT(A.create_date,'%Y%m%d%H%i%s%f'),17) &lt; #syncTime#
			</isNotEmpty>
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        	<isEmpty property="txtSearch">
		        		AND length(emp_email) > 0
		        	</isEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="fax">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        	<isEmpty property="txtSearch">
		        		AND (length(emp_fax) > 0 or length(comp_fax) > 0)
		        	</isEmpty>
		        </isEqual>
	   		</isNotEmpty>
	   		<isNotEmpty>
	   			<isEqual property="apiFlag" compareValue="fax">
<!-- 	   				AND (emp_fax is not null and emp_fax != '') -->
	   			</isEqual>	   			
	   		</isNotEmpty>
	   		order by if(ifnull(A.order_num,'') = '', '9999999999', A.order_num), A.create_date desc
	<isNotEmpty property="startNum">
	   		LIMIT $startNum$, $endNum$   
    </isNotEmpty>
    
    
    
	</select>
	
	
	
	
	<select id="AddrManageService.GetCmmAddrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetCmmAddrList - mariaDB */
		SELECT
			addr_seq
			,a.addr_group_seq
			,a.comp_nm
			,a.emp_nm
			,a.emp_fax comp_fax
			,a.emp_hp as comp_tel
			,emp_email
			,A.order_num
		FROM $DB_NEOS$t_tmpg_addr A
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																		     ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																			 
																		 WHERE org.seq = A.org_seq
																		   )
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and (B.addr_group_tp = '20' or B.addr_group_tp = '50') 
		WHERE ifnull(emp_nm,'') LIKE ifnull('%$txtEmpNm$%','')
			AND ifnull(comp_nm,'') LIKE ifnull('%$txtCompNm$%','')
			AND (ifnull(emp_hp,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(emp_tel,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(comp_tel,'') LIKE ifnull('%$txtPhNum$%',''))
			AND (ifnull(emp_fax,'') LIKE ifnull('%$txtFaxNum$%','')
			OR  ifnull(comp_fax,'') LIKE ifnull('%$txtFaxNum$%',''))
			<isEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
			<isNotEmpty property="searchDiv">
	   			<isEqual property="searchDiv" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>	   		
	   			<isEqual property="searchDiv" compareValue="이름">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchDiv" compareValue="회사">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchDiv" compareValue="팩스번호">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>    
		        <isEqual property="searchDiv" compareValue="휴대전화">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_hp,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
	       </isNotEmpty>
	       order by if(ifnull(A.order_num,'') = '', '9999999999', A.order_num), A.create_date desc
	</select>
	
	
	
	
	
	
	
	
	
	<select id="AddrManageService.GetAddrList_api" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrList_api - mariaDB */
		SELECT						
			ifnull(B.addr_group_nm,'') as addrGroupNm
			,ifnull(emp_nm,'') as empNm
			,ifnull(comp_nm,'') as compNm
			,ifnull(emp_email,'') as empEmail			
			,ifnull(emp_fax,'') as empFax
			,A.order_num
		FROM $DB_NEOS$t_tmpg_addr A
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																		 	 ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																			 
																		 WHERE org.seq = A.org_seq
																		   )
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and B.addr_group_tp = '20'
		WHERE ifnull(emp_nm,'') LIKE ifnull('%$txtEmpNm$%','')
			AND ifnull(comp_nm,'') LIKE ifnull('%$txtCompNm$%','')
			AND (ifnull(emp_hp,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(emp_tel,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(comp_tel,'') LIKE ifnull('%$txtPhNum$%',''))
			AND (ifnull(emp_fax,'') LIKE ifnull('%$txtFaxNum$%','')
			OR  ifnull(comp_fax,'') LIKE ifnull('%$txtFaxNum$%',''))
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="fax">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
	   		</isNotEmpty>
	   		order by if(ifnull(A.order_num,'') = '', '9999999999', A.order_num), A.create_date desc
	<isNotEmpty property="startNum">
	   		LIMIT $startNum$, $endNum$   
    </isNotEmpty>
	</select>
	
	
	<select id="AddrManageService.GetAddrList_api_TOTALCOUNT" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrList_api_TOTALCOUNT - mariaDB */
		SELECT						
			count(*)
		FROM $DB_NEOS$t_tmpg_addr A
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2																			 
																			 ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')
																		 WHERE org.seq = A.org_seq
																		   )
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and B.addr_group_tp = '20'
		WHERE ifnull(emp_nm,'') LIKE ifnull('%$txtEmpNm$%','')
			AND ifnull(comp_nm,'') LIKE ifnull('%$txtCompNm$%','')
			AND (ifnull(emp_hp,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(emp_tel,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(comp_tel,'') LIKE ifnull('%$txtPhNum$%',''))
			AND (ifnull(emp_fax,'') LIKE ifnull('%$txtFaxNum$%','')
			OR  ifnull(comp_fax,'') LIKE ifnull('%$txtFaxNum$%',''))
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="fax">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
	   		</isNotEmpty>
	   		
	<isNotEmpty property="startNum">
	   		LIMIT $startNum$, $endNum$   
    </isNotEmpty>
	</select>
	
	
	<select id="AddrManageService.GetAddrList2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	/* AddrManageService.GetAddrList2 - mariaDB */
	SELECT
			addr_seq
			,case when addr_div = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#)
			when addr_div = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when addr_div = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when addr_div = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#)
			end as addr_div_nm
			,B.addr_group_nm as addr_group_nm
			,emp_nm
			,comp_nm
			,emp_email
			,ifnull(A.emp_tel, '') emp_tel
			,ifnull(A.emp_hp, '') emp_hp
			,$DB_NEOS$FN_GetMultiLang(#langCode#,em.emp_name_multi) as create_nm
			,A.create_seq
			,A.order_num
		FROM $DB_NEOS$t_tmpg_addr A
		left join $DB_NEOS$v_t_co_emp_multi em on em.emp_seq = A.create_seq
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq AND B.use_yn='Y'
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																		 	 ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																			 
																		 WHERE org.seq = A.org_seq
																		   )
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and (B.addr_group_tp = '20' or B.addr_group_tp = '50') 
		WHERE ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtEmpNm#,''),'%')
			AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtCompNm#,''),'%')
			AND (ifnull(emp_hp,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%')
			OR  ifnull(emp_tel,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%')
			OR  ifnull(comp_tel,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%'))
			AND (ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtFaxNum#,''),'%')
			OR  ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtFaxNum#,''),'%'))
			<isNotEmpty property="targetModule">
				<isEqual property="targetModule" compareValue="mail">
					AND (emp_email is not null and emp_email != '')
				</isEqual>
			</isNotEmpty>
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(B.addr_group_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="group">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(B.addr_group_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="mailReceiver">
		        	<iterate  prepend="AND" property="txtSearch" open=" ifnull(emp_email,'') IN (" close=")" conjunction="," >
		        	#txtSearch[]#
		        	</iterate>
		        </isEqual>
	   		</isNotEmpty>
	   		order by if(ifnull(A.order_num,'') = '', '9999999999', A.order_num), A.create_date desc
	<isNotEmpty property="startNum">
	   		LIMIT $startNum$, $endNum$   
    </isNotEmpty>

	</select>
	
	<select id="AddrManageService.GetAddrList_TOTALCOUNT" parameterClass="java.util.HashMap" resultClass="String" remapResults="true">
	/* AddrManageService.GetAddrList_TOTALCOUNT - mariaDB */
	SELECT
			count(addr_seq)
		FROM $DB_NEOS$t_tmpg_addr A
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																			ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																		
																		 WHERE org.seq = A.org_seq
																		   ) 
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and (B.addr_group_tp = '20' or B.addr_group_tp = '50')
		WHERE ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtEmpNm#,''),'%')
			AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtCompNm#,''),'%')
			AND (ifnull(emp_hp,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%')
			OR  ifnull(emp_tel,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%')
			OR  ifnull(comp_tel,'') LIKE CONCAT('%',ifnull(#txtPhNum#,''),'%'))
			AND (ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtFaxNum#,''),'%')
			OR  ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtFaxNum#,''),'%'))
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))				
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        	<isEmpty property="txtSearch">
	        			AND length(emp_email) > 0
	        		</isEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="fax">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_fax,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        	<isEmpty property="txtSearch">
	        			AND (length(emp_fax) > 0 or length(comp_fax) > 0)
	        		</isEmpty>
		        </isEqual>
		        
	   		</isNotEmpty>
	</select>
	
	<select id="AddrManageService.GetAddrID" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
<!-- 		SELECT  -->
<!-- 			MAX(CAST(addr_seq AS INT)) -->
<!-- 		FROM t_tmpg_addr -->
			/* AddrManageService.GetAddrID - mariaDB */
			SELECT $DB_NEOS$nextval('addr')
	</select>
	
	<insert id="AddrManageService.InsertAddrInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.InsertAddrInfo - mariaDB */
		INSERT INTO $DB_NEOS$t_tmpg_addr
			SET
				  addr_seq = #addrSeq#
				 ,addr_group_seq = #addrGroupSeq#
				 ,group_seq = #groupSeq#
				 ,comp_seq = #compSeq#
				 ,addr_Div = #addrDiv#
				 ,emp_nm = IFNULL(#empNm#,'')
				 ,emp_email = #empEmail#
				 ,emp_hp = IFNULL(#empHp#,'')
				 ,emp_tel = IFNULL(#empTel#,'')
				 ,emp_fax = IFNULL(#empFax#,'')
				 ,emp_zip_cd =#empZipCd#
				 ,emp_zip_addr = #empZipAddr#
				 ,emp_photo = #empPhoto#
				 ,addr_comp_seq = #addrCompSeq#
				 ,comp_nm = IFNULL(#compNm#,'')
				 ,comp_num = #compNum#
				 ,comp_tel = IFNULL(#compTel#,'')
				 ,comp_fax = IFNULL(#compFax#,'')
				 ,comp_zip_cd = #compZipCd#
				 ,comp_zip_addr = #compZipAddr#
				 ,etc = #compEtc#
				 ,note = #compNote#
				 ,create_seq = #empSeq#
				 ,create_date = now()
				 ,order_num = #orderNum#
			ON DUPLICATE KEY UPDATE
				  addr_group_seq = #addrGroupSeq#
				 ,group_seq = #groupSeq#
				 ,comp_seq = #compSeq#
				 ,addr_Div = #addrDiv#
				 ,emp_nm = #empNm#
				 ,emp_email = #empEmail#
				 ,emp_hp = #empHp#
				 ,emp_tel = #empTel#
				 ,emp_fax = #empFax#
				 ,emp_zip_cd =#empZipCd#
				 ,emp_zip_addr = #empZipAddr#
				 ,emp_photo = #empPhoto#
				 ,addr_comp_seq = #addrCompSeq#
				 ,comp_nm = #compNm#
				 ,comp_num = #compNum#
				 ,comp_tel = #compTel#
				 ,comp_fax = #compFax#
				 ,comp_zip_cd = #compZipCd#
				 ,comp_zip_addr = #compZipAddr#
				 ,etc = #compEtc#
				 ,note = #compNote#
				 ,modify_seq = #empSeq#
				 ,modify_date = now()
				 ,order_num = #orderNum#
	</insert>	
	
	
	<select id="AddrManageService.GetAddrInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrInfo - mariaDB */
		SELECT
			a.addr_seq, a.addr_group_seq, a.addr_div, a.emp_nm, emp_email, emp_hp, emp_tel, emp_fax, emp_zip_cd, emp_zip_addr, b.addr_group_nm
			,emp_photo, addr_comp_seq, comp_nm, comp_num, comp_tel, comp_fax, comp_zip_cd, comp_zip_addr, etc, note, a.create_seq, a.order_num
		FROM $DB_NEOS$t_tmpg_addr a
		inner join $DB_NEOS$t_tmpg_addrgroup b on a.addr_Group_seq = b.addr_Group_seq
		WHERE addr_seq = #addrSeq#
	</select>
	
	<delete id="AddrManageService.DeleteAddrInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrInfo - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addr
		WHERE addr_seq = #addrSeq#
	</delete>
	
	<delete id="AddrManageService.DeleteAddrListInfo" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrListInfo - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addr
		WHERE addr_seq in($arrSeqList$)
	</delete>
		
	<delete id="AddrManageService.DeleteAddrList" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrList - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addr
		WHERE addr_group_seq in($arrGroupSeqList$)
	</delete>
	
	<delete id="AddrManageService.DeleteAddrGroupList" parameterClass="java.util.HashMap">
		/* AddrManageService.DeleteAddrGroupList - mariaDB */
		DELETE FROM $DB_NEOS$t_tmpg_addrgroup
		WHERE addr_group_seq in($arrGroupSeqList$)
	</delete>
	
	<select id="AddrManageService.AddrGroupPublicList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.AddrGroupPublicList - mariaDB */
		SELECT 
			addr_public_seq,addr_seq, org_div, org_seq, org_subSeq
		FROM $DB_NEOS$t_tmpg_addrPublic
		WHERE addr_group_seq = #addrSeq#
	</select>
	
	
	<select id="AddrManageService.GetAddrPublic" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrPublic - mariaDB */
		SELECT DISTINCT
			CASE WHEN A.org_div = 'c' THEN $DB_NEOS$FN_GetMultiLang('kr',D.comp_name_multi)
				WHEN A.org_div = 'd' THEN $DB_NEOS$FN_GetMultiLang('kr',C.dept_name_multi)
				WHEN A.org_div = 'm' THEN $DB_NEOS$FN_GetMultiLang('kr',em.emp_name_multi) END as emp_name
			,A.org_div
			,A.org_seq
			,ifnull(A.dept_seq, '') as dept_seq
			,case when A.org_div = 'c' then concat(#groupSeq#,'|',A.org_seq,'|||c')
				  when A.org_div = 'd' then concat(#groupSeq#,'|',(select comp_seq from $DB_NEOS$t_co_dept where dept_seq = A.dept_seq),'|', A.org_seq, '||d')
				  when A.org_div = 'm' then concat(#groupSeq#,'|',(select comp_seq from $DB_NEOS$t_co_dept where dept_seq = A.dept_seq),'|', A.dept_seq, '|', A.org_seq, '|u') end as selectedItems
		FROM $DB_NEOS$t_tmpg_addrPublic A
		left join $DB_NEOS$v_t_co_emp_multi em on em.emp_seq = A.org_seq
		left join $DB_NEOS$v_t_co_dept_multi C ON A.org_seq = C.dept_seq
		left join $DB_NEOS$v_t_co_comp_multi D on A.org_seq = D.comp_seq
		WHERE addr_group_seq = #addr_group_seq#
	</select>
	
	
	<select id="AddrManageService.GetCompName" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetCompName - mariaDB */
		SELECT $DB_NEOS$FN_GetMultiLang(#langCode#,comp_name_multi) as compName
		FROM $DB_NEOS$V_T_CO_COMP_MULTI
		WHERE comp_seq = #compSeq# and group_seq = #groupSeq#
	</select>
	
	
	
	<select id="AddrManageService.GetEmpName" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetEmpName - mariaDB */
		select $DB_NEOS$FN_GetMultiLang(#langCode#, emp_name_multi) as empName
		from $DB_NEOS$v_t_co_emp_multi
		where emp_seq = #empSeq# and group_seq = #groupSeq#
	</select>
	
	
	<select id="AddrManageService.GetAddrGroupTp" resultClass="String" parameterClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.GetAddrGroupTp - mariaDB */
		select addr_group_tp
		from $DB_NEOS$t_tmpg_addrgroup
		where addr_group_seq = #addr_group_seq#
	
	</select>
	
	
	<delete id="AddrManageService.DeleteFileInfo" parameterClass="hashmap">
		/* AddrManageService.DeleteFileInfo - mariaDB */
		DELETE FROM $DB_NEOS$t_co_atch_file
		WHERE
			file_id = #empPhotoOld#	
	</delete>
	
	<delete id="AddrManageService.DeleteFileDetailInfo" parameterClass="hashmap">
		/* AddrManageService.DeleteFileDetailInfo - mariaDB */
		DELETE FROM $DB_NEOS$t_co_atch_file_detail
		WHERE
			file_id = #empPhotoOld#
			AND file_sn = '0'	
	</delete>
	
	
	<delete id="AddrManageService.DeleteFileInfo2" parameterClass="hashmap">
		/* AddrManageService.DeleteFileInfo2 - mariaDB */
		DELETE FROM $DB_NEOS$t_co_atch_file
		WHERE
			file_id = #empPhotoOld#	 or file_id = #empPhoto# 
	</delete>
	
	<delete id="AddrManageService.DeleteFileDetailInfo2" parameterClass="hashmap">
		/* AddrManageService.DeleteFileDetailInfo2 - mariaDB */
		DELETE FROM $DB_NEOS$t_co_atch_file_detail
		WHERE
			(file_id = #empPhotoOld# or file_id = #empPhoto#)
			AND file_sn = '0'	
	</delete>
	
	<select id="AddrManageService.getPartnerList" parameterClass="hashmap" resultClass="egovMap" remapResults="true">
		/* AddrManageService.getPartnerList - mariaDB */
		SELECT 
			*
		FROM 
			$DB_NEOS$t_pr_partner_main a
		WHERE 
			a.comp_seq = #compSeq#
			AND a.group_seq = #groupSeq#
			AND (cd_partner LIKE CONCAT('%',ifnull(#seartText#,''),'%') OR ln_partner LIKE CONCAT('%',ifnull(#seartText#,''),'%') OR no_company LIKE CONCAT('%',ifnull(#seartText#,''),'%'))				
		ORDER BY a.create_date desc		
	</select>
	
	
	<select id="AddrManageService.AddrListExcelExport" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		/* AddrManageService.AddrListExcelExport - mariaDB */
		SELECT
			case when addr_div = 10 then $DB_NEOS$get_code_detail_info('0', 'option0045', '0', #langCode#) 
			when addr_div = 20 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '20', #langCode#) 
			when addr_div = 30 then $DB_NEOS$get_code_detail_info('0', 'mp0007', '30', #langCode#) 
			when addr_div = 50 then $DB_NEOS$get_code_detail_info('0', 'option0005', '1', #langCode#) 
			end as addr_div_nm
			,ifnull(B.addr_group_nm,'') as addr_group_nm
			,$DB_NEOS$FN_GetMultiLang(#langCode#,em.emp_name_multi) as create_nm
			,
			ifnull(A.addr_seq,'') as addr_seq,
			ifnull(A.addr_group_seq,'') as addr_group_seq,
			ifnull(A.group_seq,'') as group_seq,
			ifnull(A.comp_seq,'') as comp_seq,
			ifnull(A.addr_div,'') as addr_div,
			ifnull(A.emp_nm,'') as emp_nm,
			ifnull(A.emp_email,'') as emp_email,
			ifnull(A.emp_hp,'') as emp_hp,
			ifnull(A.emp_tel,'') as emp_tel,
			ifnull(A.emp_fax,'') as emp_fax,
			ifnull(A.emp_zip_cd,'') as emp_zip_cd,
			ifnull(A.emp_zip_addr,'') as emp_zip_addr,
			ifnull(A.emp_photo,'') as emp_photo,
			ifnull(A.addr_comp_seq,'') as addr_comp_seq,
			ifnull(A.comp_nm,'') as comp_nm,
			ifnull(A.comp_num,'') as comp_num,
			ifnull(A.comp_tel,'') as comp_tel,
			ifnull(A.comp_fax,'') as comp_fax,
			ifnull(A.comp_zip_cd,'') as comp_zip_cd,
			ifnull(A.comp_zip_addr,'') as comp_zip_addr,
			ifnull(A.etc,'') as etc,
			ifnull(A.note,'') as note,
			ifnull(A.create_seq,'') as create_seq,
			ifnull(A.create_date,'') as create_date,
			ifnull(A.modify_seq,'') as modify_seq,
			ifnull(A.modify_date,'') as modify_date,
			ifnull(A.order_num,'') as order_num			
		FROM $DB_NEOS$t_tmpg_addr A
		left join $DB_NEOS$v_t_co_emp_multi em on em.emp_seq = A.create_seq
		INNER JOIN $DB_NEOS$t_tmpg_addrGroup B on A.addr_group_seq = B.addr_group_seq
		left join (select distinct addr_group_seq
						from $DB_NEOS$t_tmpg_addrpublic A
						where case when org_div = 'c' then org_seq = #compSeq#
									  when org_div = 'd' then #deptSeq# in (
																		 SELECT org2.dept_seq 
																			FROM $DB_NEOS$v_org_chart org
																		 INNER JOIN $DB_NEOS$v_org_chart org2
																		 	 ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																			 
																		 WHERE org.seq = A.org_seq
																		   )
									  when org_div = 'm' then org_seq = #empSeq# end
					 ) C on C.addr_group_seq = B.addr_group_seq and (B.addr_group_tp = '20' or B.addr_group_tp = '50') 
		WHERE ifnull(emp_nm,'') LIKE ifnull('%$txtEmpNm$%','')
			AND ifnull(comp_nm,'') LIKE ifnull('%$txtCompNm$%','')
			AND (ifnull(emp_hp,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(emp_tel,'') LIKE ifnull('%$txtPhNum$%','')
			OR  ifnull(comp_tel,'') LIKE ifnull('%$txtPhNum$%',''))
			AND (ifnull(emp_fax,'') LIKE ifnull('%$txtFaxNum$%','')
			OR  ifnull(comp_fax,'') LIKE ifnull('%$txtFaxNum$%',''))
			<isEmpty property="adminAuth">
				AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))				
			</isEmpty>
			<isNotEmpty property="adminAuth">
				<isEqual property="adminAuth" compareValue="USER">
					AND (A.create_seq = #empSeq# or (A.addr_div = '10' and A.comp_seq = #compSeq#) or (A.addr_div = '20' and C.addr_group_seq is not null) or (A.addr_div = '30' and A.create_seq = #empSeq#))
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="chkMyGroup">
		   		AND A.create_seq = #empSeq#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrDiv">
		   		AND A.addr_div = #addrDiv#  		   
	   		</isNotEmpty>
	   		<isNotEmpty property="addrGroupSeq">
		   		<isNotEqual property="addrGroupSeq" compareValue="0">
		   			AND A.addr_group_seq = #addrGroupSeq#
		   		</isNotEqual>
	   		</isNotEmpty>
	   		<isNotEmpty property="searchTarget">
	   			<isEqual property="searchTarget" compareValue="all">
		        	<isNotEmpty property="txtSearch">
		        		AND (ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%') or ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')) 
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="name">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="comp">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(comp_nm,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
		        <isEqual property="searchTarget" compareValue="email">
		        	<isNotEmpty property="txtSearch">
		        		AND ifnull(emp_email,'') LIKE CONCAT('%',ifnull(#txtSearch#,''),'%')
		        	</isNotEmpty>
		        </isEqual>
	   		</isNotEmpty>
	   		<isNotEmpty>
	   			<isEqual property="apiFlag" compareValue="fax">
	   				AND (emp_fax is not null and emp_fax != '')
	   			</isEqual>	   			
	   		</isNotEmpty>
	   		order by if(ifnull(A.order_num,'') = '', '9999999999', A.order_num), A.create_date desc
	<isNotEmpty property="startNum">
	   		LIMIT $startNum$, $endNum$   
    </isNotEmpty>
    
    
    
	</select>
	
	
	
	
	<insert id="AddrManageService.insertAddrBatch" parameterClass="hashmap">
		/* AddrManageService.insertAddrBatch - mariaDB */
		INSERT INTO $DB_NEOS$`t_co_addr_batch` 
			(batch_seq, seq, addr_div_nm, addr_group_nm, create_nm, emp_nm, emp_email, emp_hp, emp_tel, emp_fax, emp_addr, 
			order_num, comp_nm, regist_num, comp_tel, comp_fax, comp_addr, etc, note, create_seq, create_date, check_group_tp, batch_group_tp)
		VALUES
		<iterate property="addrList" conjunction=",">
		(
			#batchSeq#, 
			#addrList[].num#, 
			#addrList[].C0#, 
			#addrList[].C1#, 
			#empName#, 
			#addrList[].C2#, 
			#addrList[].C3#, 
			#addrList[].C4#, 
			#addrList[].C5#, 
			#addrList[].C6#, 
			#addrList[].C7#, 
			#addrList[].C8#, 
			#addrList[].C9#, 
			#addrList[].C10#, 
			#addrList[].C11#, 
			#addrList[].C12#, 
			#addrList[].C13#, 
			#addrList[].C14#, 
			#addrList[].C15#, 
			#createSeq#, 
			now(), 
			#addrList[].checkGroupTp#, 
			#addrList[].batchGroupTp#
		)
		</iterate>
	</insert>
		
		
		
		<select id="AddrManageService.getAddrBatchInfo" parameterClass="hashmap" resultClass="egovMap" remapResults="true">
		
<!-- 			SELECT  * -->
<!-- 				FROM  ( -->
<!-- 				 SELECT addr_group_seq, addr_group_tp, addr_group_nm, convert(IFNULL(COUNT(*), '0'), int) 'count' -->
<!-- 				 FROM t_tmpg_addrgroup  -->
<!-- 				 GROUP BY  addr_group_tp, addr_group_nm -->
<!-- 				) TBL -->
<!-- 				 RIGHT JOIN t_co_addr_batch BAT -->
<!-- 				  ON ( -->
<!-- 				    CASE WHEN BAT.addr_div_nm = '개인' THEN '30'  -->
<!-- 				    WHEN BAT.addr_div_nm = '회사' THEN '10'  -->
<!-- 				    WHEN BAT.addr_div_nm = '공용' THEN '20'  -->
<!-- 				    WHEN BAT.addr_div_nm = '그룹' THEN '50' END -->
<!-- 				   ) = TBL.addr_group_tp -->
<!-- 				  AND BAT.addr_group_nm = TBL.addr_group_nm -->
<!-- 			WHERE batch_seq = #retKey#	 -->
				/* AddrManageService.getAddrBatchInfo - mariaDB */
				select * from $DB_NEOS$t_co_addr_batch A
				left join
				(
				select distinct a.addr_group_seq, a.addr_group_tp, a.addr_group_nm, a.create_seq from $DB_NEOS$t_tmpg_addrgroup a
				left join $DB_NEOS$t_tmpg_addrpublic b on a.addr_group_seq = b.addr_group_seq
				where a.create_seq = #create_seq# or 
				(case when a.addr_group_tp = '10' then b.org_seq=#compSeq# end or 
				case when a.addr_group_tp = '20' then (#deptSeq# in (
																		SELECT org2.dept_seq 
																		FROM $DB_NEOS$v_org_chart org
																	 INNER JOIN $DB_NEOS$v_org_chart org2
																	  	 ON CONCAT('|',org2.path,'|') LIKE CONCAT('%|', org.path, '|%')																		 
																	 WHERE org.seq = b.org_seq and org.gbn_org = 'd'
																	   ) or b.org_seq = #empSeq# 
														 or #compSeq# in (
																	 SELECT org2.comp_seq 
																		FROM $DB_NEOS$v_org_chart org
																	 INNER JOIN $DB_NEOS$v_org_chart org2
																		 ON org2.path LIKE CONCAT(org.path, '|%')
																	 WHERE org.seq = b.org_seq and org.gbn_org = 'c'
																	   )	
																	) end or 
				case when a.addr_group_tp = '30' then a.create_seq=#empSeq# end or 
				case when a.addr_group_tp = '50' then b.org_seq=#compSeq# end)
				)tbl on A.addr_group_nm = tbl.addr_group_nm and 
				case when A.addr_div_nm = '개인' then tbl.addr_group_tp = '30'
				     when A.addr_div_nm = '공용' then tbl.addr_group_tp = '20'
				     when A.addr_div_nm = '회사' then tbl.addr_group_tp = '10' 
				     when A.addr_div_nm = '그룹' then tbl.addr_group_tp = '50' end
				     
				where A.batch_seq = #retKey#


				
		</select>
		
		
		<delete id="AddrManageService.deleteAddrBatchInfo" parameterClass="hashmap">
			/* AddrManageService.deleteAddrBatchInfo - mariaDB */
			DELETE FROM $DB_NEOS$t_co_addr_batch
			WHERE batch_seq = #retKey#		
		</delete>
		
		<insert id="AddrManageService.saveAddrBatch" parameterClass="hashmap">
		/* AddrManageService.saveAddrBatch - mariaDB */
		insert into $DB_NEOS$t_tmpg_addr
		values
			<iterate property="saveList" conjunction=",">
			(
				$DB_NEOS$nextval('addr'), #saveList[].addrGroupSeq#, #groupSeq#, #compSeq#, #saveList[].addrGroupTp#,
				#saveList[].empNm#, #saveList[].empEmail#, #saveList[].empHp#, #saveList[].empTel#, #saveList[].empFax#, '', #saveList[].empAddr#,
				'', '', #saveList[].compNm#, #saveList[].registNum#, #saveList[].compTel#, #saveList[].compFax#, '', #saveList[].compAddr#,
				#saveList[].etc#, #saveList[].note#, #empSeq#, now(), null, null, #saveList[].orderNum#	
			)		
			</iterate>
		</insert>
		
<!-- 		그룹 정보 가져오기 -->
		<select id="AddrManageService.getGroupInfo" parameterClass="hashMap" resultClass="egovMap" remapResults="true">
			/* AddrManageService.getGroupInfo - mariaDB */
			SELECT *
			FROM $DB_NEOS$t_co_group A
			WHERE use_yn = 'Y'
			and
				A.group_seq = #groupSeq#
		</select>
		
		
		<select id="AddrManageService.getCompanyNames" parameterClass="hashMap" resultClass="egovMap" remapResults="true">
			 /* AddrManageService.getCompanyNames - mariaDB */
			 select a.comp_seq, $DB_NEOS$FN_GetMultiLang(#langCode#, a.comp_name_multi) comp_name
					from $DB_NEOS$v_t_co_comp_multi a
					inner join $DB_NEOS$t_co_comp b on a.comp_seq = b.comp_seq
					 where a.comp_seq in
					(
	
					SELECT	DISTINCT 
							IGC.comp_seq 
							FROM 	(
								SELECT	comp_seq
								FROM	$DB_NEOS$t_co_emp_comp
								WHERE 	emp_seq = #empSeq#
								AND 	use_yn			= 'Y'
								AND     work_status IN ('999','004')
							)	IUC
								INNER JOIN 	(
									SELECT	GC.comp_seq		'user_comp_seq'
										, GC.groupping_seq	'groupping_seq'
										, AG.comp_seq		'comp_seq'
									FROM	$DB_NEOS$t_co_groupping_comp	GC
										INNER JOIN	$DB_NEOS$t_co_groupping_comp	AG
										ON 	GC.groupping_seq = AG.groupping_seq	
									WHERE	GC.use_yn	= 'Y'
									AND	AG.use_yn	= 'Y'
								)	IGC
								ON	IUC.comp_seq = IGC.user_comp_seq
							UNION
							SELECT	comp_seq
							FROM	$DB_NEOS$t_co_emp_comp
							WHERE 	emp_seq = #empSeq#
							AND 	use_yn			= 'Y'
							AND     work_status IN ('999','004') 	
	
	
					) order by b.order_num;
			
		</select>
		
		<select id="AddrManageService.selectContactInfo_TOTALCOUNT" parameterClass="hashmap" resultClass="string" remapResults="true">
		/* AddrManageService.selectContactInfo_TOTALCOUNT - mariaDB */
		select
				count(tce.emp_seq) as TOTAL_COUNT
				from $DB_NEOS$t_co_emp tce
				join $DB_NEOS$v_t_co_emp_multi tcem on tce.emp_seq = tcem.emp_seq
				join $DB_NEOS$t_co_emp_dept tced on tced.emp_seq = tce.emp_seq
				join $DB_NEOS$t_co_emp_comp tcec on tcec.emp_seq = tce.emp_seq and
				tcec.comp_seq=tced.comp_seq and tced.dept_seq = tcec.dept_seq
				join $DB_NEOS$v_t_co_comp_multi tccm on tccm.comp_seq = tced.comp_seq
				join $DB_NEOS$v_t_co_dept_multi tcdm on tcdm.dept_seq = tced.dept_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi duty on duty.dp_type = 'DUTY' and
				tced.duty_code = duty.dp_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi posi on posi.dp_type = 'POSITION'
				and tced.position_code = posi.dp_seq
				where
				tce.group_seq = #groupSeq# and tce.use_yn != 'D' 
				<isNotEmpty property="compSeq">
					and tced.comp_seq = #compSeq#
				</isNotEmpty>
				<isEmpty property="compSeq">				
				 	and tced.comp_seq in(
				 		select a.comp_seq
							from $DB_NEOS$v_t_co_comp_multi a
							inner join $DB_NEOS$t_co_comp b on a.comp_seq = b.comp_seq
							 where a.comp_seq in
							(
								SELECT	DISTINCT 
										IGC.comp_seq 
										FROM 	(
											SELECT	comp_seq
											FROM	$DB_NEOS$t_co_emp_comp
											WHERE 	emp_seq = #empSeq#
											AND 	use_yn			= 'Y'
											AND     work_status IN ('999','004')
										)	IUC
											INNER JOIN 	(
												SELECT	GC.comp_seq		'user_comp_seq'
													, GC.groupping_seq	'groupping_seq'
													, AG.comp_seq		'comp_seq'
												FROM	$DB_NEOS$t_co_groupping_comp	GC
													INNER JOIN	$DB_NEOS$t_co_groupping_comp	AG
													ON 	GC.groupping_seq = AG.groupping_seq	
												WHERE	GC.use_yn	= 'Y'
												AND	AG.use_yn	= 'Y'
											)	IGC
											ON	IUC.comp_seq = IGC.user_comp_seq
										UNION
										SELECT	comp_seq
										FROM	$DB_NEOS$t_co_emp_comp
										WHERE 	emp_seq = #empSeq#
										AND 	use_yn			= 'Y'
										AND     work_status IN ('999','004')    					
							)
				 	)
				</isEmpty>				
				and tcec.work_status IN ('999','004')
				<isNotEmpty property="nameAndLoginId">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%') or tce.login_id LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="deptName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) LIKE CONCAT('%',ifnull(#deptName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="positionName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) LIKE CONCAT('%',ifnull(#positionName#,''),'%')) 
				</isNotEmpty>
				<isNotEmpty property="dutyName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) LIKE CONCAT('%',ifnull(#dutyName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="telNum">
					AND ( tced.tel_num LIKE CONCAT('%',ifnull(#telNum#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="mobileTelNum">
					AND ( tce.mobile_tel_num LIKE CONCAT('%',ifnull(#mobileTelNum#,''),'%'))
				</isNotEmpty>
		</select>
		
		<select id="AddrManageService.selectContactInfo" parameterClass="hashMap" resultClass="egovMap" remapResults="true">
			/* AddrManageService.selectContactInfo - mariaDB */
			select
				tce.emp_seq,
				tce.group_seq,
				tccm.comp_seq,
				#langCode# as lang_code,
				$DB_NEOS$FN_GetMultiLang(#langCode#,tccm.comp_name) as comp_name,
				tcdm.dept_seq,
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) as dept_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) as position_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) as duty_name,				
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) as emp_name,
                CONCAT($DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name),'(', tce.login_id, ')') as emp_name_id,
                tce.login_id as login_id,
				tce.email_addr as email_addr,
				vtcc.email_domain as email_domain,
                CONVERT(CASE WHEN ( SELECT IFNULL(t2.option_value, t1.option_d_value) AS option_value
                                      FROM tcmg_optionset t1
                                      LEFT JOIN tcmg_optionvalue t2 ON t1.option_id = t2.option_id AND t2.co_id = '0'
                                     WHERE t1.option_id = 'cm2200' ) = 0 THEN DATE_FORMAT(tce.bday, '%Y-%m-%d')
                             ELSE DATE_FORMAT(tce.bday, '%m-%d')
                        END, char(20)
                ) AS b_day,
				tced.tel_num as tel_num,
				tce.home_tel_num as home_tel_num,
				tce.mobile_tel_num as mobile_tel_num,
				tcec.erp_emp_seq as erp_emp_seq
			from $DB_NEOS$t_co_emp tce
				join $DB_NEOS$v_t_co_emp_multi tcem on tce.emp_seq = tcem.emp_seq
				join $DB_NEOS$t_co_emp_dept tced on tced.emp_seq = tce.emp_seq
				join $DB_NEOS$t_co_emp_comp tcec on tcec.emp_seq = tce.emp_seq and
				tcec.comp_seq=tced.comp_seq and tced.dept_seq = tcec.dept_seq
				join $DB_NEOS$v_t_co_comp_multi tccm on tccm.comp_seq = tced.comp_seq
				join $DB_NEOS$v_t_co_dept_multi tcdm on tcdm.dept_seq = tced.dept_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi duty on duty.dp_type = 'DUTY' and
				tced.duty_code = duty.dp_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi posi on posi.dp_type = 'POSITION'
				and tced.position_code = posi.dp_seq
				left join $DB_NEOS$t_co_comp vtcc on vtcc.comp_seq = tced.comp_seq
			where
				tce.group_seq = #groupSeq# and tce.use_yn != 'D' 				
				<isNotEmpty property="compSeq">
					and tced.comp_seq = #compSeq#
				</isNotEmpty>				
				<isEmpty property="compSeq">				
				 	and tced.comp_seq in(
				 		select a.comp_seq
							from $DB_NEOS$v_t_co_comp_multi a
							inner join $DB_NEOS$t_co_comp b on a.comp_seq = b.comp_seq
							 where a.comp_seq in
							(
								SELECT	DISTINCT 
										IGC.comp_seq 
										FROM 	(
											SELECT	comp_seq
											FROM	$DB_NEOS$t_co_emp_comp
											WHERE 	emp_seq = #empSeq#
											AND 	use_yn			= 'Y'
											AND     work_status IN ('999','004')
										)	IUC
											INNER JOIN 	(
												SELECT	GC.comp_seq		'user_comp_seq'
													, GC.groupping_seq	'groupping_seq'
													, AG.comp_seq		'comp_seq'
												FROM	$DB_NEOS$t_co_groupping_comp	GC
													INNER JOIN	$DB_NEOS$t_co_groupping_comp	AG
													ON 	GC.groupping_seq = AG.groupping_seq	
												WHERE	GC.use_yn	= 'Y'
												AND	AG.use_yn	= 'Y'
											)	IGC
											ON	IUC.comp_seq = IGC.user_comp_seq
										UNION
										SELECT	comp_seq
										FROM	$DB_NEOS$t_co_emp_comp
										WHERE 	emp_seq = #empSeq#
										AND 	use_yn			= 'Y'
										AND     work_status IN ('999','004')    					
							)
				 	)
				</isEmpty>
				and tcec.work_status IN ('999','004')
				<isNotEmpty property="nameAndLoginId">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%') or tce.login_id LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="deptName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) LIKE CONCAT('%',ifnull(#deptName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="positionName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) LIKE CONCAT('%',ifnull(#positionName#,''),'%')) 
				</isNotEmpty>
				<isNotEmpty property="dutyName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) LIKE CONCAT('%',ifnull(#dutyName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="telNum">
					AND ( tced.tel_num LIKE CONCAT('%',ifnull(#telNum#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="mobileTelNum">
					AND ( tce.mobile_tel_num LIKE CONCAT('%',ifnull(#mobileTelNum#,''),'%'))
				</isNotEmpty>
				order by vtcc.comp_seq, tced.order_text
				<isNotEmpty property="startNum">
				   		LIMIT $startNum$, $endNum$   
			    </isNotEmpty>
				
		</select>
		
		
		<select id="AddrManageService.selectContactInfoForExcel" parameterClass="hashMap" resultClass="egovMap" remapResults="true">
			/* AddrManageService.selectContactInfoForExcel - mariaDB */
			select
				$DB_NEOS$FN_GetMultiLang(#langCode#,tccm.comp_name) as comp_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) as dept_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) as position_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) as duty_name,				
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) as emp_name,
                tce.login_id as login_id,
				concat(tce.email_addr, '@' ,vtcc.email_domain) as emailAddr,
                CONVERT(CASE WHEN ( SELECT IFNULL(t2.option_value, t1.option_d_value) AS option_value
                                      FROM tcmg_optionset t1
                                      LEFT JOIN tcmg_optionvalue t2 ON t1.option_id = t2.option_id AND t2.co_id = '0'
                                     WHERE t1.option_id = 'cm2200' ) = 0 THEN DATE_FORMAT(tce.bday, '%Y-%m-%d')
                             ELSE DATE_FORMAT(tce.bday, '%m-%d')
                        END, char(20)
                ) AS b_day,
				tced.tel_num as tel_num,
				tce.home_tel_num as home_tel_num,
				tce.mobile_tel_num as mobile_tel_num,
				tcec.erp_emp_seq as erp_emp_seq,
				concat(tcem.addr, ' ', tcem.detail_addr) as empAddr
			from t_co_emp tce
				join $DB_NEOS$v_t_co_emp_multi tcem on tce.emp_seq = tcem.emp_seq
				join $DB_NEOS$t_co_emp_dept tced on tced.emp_seq = tce.emp_seq
				join $DB_NEOS$t_co_emp_comp tcec on tcec.emp_seq = tce.emp_seq and
				tcec.comp_seq=tced.comp_seq and tced.dept_seq = tcec.dept_seq
				join $DB_NEOS$v_t_co_comp_multi tccm on tccm.comp_seq = tced.comp_seq
				join $DB_NEOS$v_t_co_dept_multi tcdm on tcdm.dept_seq = tced.dept_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi duty on duty.dp_type = 'DUTY' and
				tced.duty_code = duty.dp_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi posi on posi.dp_type = 'POSITION'
				and tced.position_code = posi.dp_seq
				left join $DB_NEOS$t_co_comp vtcc on vtcc.comp_seq = tced.comp_seq
			where
				tce.group_seq = #groupSeq# and tce.use_yn != 'D' 
				<isNotEmpty property="compSeq">
					and tced.comp_seq = #compSeq#
				</isNotEmpty>
				<isEmpty property="compSeq">				
				 	and tced.comp_seq in(
				 		select a.comp_seq
							from $DB_NEOS$v_t_co_comp_multi a
							inner join $DB_NEOS$t_co_comp b on a.comp_seq = b.comp_seq
							 where a.comp_seq in
							(
								SELECT	DISTINCT 
										IGC.comp_seq 
										FROM 	(
											SELECT	comp_seq
											FROM	$DB_NEOS$t_co_emp_comp
											WHERE 	emp_seq = #empSeq#
											AND 	use_yn			= 'Y'
											AND     work_status IN ('999','004')
										)	IUC
											INNER JOIN 	(
												SELECT	GC.comp_seq		'user_comp_seq'
													, GC.groupping_seq	'groupping_seq'
													, AG.comp_seq		'comp_seq'
												FROM	$DB_NEOS$t_co_groupping_comp	GC
													INNER JOIN	$DB_NEOS$t_co_groupping_comp	AG
													ON 	GC.groupping_seq = AG.groupping_seq	
												WHERE	GC.use_yn	= 'Y'
												AND	AG.use_yn	= 'Y'
											)	IGC
											ON	IUC.comp_seq = IGC.user_comp_seq
										UNION
										SELECT	comp_seq
										FROM	$DB_NEOS$t_co_emp_comp
										WHERE 	emp_seq = #empSeq#
										AND 	use_yn			= 'Y'
										AND     work_status IN ('999','004')    					
							)
				 	)
				</isEmpty>
				and tcec.work_status IN ('999','004')
				<isNotEmpty property="nameAndLoginId">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%') or tce.login_id LIKE CONCAT('%',ifnull(#nameAndLoginId#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="deptName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) LIKE CONCAT('%',ifnull(#deptName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="positionName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) LIKE CONCAT('%',ifnull(#positionName#,''),'%')) 
				</isNotEmpty>
				<isNotEmpty property="dutyName">
					AND ( $DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) LIKE CONCAT('%',ifnull(#dutyName#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="telNum">
					AND ( tced.tel_num LIKE CONCAT('%',ifnull(#telNum#,''),'%'))
				</isNotEmpty>
				<isNotEmpty property="mobileTelNum">
					AND ( tce.mobile_tel_num LIKE CONCAT('%',ifnull(#mobileTelNum#,''),'%'))
				</isNotEmpty>
				order by vtcc.comp_seq, tced.order_text				
		</select>
		
		<select id="AddrManageService.selectSpecificContactInfo" parameterClass="hashMap" resultClass="egovMap" remapResults="true">
			/* AddrManageService.selectSpecificContactInfo - mariaDB */
			select
				tce.emp_seq,
				tce.group_seq,
				tccm.comp_seq,
				#langCode# as lang_code,
				$DB_NEOS$FN_GetMultiLang(#langCode#,tccm.comp_name) as comp_name,
				tcdm.dept_seq,
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcdm.dept_name) as dept_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,posi.dp_name) as position_name,
				$DB_NEOS$FN_GetMultiLang(#langCode#,duty.dp_name) as duty_name,				
				$DB_NEOS$FN_GetMultiLang(#langCode#,tcem.emp_name) as emp_name,
				tce.email_addr as email_addr,
				vtcc.comp_domain as comp_domain,
				convert(tce.bday, char(20)) as b_day,
				tced.tel_num as tel_num,
				tce.home_tel_num as home_tel_num,
				vtcc.fax_num as fax_domain,
				tce.mobile_tel_num as mobile_tel_num,
				tcec.erp_emp_seq as erp_emp_seq,
				tcem.detail_addr as detail_addr,
				tcem.main_work as main_work
			from $DB_NEOS$t_co_emp tce
				join $DB_NEOS$v_t_co_emp_multi tcem on tce.emp_seq = tcem.emp_seq
				join $DB_NEOS$t_co_emp_dept tced on tced.emp_seq = tce.emp_seq
				join $DB_NEOS$t_co_emp_comp tcec on tcec.emp_seq = tce.emp_seq and
				tcec.comp_seq=tced.comp_seq and tced.dept_seq = tcec.dept_seq
				join $DB_NEOS$v_t_co_comp_multi tccm on tccm.comp_seq = tced.comp_seq
				join $DB_NEOS$v_t_co_dept_multi tcdm on tcdm.dept_seq = tced.dept_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi duty on duty.dp_type = 'DUTY' and
				tced.duty_code = duty.dp_seq
				left join $DB_NEOS$v_t_co_comp_duty_position_multi posi on posi.dp_type = 'POSITION'
				and tced.position_code = posi.dp_seq
				left join $DB_NEOS$t_co_comp vtcc on vtcc.comp_seq = tced.comp_seq 
			where
				tce.group_seq = #groupSeq# and tce.use_yn != 'D' and tccm.comp_seq = #compSeq#
				and tcec.work_status IN ('999','004')
				and tce.emp_seq=#empSeq#;
				
				
				
		</select>
		
		
		<update id="AddrManageService.UpdateAddrInfo" parameterClass="hashmap">
		/*  AddrManageService.UpdateAddrInfo - MariaDB  */
			update 
				$DB_NEOS$t_tmpg_addr
			set
				addr_div = #addr_group_tp#
			where
				addr_group_seq = #addr_group_id#			
		</update>
		
		
		<select id="AddrManageService.GetAddrGroupTpList" parameterClass="hashmap" resultClass="egovMap">
			select 
				$DB_NEOS$FN_GetMultiLang(#langCode#, b.detail_name_multi) tpName,  
				a.detail_code tpCode 
			from $DB_NEOS$t_co_code_detail a
			inner join $DB_NEOS$v_t_co_code_detail_multi b on a.detail_code = b.detail_code and a.code = b.code
			where 
				a.code = #code#
		</select>
		
		
		<select id="AddrManageService.GetAddrGrouopTarget" parameterClass="hashmap" resultClass="egovMap">
			SELECT 
				distinct concat(addr_group_nm, addr_group_tp) target, addr_group_tp 
			from 
				$DB_NEOS$t_tmpg_addrgroup
		</select>
		
		
		
		
</sqlMap>