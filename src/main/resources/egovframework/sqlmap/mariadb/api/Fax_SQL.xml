<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="faxDAO">

	<select id="faxDAO.getGroupInfo" parameterClass="hashmap" resultClass="egovMap">
		SELECT
			*
		FROM $DB_NEOS$t_co_group
		<isNotEmpty property="groupSeq">
			where group_seq = #groupSeq#		
		</isNotEmpty>
		LIMIT 1
	</select>

	<!-- 마스터 웹 용 -->
	<select id="faxDAO.getFaxListMaster" parameterClass="hashmap" resultClass="hashmap">
		SELECT  fax_seq as "faxSeq"
		      , bill36524_id as "bill36524Id"
		      , agent_id as "agentId"
		      , agent_key as "agentKey"
		      , point as "point"
		      , use_yn as "useYn"
		      , TO_BASE64(agent_id) as "agentIdEncode"
		FROM $DB_NEOS$t_fx_fax
		WHERE group_seq = #groupSeq#
		<isNotNull property="bill36524Id">
			<isNotEmpty property="bill36524Id">
			AND bill36524_id like CONCAT('%', ifnull(#bill36524Id#,''), '%')
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="useYn">
			<isNotEmpty property="useYn">
			AND use_yn = #useYn#
			</isNotEmpty>
		</isNotNull>
	</select>
	
	<select id="faxDAO.getFaxNoListMaster" parameterClass="hashmap" resultClass="hashmap">
		SELECT  fax_no as "faxNo"
			  , CASE WHEN EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no) THEN 'Y' ELSE 'N' END as "syncYn"
		      , use_begin_date as "useBeginDate"
		      , use_end_date as "useEndDate"
		      , CASE 
		           WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> SYSDATE() THEN 'C'  
				  WHEN DATE_SUB(use_end_date, INTERVAL 1 DAY) <![CDATA[<]]> SYSDATE() THEN 'B'
				  WHEN DATE_SUB(use_end_date,INTERVAL 1 MONTH) <![CDATA[<]]> SYSDATE() THEN 'D'
				  ELSE 'A'
		        END as "status"
		FROM $DB_NEOS$t_fx_fax_no tffn
		WHERE fax_seq = #faxSeq#
	</select>
	
	<select id="faxDAO.getDuplicateYnMaster" parameterClass="hashmap" resultClass="String">
		SELECT CASE WHEN EXISTS(
		  SELECT 1 FROM $DB_NEOS$t_fx_fax
		  WHERE group_seq = #groupSeq#
		  AND bill36524_id = #bill36524Id#)
		THEN 'Y' ELSE 'N' END as "duplicate"
	</select>
	
	<insert id="faxDAO.addFaxMaster" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_fx_fax(
		    fax_seq
		  , group_seq
		  , bill36524_id
		  , bill36524_pwd
		  , agent_id
		  , agent_key
		  , point
		  , use_yn
		) VALUES (
		    #faxSeq#
		  , #groupSeq#
		  , #bill36524Id#
		  , #bill36524Pwd#
		  , #agentId#
		  , #agentKey#
		  , #point#
		  , #useYn#
		)
	</insert>
	
	<update id="faxDAO.editFaxMaster" parameterClass="hashmap">
		UPDATE $DB_NEOS$t_fx_fax 
		SET <isNull property="refresh">
				bill36524_id = #bill36524Id#
			  , bill36524_pwd = #bill36524Pwd#
			  , agent_id = #agentId#
			  , agent_key = #agentKey#
			  , use_yn = #useYn#
			  ,
			</isNull>
			point = #point#
		WHERE fax_seq = #faxSeq#
		<isNull property="refresh">
		AND group_seq = #groupSeq#
		</isNull>
	</update>
	
	<insert id="faxDAO.addFaxNoMaster" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_fx_fax_no (
		    fax_seq
		  , fax_no
		  , use_begin_date
		  , use_end_date
		) VALUES (
		    #faxSeq#
		  , #FaxNo#
		  , #UseBeginDate#
		  , #UseEndDate#
		)
	</insert>
	
	<delete id="faxDAO.delFaxMaster" parameterClass="hashmap">
		DELETE FROM $DB_NEOS$t_fx_fax 
		WHERE fax_seq = #faxSeq#
		AND group_seq = #groupSeq#
	</delete>
	
	<delete id="faxDAO.delFaxNoMaster" parameterClass="hashmap">
		DELETE FROM $DB_NEOS$t_fx_fax_no 
		WHERE fax_seq = #faxSeq#
	</delete>
	
	<update id="faxDAO.editFaxNoMaster" parameterClass="hashmap">
		UPDATE $DB_NEOS$t_fx_fax_no 
		SET use_begin_date = #UseBeginDate#, use_end_date = #UseEndDate#
		WHERE fax_seq = #faxSeq#
		AND fax_no = #FaxNo#
	</update>
	
	<select id="faxDAO.getAgentIdAndAgentKeyMaster" parameterClass="hashmap" resultClass="hashmap">
	    SELECT 	tff.agent_id as "AgentID"
	    	  , tff.agent_key as "AgentKey"
	    FROM $DB_NEOS$t_fx_fax tff
	    WHERE fax_seq = #faxSeq#
	</select>
	
	<select id="faxDAO.getFaxNoCompListMaster" parameterClass="hashmap" resultClass="hashmap">
		SELECT tffnc.comp_seq as "compSeq"
			 , $DB_NEOS$FN_GetMultiLang(#langCode#,tccm.comp_name_multi) as "compName"
		FROM $DB_NEOS$t_fx_fax_no_comp tffnc
		JOIN $DB_NEOS$v_t_co_comp_multi tccm
		ON tffnc.group_seq = tccm.group_seq
		AND tffnc.comp_seq = tccm.comp_seq
		WHERE fax_seq = #faxSeq#
		AND fax_no = #faxNo#
		AND tffnc.group_seq = #groupSeq#
	</select>
	
	<delete id="faxDAO.delFaxNoCompMaster" parameterClass="hashmap">
		DELETE FROM $DB_NEOS$t_fx_fax_no_comp
		WHERE fax_seq = #faxSeq#
		AND fax_no = #faxNo#
	</delete>
	
	<insert id="faxDAO.addFaxNoCompMaster" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_fx_fax_no_comp (
		    fax_seq
		  , fax_no
		  , group_seq
		  , comp_seq
		) VALUES (
		    #faxSeq#
		  , #faxNo#
		  , #groupSeq#
		  , #compSeq#
		)
	</insert>
	
	
	<!-- API 외 추가 (팩스아이디, 팩스비밀번호, 사용여부 가져오기) -->
	<select id="faxDAO.gefFaxInfo" parameterClass="hashmap" resultClass="hashmap">
		SELECT 				A.bill36524_id
				   			, A.bill36524_pwd
				   			, A.use_yn 
				   			, A.point
				   			, IFNULL(GROUP_CONCAT(C.comp_seq SEPARATOR '|'), '') AS smsCompSeq
				   			, IFNULL(GROUP_CONCAT($DB_NEOS$FN_GetMultiLang(#langCode#,C.comp_name_multi) SEPARATOR ', '), '') AS smsComp
		FROM   				$DB_NEOS$t_fx_fax		A
		LEFT OUTER JOIN		$DB_NEOS$t_co_comp 		B
		ON					A.bill36524_id = B.sms_id
		LEFT OUTER JOIN		$DB_NEOS$v_t_co_comp_multi	C
		ON					B.comp_seq = C.comp_seq
		WHERE  fax_seq = #faxSeq#
		GROUP BY		A.bill36524_id
	</select>	
	
	
	
	<!-- 관리자 -->
	<select id="faxDAO.getFaxNoListAdmin" parameterClass="hashmap" resultClass="hashmap">
		SELECT tffn.fax_seq as "faxSeq" 
			  , tffn.fax_no as "faxNo"
			  , CASE WHEN EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no) THEN 'Y' ELSE 'N' END as "syncYn"
		      , use_begin_date as "useBeginDate"
		      , use_end_date as "useEndDate"
		      , CASE 
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> DATE_SUB(SYSDATE(), INTERVAL 1 MONTH) THEN 'D'
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> DATE_SUB(SYSDATE(), INTERVAL 1 DAY) THEN 'B'
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> SYSDATE() THEN 'C'
		          ELSE 'A'
		        END as "status"
		      , ifnull(tffn.nick_name,'') as "nickName"
		FROM $DB_NEOS$t_fx_fax_no tffn
		JOIN $DB_NEOS$t_fx_fax_no_comp tffnc
		ON tffn.fax_seq = tffnc.fax_seq
		AND tffn.fax_no = tffnc.fax_no
		WHERE tffnc.group_seq = #groupSeq#
		AND tffnc.comp_seq = #compSeq#
		<isNotNull property="faxNo">
			<isNotEmpty property="faxNo">
			AND tffn.fax_no like CONCAT('%', ifnull(#faxNo#,''), '%') 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="syncYn">
			<isNotEmpty property="syncYn">
			<isEqual property="syncYn" compareValue="Y">
			AND EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no)
			</isEqual>
			<isEqual property="syncYn" compareValue="N">
			AND NOT EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no)
			</isEqual>
			</isNotEmpty>
		</isNotNull>
	</select>
	
	<select id="faxDAO.getFaxSyncList" parameterClass="hashmap" resultClass="hashmap">
		SELECT  org_type as "orgType"
		      , group_seq as "groupSeq"
		      , comp_seq as "compSeq"
		      , org_seq  as "orgSeq"
		FROM $DB_NEOS$t_fx_fax_sync
		WHERE fax_seq = #faxSeq#
		AND fax_no = #faxNo#
	</select>
	
<!-- 	<insert id="faxDAO.addFaxSync" parameterClass="hashmap">
		INSERT INTO t_fx_fax_sync (
		    fax_seq
		  , fax_no
		  , org_type
		  , group_seq
		  , comp_seq
		  , org_seq
		) VALUES (
		    #faxSeq#
		  , #faxNo#
		  , #orgType#
		  , #groupSeq#
		  , #compSeq#
		  , #orgSeq#
		)
	</insert> -->
	
	<insert id="faxDAO.addFaxSync" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_fx_fax_sync 
			SET
			    fax_seq		=   #faxSeq#
			  , fax_no		=	 #faxNo#
			  , org_type	=	 #orgType#
			  , group_seq	= 	 #groupSeq#
			  , comp_seq	=	 #compSeq#
			  , org_seq		=	 #orgSeq#
			ON DUPLICATE KEY UPDATE
				fax_seq		=   #faxSeq#
			  , fax_no		=	 #faxNo#
			  , org_type	=	 #orgType#
			  , group_seq	= 	 #groupSeq#
			  , comp_seq	=	 #compSeq#
			  , org_seq		=	 #orgSeq#
	</insert>
	
	<delete id="faxDAO.delFaxSync" parameterClass="hashmap">
		DELETE FROM $DB_NEOS$t_fx_fax_sync 
		WHERE fax_seq = #faxSeq#
		AND fax_no = #faxNo#
		AND org_type = #orgType#
		AND group_seq = #groupSeq#
		AND comp_seq = #compSeq#
		AND org_seq = #orgSeq#
	</delete>
	
	
	
	
	<!-- 사용자 -->
	<select id="faxDAO.getFaxNoListUser" parameterClass="hashmap" resultClass="hashmap">
		SELECT DISTINCT 
				tff.fax_seq as "faxSeq" 
		      , tff.agent_id as "agentId"
			  , tff.agent_key as "agentKey"
			  , tffs.fax_no as "faxNo"
			  , (select `option` from $DB_NEOS$t_fx_fax_nickname_option limit 1 ) `option`
			  , ifnull(tffn.nick_name, '') as nickName
		FROM $DB_NEOS$t_fx_fax_sync tffs
		  JOIN $DB_NEOS$t_fx_fax tff ON tffs.fax_seq = tff.fax_seq
		  inner join $DB_NEOS$t_fx_fax_no tffn on tffs.fax_seq = tffn.fax_seq and tffs.fax_no = tffn.fax_no
		<!-- 1차에서 겸직처리 없이 감 추후 겸직 처리 추가시 아래 WHERE 절 지우고 주석 제거 우선 사용하도록 변경 안하면 하위 주석 부분 사용 -->
	  	<isNotEmpty property="compSeq">
	    WHERE 
	    	<isNotEmpty property="depts"> 
	    		(case 
	    			when tffs.org_type = 'E' then tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq = #empSeq#
	    			else 
	    			<iterate property="depts" open=" org_seq IN (" close=")" conjunction="," >
						#depts[]#
					</iterate>
					end
				)
		  	</isNotEmpty>
		  	<isEmpty property="depts"> 
	    		tffs.org_type = 'E' AND tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq = #empSeq#			
		  	</isEmpty>	      
    	</isNotEmpty>	   
		ORDER BY tffs.group_seq, tffs.comp_seq, tff.agent_id, tff.agent_key, tffs.fax_no
	</select>
	
	
	
	<!-- 모바일 용 -->
	<select id="faxDAO.getDeptPath" parameterClass="hashmap" resultClass="String">
		SELECT REPLACE(path, '|', ',') FROM $DB_NEOS$t_co_dept
		WHERE dept_seq IN (
		  	SELECT dept_seq
		  	FROM $DB_NEOS$t_co_emp_dept
		  	WHERE group_seq = #groupSeq#
		  	<isNotNull property="compSeq">
		  		<isNotEmpty property="compSeq">
		  		AND comp_seq = #compSeq#
		  		</isNotEmpty>
		  	</isNotNull>
	        AND emp_seq = #empSeq#
	        AND use_yn = 'Y'
		  	)
	</select>
	
	<select id="faxDAO.getUserCompList" parameterClass="hashmap" resultClass="String">
		SELECT DISTINCT comp_seq
		FROM $DB_NEOS$t_co_emp_dept
		WHERE group_seq = #groupSeq#
		AND emp_seq = #empSeq#
		AND use_yn = 'Y'
	</select>
	
	<select id="faxDAO.getFaxNoListForMobile" parameterClass="hashmap" resultClass="hashmap">
	    SELECT DISTINCT 
	            tff.agent_id as "AgentID"
	    	  , tff.agent_key as "AgentKey"
	    	  , tffs.fax_no as "FaxNo"
	   	FROM $DB_NEOS$t_fx_fax_sync tffs
        JOIN $DB_NEOS$t_fx_fax tff
        ON tffs.fax_seq = tff.fax_seq
        <!-- 1차에서 겸직처리 없이 감 추후 겸직 처리 추가시 아래 WHERE 절 지우고 주석 제거  현재 적용함 제외할 시 하위 주석처리된 구문 사용-->
        <isNotNull property="compSeq">
		  	<isNotEmpty property="compSeq">
	    WHERE ((tffs.org_type = 'E' AND tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq = #empSeq#)
	    <isNotNull property="depts">
	    	<isNotEmpty property="depts"> 
	    	<iterate  prepend="OR" property="depts" open=" org_seq IN (" close=")" conjunction="," >
			#depts[]#
			</iterate>
		  	<!-- OR (tffs.org_type = 'D' AND tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq IN (#depts#)) -->
		  	</isNotEmpty>
		</isNotNull>
	      )
	    	</isNotEmpty>
	    </isNotNull>
	    <!-- 
	    WHERE ((tffs.org_type = 'E' AND tffs.group_seq = #groupSeq# AND org_seq = #empSeq#)
	    <isNotNull property="depts">
	    	<isNotEmpty property="depts">
		  	OR (tffs.org_type = 'D' AND tffs.group_seq = #groupSeq# AND org_seq IN ($depts$))
		  	</isNotEmpty>
		</isNotNull>
	      )
	      -->
	    ORDER BY tffs.group_seq, tffs.comp_seq, tff.agent_id, tff.agent_key, tffs.fax_no
	</select>
	
	<select id="faxDAO.getAlarmUserList" parameterClass="hashmap" resultClass="hashmap">
		SELECT DISTINCT groupSeq, compSeq, empSeq
		FROM (
		    SELECT  tffs.group_seq as "groupSeq"
		          , tffs.comp_seq as "compSeq"
		          , tffs.org_seq as "empSeq"
		    FROM $DB_NEOS$t_fx_fax tff
		    JOIN $DB_NEOS$t_fx_fax_sync tffs
		    ON tff.fax_seq = tffs.fax_seq
		    WHERE tff.agent_id = #AgentID#
		    AND tff.agent_key = #AgentKey#
		    AND tffs.fax_no = #FaxNo#
		    AND tffs.org_type = 'E'
		    UNION
		    SELECT  tced.group_seq as "groupSeq"
		          , tced.comp_seq as "compSeq"
		          , tced.emp_seq as "empSeq"
		    FROM $DB_NEOS$t_fx_fax tff
		    JOIN $DB_NEOS$t_fx_fax_sync tffs
		    ON tff.fax_seq = tffs.fax_seq
		    JOIN $DB_NEOS$t_co_emp_dept tced
		    ON tffs.org_type = 'D' AND tffs.group_seq = tced.group_seq AND tffs.org_seq = tced.dept_seq
		    WHERE tff.agent_id = #AgentID#
		    AND tff.agent_key = #AgentKey#
		    AND tffs.fax_no = #FaxNo#
		    AND tffs.org_type = 'D'
		) A
	</select>
	
	
	
	<!--  장지훈 추가 -->
		<!-- 팩스번호 목록 조회 -->
	<select id="faxDAO.getFaxIDAndNO" parameterClass="hashmap" resultClass="hashmap">
		SELECT	 	tff.fax_seq AS "faxSeq"
				  	, tff.bill36524_id AS "bill36524ID"
				  	, tffn.fax_no AS "faxNO"
				  	, tff.group_seq AS "groupSeq"
				  	, ifnull(tffn.nick_name,'') AS "nickName"
		FROM		$DB_NEOS$t_fx_fax tff 
		JOIN		$DB_NEOS$t_fx_fax_no tffn
		ON		tff.fax_seq = tffn.fax_seq
		WHERE	use_end_date > #today# 
			AND	group_seq = #groupSeq#
			AND  use_yn = "Y" 
		<isEqual property="gubun" compareValue="faxNO">
			AND tffn.fax_no like CONCAT('%', ifnull(#search#,''), '%')
		</isEqual>
		<isEqual property="gubun" compareValue="faxID">
			AND tff.bill36524_id like CONCAT('%', ifnull(#search#,''), '%')
		</isEqual>
			
	</select>

	<select id="faxDAO.getFaxComp" parameterClass="hashmap" resultClass="hashmap">
   			SELECT  
			     oc.group_seq as grp_seq
			    ,oc.gbn_org as gbn_org
			    ,oc.comp_seq as comp_seq
			    ,$DB_NEOS$FN_GetMultiLang(#langCode#,ccm.comp_name_multi) as comp_name
			    ,oc.biz_seq as biz_seq
			    ,$DB_NEOS$FN_GetMultiLang(#langCode#,cbm.biz_name_multi) as biz_name
			    ,oc.dept_seq as dept_seq
			    ,$DB_NEOS$FN_GetMultiLang(#langCode#,cdm.dept_name_multi) as dept_name
			    ,oc.parent_seq as parent_seq
			    ,oc.level as level
			    ,oc.order_num as "order"
			    ,oc.path
			    ,(CASE WHEN oc.gbn_org = 'c' AND cb.display_yn = 'Y' THEN CONCAT(ccm.comp_name, '|', CONCAT(cbm.biz_name, '|', cdm.path_name))
			        WHEN cb.display_yn = 'N' THEN CONCAT(ccm.comp_name, '|', cdm.path_name) END) as path_name
			    ,a.member as member
			    ,ifnull(cc.sms_id, '') as sms_id
			FROM $DB_NEOS$v_org_chart oc
			LEFT JOIN
			(
			    SELECT A.path, IFNULL(SUM(B.cnt), 0) AS member
			    FROM $DB_NEOS$v_org_chart A
			    LEFT JOIN
			    (
			        SELECT CASE WHEN cb.display_yn = 'Y' THEN CONCAT(cb.comp_seq, '|', CONCAT(cb.biz_seq, '|', cd.path))
			            ELSE CONCAT(cb.comp_seq, '|', cd.path) END as path, COUNT(ed.emp_seq) cnt
			        FROM $DB_NEOS$t_co_dept cd, $DB_NEOS$t_co_emp_dept ed, $DB_NEOS$t_co_biz cb
			        WHERE ed.group_seq = #groupSeq#
			        <isNotEmpty property="compSeqList">
				    AND ed.comp_seq IN ($compSeqList$)
				    </isNotEmpty>
			            AND ed.group_seq = cd.group_seq
			            AND ed.dept_seq = cd.dept_seq
			            AND ed.group_seq = cb.group_seq
			            AND ed.biz_seq = cb.biz_seq
			            AND ed.use_yn = 'Y'
			            AND cd.use_yn = 'Y'
			            AND cb.use_yn = 'Y'
			        GROUP BY cd.path
			    ) B
			    ON B.path like concat(A.path,'%')
			    WHERE A.group_seq =  #groupSeq#
			    <isNotEmpty property="compSeqList">
			    and A.comp_seq IN ($compSeqList$)
			    </isNotEmpty>
			    GROUP BY A.path  
			) a
			ON oc.path = a.path
			LEFT JOIN $DB_NEOS$t_co_biz cb
			ON      oc.biz_seq = cb.biz_seq
			LEFT JOIN $DB_NEOS$v_t_co_comp_multi ccm
			ON      oc.comp_seq = ccm.comp_seq
			LEFT JOIN $DB_NEOS$t_co_comp cc
			ON	ccm.comp_seq = cc.comp_seq
			LEFT JOIN $DB_NEOS$v_t_co_biz_multi cbm
			ON      oc.biz_seq = cbm.biz_seq
			LEFT JOIN $DB_NEOS$v_t_co_dept_multi cdm
			ON      oc.dept_seq = cdm.dept_seq           
			WHERE	oc.group_seq =  #groupSeq#
			<isNotEmpty property="compSeqList">
				and oc.comp_seq IN ($compSeqList$)
			</isNotEmpty>
			<isNotEmpty property="gbnOrgList">
				and oc.gbn_org IN ($gbnOrgList$)
			</isNotEmpty>
			<isEqual property="gubun" compareValue="compCode">
				AND oc.comp_seq like CONCAT('%', ifnull(#search#,''), '%')
			</isEqual>
			<isEqual property="gubun" compareValue="compName">
				AND ccm.comp_name like CONCAT('%', ifnull(#search#,''), '%')
			</isEqual>			
			ORDER BY oc.path		
	</select>
	
		<select id="faxDAO.getDeptName" parameterClass="hashmap" resultClass="hashmap">
		SELECT   comp_name
				   , dept_name
				   , 'D' AS gubun
				   , tcd.dept_seq as 'orgSeq'
				   , tcd.group_seq
				   , tcd.comp_seq
				   , '' as 'man_grade_name'
				   , '' as 'login_id'
		FROM $DB_NEOS$t_co_dept tcd 
			JOIN $DB_NEOS$v_t_co_dept_multi tcdm ON tcd.dept_seq = tcdm.dept_seq 
			JOIN $DB_NEOS$v_t_co_comp_multi tccm ON tcdm.comp_seq = tccm.comp_seq 
		WHERE tcd.group_seq = #groupSeq# AND tcd.comp_seq = #compSeq# AND tcd.dept_seq = #orgSeq#
	</select>
	
	<select id="faxDAO.getUserName" parameterClass="hashmap" resultClass="hashmap">
		SELECT		comp_name
					  , dm.dept_name
					  , em.emp_name
					  , 'E' as 'gubun'
					  , ec.emp_seq as 'orgSeq'
					  , ec.group_seq
					  , ec.comp_seq
					  , ec.dept_seq
					  , $DB_NEOS$get_emp_duty_position_name(ed.group_seq, ed.comp_seq, ed.duty_code, 'DUTY', 'kr') AS man_grade_name  
					  , e.login_id
		FROM			$DB_NEOS$t_co_emp e
		JOIN			$DB_NEOS$t_co_emp_multi em on e.emp_seq = em.emp_seq and em.lang_code = 'kr'
		JOIN			$DB_NEOS$t_co_emp_comp ec on e.emp_seq = ec.emp_seq and ec.comp_seq = #compSeq#
		JOIN			$DB_NEOS$t_co_emp_dept ed on ec.emp_seq = ed.emp_seq and ec.dept_seq = ed.dept_seq
		JOIN			$DB_NEOS$t_co_dept_multi dm on ed.dept_seq = dm.dept_seq and dm.lang_code = 'kr'
		JOIN            $DB_NEOS$t_co_comp_multi cm on cm.comp_seq = #compSeq# and cm.lang_code = 'kr'
		WHERE		    e.emp_seq = #orgSeq#
	</select>
	
	<select id="faxDAO.getFaxNoInfoAdmin" parameterClass="hashmap" resultClass="hashmap">
		SELECT tffn.fax_seq as "faxSeq"  
			  ,	tffn.fax_no as "faxNo"
			  , CASE WHEN EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no) THEN 'Y' ELSE 'N' END as "syncYn"
		      , use_begin_date as "useBeginDate"
		      , use_end_date as "useEndDate"
		      , CASE 
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> DATE_SUB(SYSDATE(), INTERVAL 1 MONTH) THEN 'D'
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> SYSDATE() THEN 'C'
		          WHEN STR_TO_DATE(use_end_date, '%Y%m%d') <![CDATA[<]]> DATE_SUB(SYSDATE(), INTERVAL 1 DAY) THEN 'B'
		          ELSE 'A'
		        END as "status"
	          , tff.agent_id
			  , tff.agent_key
			  , (select `option` from $DB_NEOS$t_fx_fax_nickname_option limit 1 ) `option`
			  , ifnull(tffn.nick_name, '') as nickName
		FROM $DB_NEOS$t_fx_fax_no tffn
		JOIN $DB_NEOS$t_fx_fax_no_comp tffnc
		ON tffn.fax_seq = tffnc.fax_seq
		JOIN $DB_NEOS$t_fx_fax tff 
		ON tffn.fax_seq = tff.fax_seq
		AND tffn.fax_no = tffnc.fax_no
		WHERE tffnc.group_seq = #groupSeq#
		AND tffnc.comp_seq = #compSeq#
		<isNotNull property="faxNo">
			<isNotEmpty property="faxNo">
			AND tffn.fax_no like CONCAT('%', ifnull(#faxNo#,''), '%') 
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="syncYn">
			<isNotEmpty property="syncYn">
			<isEqual property="syncYn" compareValue="Y">
			AND EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no)
			</isEqual>
			<isEqual property="syncYn" compareValue="N">
			AND NOT EXISTS(SELECT 1 FROM $DB_NEOS$t_fx_fax_sync tffs WHERE tffs.fax_seq = tffn.fax_seq AND tffs.fax_no = tffn.fax_no)
			</isEqual>
			</isNotEmpty>
		</isNotNull>
	</select>
	
		<select id="faxDAO.getFaxNoInfoUser" parameterClass="hashmap" resultClass="hashmap">
		SELECT DISTINCT 
				tff.fax_seq as "faxSeq"  
		      , tff.agent_id as "agentId"
			  , tff.agent_key as "agentKey"
			  , tffs.fax_no as "faxNo"
		FROM $DB_NEOS$t_fx_fax_sync tffs
		  JOIN $DB_NEOS$t_fx_fax tff
		  ON tffs.fax_seq = tff.fax_seq
		<!-- 1차에서 겸직처리 없이 감 추후 겸직 처리 추가시 아래 WHERE 절 지우고 주석 제거
		<isNotNull property="compSeq">
		  	<isNotEmpty property="compSeq">
	    WHERE ((tffs.org_type = 'E' AND tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq = #empSeq#)
	    <isNotNull property="depts">
	    	<isNotEmpty property="depts"> 
		  OR (tffs.org_type = 'D' AND tffs.group_seq = #groupSeq# AND tffs.comp_seq = #compSeq# AND org_seq IN ($depts$))
		  	</isNotEmpty>
		</isNotNull>
	      )
	    	</isNotEmpty>
	    </isNotNull>
	    -->
	    WHERE ((tffs.org_type = 'E' AND tffs.group_seq = #groupSeq# AND org_seq = #empSeq#)
	    <isNotNull property="depts">
	    	<isNotEmpty property="depts"> 
		  	OR (tffs.org_type = 'D' AND tffs.group_seq = #groupSeq# AND org_seq IN ($depts$))
		  	</isNotEmpty>
		</isNotNull>
	      )
		ORDER BY tffs.group_seq, tffs.comp_seq, tff.agent_id, tff.agent_key, tffs.fax_no
	</select>
	
	<!-- SMS 회사 설정 -->
	<insert id="faxDAO.addSMSCompany" parameterClass="hashmap">
		UPDATE $DB_NEOS$t_co_comp SET
	    	sms_id = #smsId#
		WHERE	comp_seq = #compSeq#
	</insert> 
	
	<update id="faxDAO.delSMSCompany" parameterClass="hashmap">
		update $DB_NEOS$t_co_comp SET
			sms_id = ''
		WHERE  sms_id = #smsId#
	</update>
	
	<!-- SMS 연동 회사 정보 가져오기 -->
	<select id="faxDAO.getSMSCompany" parameterClass="hashmap" resultClass="hashmap">
		SELECT 	  A.comp_seq
				, B.agent_id
				, B.agent_key
				, ifnull(C.mobile_tel_num, '') mobile_tel_num
        		, G.bill36524_url
		FROM   $DB_NEOS$t_co_comp A
		INNER JOIN $DB_NEOS$t_fx_fax B
		ON	A.sms_id = B.bill36524_id
		INNER JOIN $DB_NEOS$t_co_emp C
		ON	A.group_seq = C.group_seq
		INNER JOIN $DB_NEOS$t_co_group G
		ON	G.group_seq = C.group_seq    
		WHERE  A.group_seq = B.group_seq
		AND	A.comp_seq = #compSeq# 
		AND	C.emp_seq = #empSeq#
	</select>
	
	<select id="faxDAO.getPhoneNumber" parameterClass="hashmap" resultClass="hashmap">		
		SELECT c.comp_seq as compSeq, 
			   (select comp_name_multi FROM $DB_NEOS$v_t_co_comp_multi WHERE comp_seq = c.comp_seq) as compNameMulti, 
			   e.emp_seq as empSeq, 
			   em.emp_name as empName, 
			   REPLACE(e.mobile_tel_num, '-', '') as mobileTelNum,  
			   GROUP_CONCAT(DISTINCT cm.comp_name SEPARATOR ', ') as compNameList
		FROM   $DB_NEOS$t_Co_emp e
		LEFT JOIN $DB_NEOS$t_co_emp_dept ed
				ON	e.emp_seq = ed.emp_seq AND e.group_seq = ed.group_seq
		LEFT JOIN $DB_NEOS$t_co_comp c
				ON	e.group_seq = c.group_seq AND ed.comp_seq = c.comp_seq
		LEFT JOIN $DB_NEOS$t_co_emp_comp ec
				ON	ec.comp_seq = c.comp_seq AND e.emp_seq = ec.emp_seq
		LEFT JOIN $DB_NEOS$t_co_comp_multi cm
				ON c.comp_seq = cm.comp_seq AND cm.lang_code = 'kr'
		LEFT JOIN $DB_NEOS$t_co_emp_multi em
				ON em.emp_seq = e.emp_seq AND e.group_seq = em.group_seq AND em.lang_code = 'kr'
		WHERE  ed.messenger_display_yn = 'Y'
		AND    ed.main_dept_yn = 'Y'
		AND    ec.work_status IN ('999','004')		
		<isNotEmpty property="compList">
			<iterate  prepend="AND" property="compList" open=" c.comp_seq IN (" close=")" conjunction="," >
			#compList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="bizList">
			<iterate  prepend="OR" property="bizList" open=" ed.biz_seq IN (" close=")" conjunction="," >
			#bizList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="deptList">
			<iterate  prepend="OR" property="deptList" open=" ed.dept_seq IN (" close=")" conjunction="," >
			#deptList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="empList">
			<iterate  prepend="OR" property="empList" open=" e.emp_seq IN (" close=")" conjunction="," >
			#empList[]#
			</iterate>
		</isNotEmpty>
		AND    e.mobile_tel_num != ''
		GROUP BY emp_seq
	</select>
	
	
	
	<select id="faxDAO.getFaxNickNameOption" parameterClass="hashmap" resultClass="String">
		select
			`option`
		from
			$DB_NEOS$t_fx_fax_nickname_option
		where
			group_seq = #groupSeq#		
	</select>
	
	
	
	<update id="faxDAO.saveFaxNickNameOption">
		update
			$DB_NEOS$t_fx_fax_nickname_option
		set
			`option` = #value#
		where
			group_seq = #groupSeq#		
	</update>
	
	
	
	<select id="faxDAO.getFaxNickName" parameterClass="hashmap" resultClass="String">
		select
			ifnull(nick_name,'') as nickName
		from
			$DB_NEOS$t_fx_fax_no
		where
			fax_seq = #faxSeq# and fax_no = #faxNo#
	</select>
	
	<update id="faxDAO.saveFaxNickName">
		update
			$DB_NEOS$t_fx_fax_no
		set
			nick_name = #nickName#
		where
			fax_seq = #faxSeq# and fax_no = #faxNo#
	</update>
</sqlMap>
