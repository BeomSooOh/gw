<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org//dtd/sql-map-2.dtd">
<sqlMap namespace="MsgDAO">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<select id="MsgDAO.selectMenuVersion" parameterClass="hashmap" resultClass="string">
		SELECT	IFNULL(max(cast(icon_ver as unsigned)), 0) AS link_version
			FROM $DB_NEOS$t_msg_tcmg_link
		WHERE	group_seq = #groupSeq#
				and comp_seq = #compSeq#
				and use_yn = 'Y'
	</select>
	
	<select id="MsgDAO.selectMenuList" parameterClass="hashmap" resultClass="egovMap">
		SELECT	A.link_seq,
				A.link_position,
				A.link_kind,
				A.link_nm_kr,
				A.link_nm_en,
				A.link_nm_jp,
				A.link_nm_cn,
				A.menu_no,
				A.msg_target,
				A.target_url,
				A.map_key,
				A.app_key,
				A.link_param,
				A.encrypt_seq,
				concat((select case when instr(messenger_url,'https') > 0 then 'https://' else 'http://' end from $DB_NEOS$t_co_group limit 1), B.comp_domain) as comp_domain,
				A.icon_path,
				A.icon_ver,
				(select count(C.link_seq) from $DB_NEOS$t_msg_tcmg_link C where C.link_upper_seq = A.link_seq and C.use_yn = 'Y' and C.group_seq = A.group_seq and C.comp_seq=A.comp_seq) as subCnt
			FROM $DB_NEOS$`t_msg_tcmg_link` A, $DB_NEOS$`t_co_comp` B
		WHERE	A.group_seq = #groupSeq#
				and A.comp_seq = #compSeq#
				and B.group_seq = A.group_seq
				and B.comp_seq = A.comp_seq
				and A.link_upper_seq = '0'
				and A.use_yn = 'Y'
    			<isNotEqual property="appType" compareValue="13">
				and ifnull(A.app_key,'') != '' 		
				</isNotEqual>				
				<isEqual property="comeLeaveYn" compareValue="N">
					and msg_target not IN ('attend1','attend2')
				</isEqual>
				
			    and (
			    		A.menu_no = 0 or A.menu_no in
			     		(
			     			select distinct c.menu_no 
			     			from $DB_NEOS$t_co_authcode a
							join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code and a.author_use_yn = 'Y' and a.author_type = '001' and b.comp_seq = #compSeq# and b.emp_seq = #empSeq#
							join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
							join $DB_NEOS$t_co_menu m on c.menu_no = m.menu_no and m.use_yn = 'Y' and ifnull(m.delete_yn,'') != 'Y'
							join $DB_NEOS$t_msg_tcmg_link d on c.menu_no = d.menu_no and d.comp_seq = #compSeq#
							
						) 
					)
									
				order by A.order_num
	</select>
	
	<select id="MsgDAO.selectBaseMenuList" parameterClass="hashmap" resultClass="egovMap">
		SELECT	A.link_seq,
				A.link_position,
				A.link_kind,
				A.link_nm_kr,
				A.link_nm_en,
				A.link_nm_jp,
				A.link_nm_cn,
				A.menu_no,
				A.msg_target,
				A.target_url,
				A.map_key,
				A.app_key,
				A.link_param,
				A.encrypt_seq,
				concat((select case when instr(messenger_url,'https') > 0 then 'https://' else 'http://' end from $DB_NEOS$t_co_group limit 1), B.comp_domain) as comp_domain,
				A.icon_path,
				A.icon_ver,
				(select count(C.link_seq) from $DB_NEOS$t_msg_tcmg_link C where C.link_upper_seq = A.link_seq and C.use_yn = 'Y' and C.group_seq = A.group_seq and C.comp_seq='0') as subCnt
			FROM $DB_NEOS$`t_msg_tcmg_link` A
			inner join $DB_NEOS$t_co_comp b on b.comp_seq = #compSeq#
		WHERE	A.group_seq = #groupSeq# and A.comp_seq = '0' and A.use_yn = 'Y' and A.link_upper_seq = '0'
		    	<isNotEqual property="appType" compareValue="13">
				and ifnull(A.app_key,'') != '' 		
				</isNotEqual>
				
			    and (
			    		A.menu_no = 0 or A.menu_no in
			     		(
			     			select distinct c.menu_no 
			     			from $DB_NEOS$t_co_authcode a
							join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code and a.author_use_yn = 'Y' and a.author_type = '001' and b.comp_seq = #compSeq# and b.emp_seq = #empSeq#
							join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
							join $DB_NEOS$t_co_menu m on c.menu_no = m.menu_no and m.use_yn = 'Y' and ifnull(m.delete_yn,'') != 'Y'
							join $DB_NEOS$t_msg_tcmg_link d on c.menu_no = d.menu_no and d.comp_seq = '0'
						) 
					)
				
				order by A.order_num
	</select>
	
	
	<select id="MsgDAO.selectSubMenuList" parameterClass="hashmap" resultClass="egovMap">
		SELECT	A.link_seq,
				A.link_position,
				A.link_kind,
				A.link_nm_kr,
				A.link_nm_en,
				A.link_nm_jp,
				A.link_nm_cn,
				A.menu_no,
				A.msg_target,
				A.target_url,
				A.map_key,
				A.app_key,
				A.link_param,
				A.encrypt_seq,
				concat((select case when instr(messenger_url,'https') > 0 then 'https://' else 'http://' end from $DB_NEOS$t_co_group limit 1), B.comp_domain) as comp_domain,
				A.icon_path,
				A.icon_ver
			FROM $DB_NEOS$`t_msg_tcmg_link` A, $DB_NEOS$`t_co_comp` B
		WHERE	A.group_seq = #groupSeq#
				and A.comp_seq = #compSeq#
				and B.group_seq = A.group_seq
				and B.comp_seq = A.comp_seq
				and A.link_upper_seq = #upperSeq#
				and A.use_yn = 'Y'
		    	<isNotEqual property="appType" compareValue="13">
				and ifnull(A.app_key,'') != '' 		
				</isNotEqual>
				
			    and (
			    		A.menu_no = 0 or A.menu_no in
			     		(
			     			select distinct c.menu_no 
			     			from $DB_NEOS$t_co_authcode a
							join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code and a.author_use_yn = 'Y' and a.author_type = '001' and b.comp_seq = #compSeq# and b.emp_seq = #empSeq#
							join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
							join $DB_NEOS$t_co_menu m on c.menu_no = m.menu_no and m.use_yn = 'Y' and ifnull(m.delete_yn,'') != 'Y'
							join $DB_NEOS$t_msg_tcmg_link d on c.menu_no = d.menu_no and d.comp_seq = #compSeq#
						) 
					)
									
				order by A.order_num
	</select>
	
	
	<procedure id="MsgDAO.getSSOToken" parameterClass="hashmap" resultClass="string">
	    <![CDATA[
	    	call $DB_NEOS$P_TCMH_selectSSOToken(#groupSeq#, #compSeq#, #empSeq#, #linkSeq#, #linkType#, #eventType#, #eventSubType#, #urlPath#, #userIP#)
	     ]]>
    </procedure>

	<select id="MsgDAO.getEncryptSeq" parameterClass="hashmap" resultClass="string">
		SELECT	IFNULL(max(cast(encrypt_seq as unsigned)+1), '0') AS encrypt_seq
			FROM $DB_NEOS$t_co_encrypt
	</select>
	
	<insert id="MsgDAO.setEncrypt" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_co_encrypt (
			   encrypt_seq
			  ,group_seq
			  ,comp_seq
			  ,encrypt_type
			  ,encrypt_key
			  ,use_yn
			  ,create_seq
			  ,create_date
			  ,modify_seq
			  ,modify_date
		) VALUES (
			   #encryptSeq#
			  ,#groupSeq#
			  ,#newCompSeq#
			  ,'none'
			  ,''
			  ,'Y'
			  ,#empSeq#
			  ,NOW()
			  ,#empSeq#
			  ,NOW()
		)
	</insert>
	
	<insert id="MsgDAO.setMsgMenu" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_msg_tcmg_link (
			   link_seq
			  ,link_upper_seq
			  ,link_position
			  ,group_seq
			  ,comp_seq
			  ,link_kind
			  ,link_nm_kr
			  ,link_nm_en
			  ,link_nm_jp
			  ,link_nm_cn
			  ,menu_no
			  ,gnb_menu_no
			  ,lnb_menu_no
			  ,msg_target
			  ,target_url
			  ,link_param
			  ,encrypt_seq
			  ,map_key
			  ,use_yn
			  ,icon_nm
			  ,icon_path
			  ,icon_ver
			  ,order_num
			  ,create_seq
			  ,create_date
			  ,modify_seq
			  ,modify_date
		) SELECT 
			   CONCAT(#newCompSeq#,'_',link_seq)
			  ,CASE when link_upper_seq = '0' then '0' ELSE CONCAT(#newCompSeq#,'_',link_upper_seq) END 
			  ,link_position
			  ,#groupSeq#
			  ,#newCompSeq#
			  ,link_kind
			  ,link_nm_kr
			  ,link_nm_en
			  ,link_nm_jp
			  ,link_nm_cn
			  ,menu_no
			  ,gnb_menu_no
			  ,lnb_menu_no
			  ,msg_target
			  ,target_url
			  ,link_param
			  ,#encryptSeq#
			  ,map_key
			  ,use_yn
			  ,icon_nm
			  ,icon_path
			  ,'1'
			  ,order_num
			  ,#empSeq#
			  ,NOW()
			  ,#empSeq#
			  ,NOW()
		 FROM $DB_NEOS$t_msg_tcmg_link where comp_seq = '0'
	</insert>
	
	
	<select id="MsgDAO.checkLinkInfo" parameterClass="hashmap" resultClass="egovMap">
		SELECT * 
      		  FROM $DB_NEOS$t_msg_tcmh_link 
    	WHERE group_seq = #groupSeq# 
		      AND comp_seq = #compSeq# 
		      AND emp_seq = #empSeq# 
		      AND link_seq = #linkSeq#
		      AND link_seq <![CDATA[ <> ]]> '0'
		      AND TIMESTAMPDIFF(MINUTE, create_date, NOW()) <![CDATA[ < ]]> #lT#
      	LIMIT 1
	</select>
	
	<select id="MsgDAO.getTokenFromLinkInfo" parameterClass="hashmap" resultClass="string">
		SELECT token
      		FROM $DB_NEOS$t_msg_tcmh_link 
    	WHERE group_seq = #groupSeq# 
      		AND comp_seq = #compSeq# 
		    AND emp_seq = #empSeq#
		    AND link_seq = #linkSeq#
		    AND TIMESTAMPDIFF(MINUTE, create_date, NOW()) <![CDATA[ < ]]> #lT#
        ORDER BY create_date DESC LIMIT 1
	</select>
	
	<select id="MsgDAO.getToken" parameterClass="hashmap" resultClass="string">
		SELECT UUID()
	</select>
	
	<select id="MsgDAO.getLinkUrlPath" parameterClass="hashmap" resultClass="string">
		SELECT IFNULL(B.url_path,'') 
			FROM $DB_NEOS$t_msg_tcmg_link A, $DB_NEOS$t_co_menu B 
		WHERE A.link_seq = #linkSeq# AND A.menu_no = B.menu_no LIMIT 1
	</select>
	
	<insert id="MsgDAO.insertLinkInfo" parameterClass="hashmap">
		INSERT INTO $DB_NEOS$t_msg_tcmh_link (
	      link_seq, link_type, event_type, event_sub_type, url_path, group_seq, comp_seq, emp_seq, login_ip, token, create_date, seq, sub_seq
	    ) VALUES (
	      #linkSeq#, #linkType#, #eventType#, #eventSubType#, #urlPath#, #groupSeq#, #compSeq#, #empSeq#, #userIP#, #sRet#, NOW(), #seq#, #subSeq#
	    )
	</insert>
	
	
	
	<select id="MsgDAO.getGerpUserInfo" parameterClass="hashmap" resultClass="egovMap">
		SELECT
			*
		FROM
			$DB_NEOS$t_co_emp_comp
		WHERE
			gerp_no_gemp = #gerpId#
	
			<isNotEmpty property="compSeq">
			  	AND comp_seq = #compSeq#
			</isNotEmpty>
			
		LIMIT 1
	</select>
	
	<select id="MsgDAO.getGerpLinkInfo" parameterClass="hashmap" resultClass="egovMap">
		SELECT
			*
		FROM
			$DB_NEOS$t_msg_tcmg_link
		WHERE
			msg_target = #msgTarget#
			AND menu_no = #menuNo#
			AND comp_seq = #compSeq#
		LIMIT 1
	</select>
</sqlMap>
