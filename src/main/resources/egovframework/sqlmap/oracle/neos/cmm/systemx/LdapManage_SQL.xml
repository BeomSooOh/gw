<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="LdapManage">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<insert id="LdapManage.insertLdapApiLog" parameterClass="hashmap">
	/* LdapManage.insertLdapApiLog - oracle */
		insert into $DB_NEOS$t_co_ldap_api_log
		(
			reg_date
		  , api_name
		  , input_param
		  , error_msg
		) values
		(	
			SYSDATE
		  , #apiName#
		  , #inputParam#
		  , #errorMsg#
		)
	</insert>
	
	<select id="LdapManage.getLdapSetInfo" parameterClass="hashmap" resultClass="egovMap">
    	select * from $DB_NEOS$t_co_ldap where comp_seq=#compSeq#
		<isNotEmpty property="empSeq">
		and comp_seq in (select main_comp_seq from $DB_NEOS$t_co_emp where emp_seq=#empSeq#)
		</isNotEmpty>
	</select>
	
	<select id="LdapManage.getLdapSchSetInfoList" parameterClass="hashmap" resultClass="egovMap">
	/* "LdapManage.getLdapSchSetInfoList" - oracle */
		select * from $DB_NEOS$t_co_ldap 
		where sync_mode='gta' and sch_time=#schTime# and 
		(
			(sch_type = '1')
			or
			(sch_type = '2' and sch_info = to_char(sysdate, 'd'))
			or
			(sch_type = '3' and sch_info = to_char(sysdate, 'DD'))
			or
			(sch_type = '4' and sch_info = to_char(sysdate, 'YYYY-MM-DD'))
		)
	</select>	
	
	<select id="LdapManage.getCompInfo" parameterClass="hashmap" resultClass="egovMap">
		select a.email_domain
			 , b.comp_name 
		  from $DB_NEOS$t_co_comp a
		  join $DB_NEOS$t_co_comp_multi b 
		  	on a.comp_seq=b.comp_seq and b.lang_code='kr'
		 where a.comp_seq=#compSeq#
	</select>

	<select id="LdapManage.getEmpInfo" parameterClass="hashmap" resultClass="egovMap">
		select e.login_id, em.emp_name 
		from $DB_NEOS$t_co_emp e
		join $DB_NEOS$t_co_emp_multi em on e.emp_seq = em.emp_seq and em.lang_code='kr'
		where e.emp_seq = #empSeq#
	</select>	
	
	<insert id="LdapManage.insertLdapSetInfo" parameterClass="hashmap">
		insert into $DB_NEOS$t_co_ldap
		(
			group_seq
		  , comp_seq
		  , use_yn
		  , ad_ip
		  , userid
		  , password
		  , ad_domain
		  , base_dir
		  , dept_dir
		  , emp_dir
		  , dept_ou_type
		  , sync_mode
		  , login_id_sync_yn
		  , login_passwd_sync_yn
		  , tel_num_sync_yn
		  , email_sync_yn
		  , addr_sync_yn
		  , create_seq
		  , create_date
		  , modify_seq
		  , modify_date
		  , org_sync_status
		  , org_sync_date
		  , sch_type
		  , sch_info
		  , sch_time
		  ) VALUES
		  ( 
		  	#groupSeq#
		  , #compSeq#
		  , #useYn#
		  , #adIp#
		  , #userid#
		  , #password#
		  , #adDomain#
		  , #baseDir#
		  , #deptDir#
		  , #empDir#
		  , #deptOuType#
		  , #syncMode#
		  , #loginIdSyncYn#
		  , #loginPasswdSyncYn#
		  , #telNumSyncYn#
		  , #emailSyncYn#
		  , #addrSyncYn#
		  , #createSeq#
		  , SYSDATE
		  , #createSeq#
		  , SYSDATE
		  , 'I'
		  , null
		  , ' '
		  , ' '
		  , ' '
		  )
	</insert>
	
	<insert id="LdapManage.insertLdapDeptStart" parameterClass="hashmap">
		/* LdapManage.insertLdapDeptStart - oracle */
		MERGE INTO $DB_NEOS$t_co_ldap_dept dept
     		 USING (select ' ' as sync_seq
     		  			 , concat('GW_DEPT_', a.dept_seq) as "uid"
     		  			 , sysdate +(a.dept_level -100)/(24*60*60) as reg_date
     		  			 , ' ' as sync_status
     		  			 , ' ' as error_msg
     		  			 , null as sync_date
     		  			 , 'I' as sync_type
     		  			 , a.comp_seq as comp_seq
     		  			 , a.dept_seq as dept_seq
     		  			 , a.parent_dept_seq as parent_dept_seq
     		  			 , b.dept_name as dept_name
					  from $DB_NEOS$t_co_dept a
					  join $DB_NEOS$t_co_dept_multi b 
					    on a.dept_seq = b.dept_seq and b.lang_code='kr'
					 where a.comp_seq = #compSeq# and a.use_yn = 'Y'
		            ) dummy
        		ON (dept.uid_ = dummy."uid")
 
		WHEN NOT MATCHED THEN
		    INSERT(
		            sync_seq
		          , uid_
		          , reg_date
		          , sync_status
		          , error_msg
		          , sync_date
		          , sync_type
		          , comp_seq
		          , dept_seq
		          , parent_dept_seq
		          , dept_name
		           )
		    VALUES(
		            dummy.sync_seq
		          , dummy."uid"
		          , dummy.reg_date
		          , dummy.sync_status
		          , dummy.error_msg
		          , dummy.sync_date  
		          , dummy.sync_type
		          , dummy.comp_seq
		          , dummy.dept_seq
		          , dummy.parent_dept_seq
		          , dummy.dept_name
		            )
		
	</insert>
	
	<insert id="LdapManage.insertLdapEmpStart" parameterClass="hashmap">
	/* LdapManage.insertLdapEmpStart - oracle */
		insert into $DB_NEOS$t_co_ldap_emp
		(
			sync_seq
		  , uid_
		  , reg_date
		  , sync_status
		  , error_msg
		  , sync_date
		  , sync_type
		  , comp_seq
		  , dept_seq
		  , emp_seq
		  , login_id
		  , erp_emp_seq
		  , email_addr
		  , email_domain
		  , emp_name
		  , duty_code
		  , mobile_tel_num
		  , fax_num
		  , home_tel_num
		  , tel_num
		  , login_passwd
		  , use_yn
		  )
	select  ' '
		  , concat('GW_EMP_', e.emp_seq)
		  , SYSDATE
		  , ' '
		  , ' '
		  , null
		  , 'I'
		  , ec.comp_seq
		  , ed.dept_seq
		  , e.emp_seq
		  , e.login_id
		  , nvl(ec.erp_emp_seq,' ')
		  , nvl(e.email_addr,e.login_id)
		  , nvl(c.email_domain,' ')
		  , nvl(em.emp_name,e.login_id)
		  , nvl(ed.duty_code,' ')
		  , nvl(e.mobile_tel_num,' ')
		  , nvl(ed.fax_num,' ')
		  , nvl(e.home_tel_num,' ')
		  , nvl(ed.tel_num,' ')
		  , ' ' as login_passwd
		  , case when ec.use_yn = 'N' or ec.work_status = '001' then 'N' else 'Y' end as use_yn
		from $DB_NEOS$t_co_emp e
		join $DB_NEOS$t_co_emp_multi em on e.emp_seq=em.emp_seq and em.lang_code='kr'
		join $DB_NEOS$t_co_emp_dept ed on e.emp_seq=ed.emp_seq and ed.comp_seq=e.main_comp_seq and ed.main_dept_yn='Y'
		join $DB_NEOS$t_co_emp_comp ec on ed.emp_seq=ec.emp_seq and ed.comp_seq=ec.comp_seq and ec.work_status != '001'
		join $DB_NEOS$t_co_comp c on ec.comp_seq=c.comp_seq
		where ec.comp_seq=#compSeq#
	</insert>
	
	<insert id="LdapManage.insertLdapDept" parameterClass="hashmap">
	/* LdapManage.insertLdapDept - oracle */
		insert into $DB_NEOS$t_co_ldap_dept
		(
			sync_seq
		  , uid
		  , reg_date
		  , sync_status
		  , error_msg
		  , sync_date
		  , sync_type
		  , comp_seq
		  , dept_seq
		  , parent_dept_seq
		  , dept_name
		) VALUES
		(	' '
		  , SYS_GUID()
		  , SYSDATE
		  , ' '
		  , ' '
		  , null
		  , #syncType#
		  , #compSeq#
		  , #deptSeq#
		  , #parentDeptSeq#
		  , #deptName#
		 )
	</insert>
	
	<insert id="LdapManage.insertLdapEmp" parameterClass="hashmap">
	/* LdapManage.insertLdapEmp - oracle */
		insert into $DB_NEOS$t_co_ldap_emp
		(sync_seq, uid_, reg_date, sync_status, error_msg, sync_date, sync_type, comp_seq, dept_seq, emp_seq, login_id, erp_emp_seq, email_addr, email_domain, emp_name, duty_code, mobile_tel_num, fax_num, home_tel_num, tel_num, login_passwd, use_yn) 
		VALUES
		(
		<isNotNull property="syncSeq">#syncSeq#,</isNotNull><isNull property="syncSeq">' ',</isNull>
		SYS_GUID(), SYSDATE, ' ', ' ', null,
		<isNotNull property="syncType">#syncType#,</isNotNull><isNull property="syncType">' ',</isNull>
		<isNotNull property="compSeq">#compSeq#,</isNotNull><isNull property="compSeq">' ',</isNull>
		<isNotNull property="deptSeq">#deptSeq#,</isNotNull><isNull property="deptSeq">' ',</isNull>
		<isNotNull property="empSeq">#empSeq#,</isNotNull><isNull property="empSeq">' ',</isNull>
		<isNotNull property="loginId">#loginId#,</isNotNull><isNull property="loginId">' ',</isNull>
		<isNotNull property="erpEmpSeq">#erpEmpSeq#,</isNotNull><isNull property="erpEmpSeq">' ',</isNull>
		<isNotNull property="emailAddr">#emailAddr#,</isNotNull><isNull property="emailAddr">' ',</isNull>
		<isNotNull property="emailDomain">#emailDomain#,</isNotNull><isNull property="emailDomain">' ',</isNull>
		<isNotNull property="empName">#empName#,</isNotNull><isNull property="empName">' ',</isNull>
		<isNotNull property="dutyCode">#dutyCode#,</isNotNull><isNull property="dutyCode">' ',</isNull>
		<isNotNull property="mobileTelNum">#mobileTelNum#,</isNotNull><isNull property="mobileTelNum">' ',</isNull>
		<isNotNull property="faxNum">#faxNum#,</isNotNull><isNull property="faxNum">' ',</isNull>
		<isNotNull property="homeTelNum">#homeTelNum#,</isNotNull><isNull property="homeTelNum">' ',</isNull>
		<isNotNull property="telNum">#telNum#,</isNotNull><isNull property="telNum">' ',</isNull>
		<isNotNull property="loginPasswd">#loginPasswd#,</isNotNull><isNull property="loginPasswd">' ',</isNull>
		<isNotNull property="useYn">#useYn#</isNotNull><isNull property="useYn">'Y'</isNull>
		 )
	</insert>
	
	<insert id="LdapManage.insertLdapEmpList" parameterClass="hashmap">
	/* LdapManage.insertLdapEmpList - oracle */
		insert all 
  		<iterate property="userInfoList" prepend="" open="" close=""  conjunction=" " >
  		into $DB_NEOS$t_co_ldap_emp
		(
			sync_seq
		  , uid_
		  , reg_date
		  , sync_status
		  , error_msg
		  , sync_date
		  , sync_type
		  , comp_seq
		  , dept_seq
		  , emp_seq, login_id, email_addr, email_domain, emp_name, duty_code, mobile_tel_num, fax_num, home_tel_num, tel_num, login_passwd, use_yn
		) VALUES
   		(#userInfoList[].syncSeq#,
   		SYS_GUID(), SYSDATE, ' ', ' ', null,
   		#userInfoList[].syncType#,
   		#userInfoList[].compSeq#,
   		#userInfoList[].deptSeq#,
   		#userInfoList[].empSeq#,
   		#userInfoList[].loginId#,
   		#userInfoList[].emailAddr#,
   		#userInfoList[].emailDomain#,
   		#userInfoList[].empName#,
   		#userInfoList[].dutyCode#,
   		#userInfoList[].mobileTelNum#,
   		#userInfoList[].faxNum#,
   		#userInfoList[].homeTelNum#,
   		#userInfoList[].telNum#,
   		#userInfoList[].loginPasswd#,
   		#userInfoList[].useYn#
   		)
  		</iterate>		 
  		
  		SELECT 1 FROM DUAL
	</insert>	
	
	<insert id="LdapManage.insertLdapEmpResign" parameterClass="hashmap">
		insert into $DB_NEOS$t_co_ldap_emp
		(
			sync_seq
		  , uid_
		  , reg_date
		  , sync_status
		  , error_msg
		  , sync_date
		  , sync_type
		  , comp_seq
		  , dept_seq
		  , emp_seq
		  , login_id
		  , erp_emp_seq
		  , email_addr
		  , email_domain
		  , emp_name
		  , duty_code
		  , mobile_tel_num
		  , fax_num
		  , home_tel_num
		  , tel_num
		  , login_passwd
		  , use_yn
		  )
	 select ' '
	 	  , SYS_GUID()
	 	  , SYSDATE
	 	  , ' '
	 	  , ' '
	 	  , null
	 	  , 'D'
	 	  , comp_seq
	 	  , relate_dept_seq
	 	  , gw_seq
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , ' '
	 	  , 'N'
    	from $DB_NEOS$t_co_ldap_key where org_div='U' and gw_seq=#empSeq#
	</insert>
	
	<update id="LdapManage.updateLdapDept" parameterClass="hashmap">
    	update $DB_NEOS$t_co_ldap_dept set
    	reg_date=sysdate
		<isNotEmpty property="syncType">
		,sync_type=#syncType#
		</isNotEmpty>    	
		<isNotEmpty property="parentDeptSeq">
		,parent_dept_seq=#parentDeptSeq#
		</isNotEmpty>
		<isNotEmpty property="deptName">
		,dept_name=#deptName#
		</isNotEmpty>		
    	where uid_=#uid#;
	</update>
	
	<update id="LdapManage.updateLdapEmp" parameterClass="hashmap">
	/* LdapManage.updateLdapEmp - oracle */
    	update $DB_NEOS$t_co_ldap_emp set
    	reg_date=sysdate
		<isNotEmpty property="syncType">
		,sync_type=#syncType#
		</isNotEmpty>
		<isNotEmpty property="deptSeq">
		,dept_seq=#deptSeq#
		</isNotEmpty>
		<isNotEmpty property="loginId">
		,login_id=#loginId#
		</isNotEmpty>
		<isNotEmpty property="erpEmpSeq">
		,erp_emp_seq=#erpEmpSeq#
		</isNotEmpty>		
		<isNotEmpty property="emailAddr">
		,email_addr=#emailAddr#
		</isNotEmpty>
		<isNotEmpty property="emailDomain">
		,email_domain=#emailDomain#
		</isNotEmpty>
		<isNotEmpty property="empName">
		,emp_name=#empName#
		</isNotEmpty>	
		<isNotEmpty property="dutyCode">
		,duty_code=#dutyCode#
		</isNotEmpty>
		<isNotNull property="mobileTelNum">
		,mobile_tel_num=#mobileTelNum#
		</isNotNull>
		<isNotNull property="faxNum">
		,fax_num=#faxNum#
		</isNotNull>
		<isNotNull property="homeTelNum">
		,home_tel_num=#homeTelNum#
		</isNotNull>
		<isNotNull property="telNum">
		,tel_num=#telNum#
		</isNotNull>		
		<isNotNull property="loginPasswd">
		,login_passwd=#loginPasswd#
		</isNotNull>
		<isNotEmpty property="useYn">
		,use_yn=#useYn#
		</isNotEmpty>
		where uid_=#uid#
	</update>

    <update id="LdapManage.updateLdapEmpAtg" parameterClass="hashmap">
        /* LdapManage.updateLdapEmpAtg - oracle */
        UPDATE $DB_NEOS$t_co_ldap_emp
           SET        
           <isEqual property="syncStatus" compareValue="N">
                 sync_status = 'N'
               , sync_date   = SYSDATE
               , emp_seq     = #empSeq#
           </isEqual>
           <isEqual property="syncStatus" compareValue="F">
                 sync_status = 'F'
               , error_msg   = #errorMsg#
           </isEqual>      
         WHERE sync_seq      = #syncSeq#
    </update>
	
	<select id="LdapManage.selectLdapDept" parameterClass="hashmap" resultClass="egovMap">
    	select wrap.*
    	  from(
		    	select a.*, rownum as rnum 
		    	  from $DB_NEOS$t_co_ldap_dept a 
		    	 where dept_seq=#deptSeq# 
		         order by reg_date desc 
		      ) wrap
		  where wrap.rnum = 1
	</select>
	
	<select id="LdapManage.selectLdapEmp" parameterClass="hashmap" resultClass="egovMap">
    	select *
    	  from( 
		    	select a.*, rownum as rnum 
		    	  from $DB_NEOS$t_co_ldap_emp a
		    	 where emp_seq=#empSeq# 
		      order by reg_date desc 
		      )
		 where rnum = 1     
	</select>	
	
	<select id="LdapManage.selectLdapDeptFromUid" parameterClass="hashmap" resultClass="egovMap">
    	select * 
    	from $DB_NEOS$t_co_ldap_dept a
    	join $DB_NEOS$t_co_ldap b on a.comp_seq = b.comp_seq
    	where a.uid_=#uid#
	</select>
	
	<select id="LdapManage.selectLdapEmpFromUid" parameterClass="hashmap" resultClass="egovMap">
    	select * 
    	from $DB_NEOS$t_co_ldap_emp a
    	join $DB_NEOS$t_co_ldap b on a.comp_seq = b.comp_seq	
		where a.uid_=#uid#
	</select>
	
	<update id="LdapManage.updateLdapDeptStart" parameterClass="hashmap">
	/* LdapManage.updateLdapDeptStart - oracle */
    	update $DB_NEOS$t_co_ldap_dept 
    	   set sync_status='P' 
    	 where uid_=#uid#
	</update>
	
	<update id="LdapManage.updateLdapEmpStart" parameterClass="hashmap">
	/* LdapManage.updateLdapEmpStart - oracle */
    	update $DB_NEOS$t_co_ldap_emp 
    	   set sync_status='P' 
    	 where uid_=#uid#
	</update>	
	
	<update id="LdapManage.updateLdapDeptResult" parameterClass="hashmap">
    	update $DB_NEOS$t_co_ldap_dept set
    	sync_date=sysdate
		<isNotEmpty property="syncSeq">
		,sync_seq=#syncSeq#
		</isNotEmpty>    	
		<isNotEmpty property="syncStatus">
		,sync_status=#syncStatus#
		</isNotEmpty>
		<isNotEmpty property="errorMsg">
		,error_msg=#errorMsg#
		</isNotEmpty>
    	where uid_=#uid#
	</update>
	
	<update id="LdapManage.updateLdapEmpResult" parameterClass="hashmap">
    	update $DB_NEOS$t_co_ldap_emp set
    	sync_date=sysdate
		<isNotEmpty property="syncSeq">
		,sync_seq=#syncSeq#
		</isNotEmpty>    	
		<isNotEmpty property="syncStatus">
		,sync_status=#syncStatus#
		</isNotEmpty>
		<isNotEmpty property="errorMsg">
		,error_msg=#errorMsg#
		</isNotEmpty>
    	where uid_=#uid#
	</update>	
	
	<delete id="LdapManage.deleteLdapKey" parameterClass="hashmap">
		delete from $DB_NEOS$t_co_ldap_key where org_div=#orgDiv# and gw_seq=#gwSeq#
	</delete>
	
	<delete id="LdapManage.deleteLdapKeyAll" parameterClass="hashmap">
	/* LdapManage.deleteLdapKeyAll - oracle */
		delete from $DB_NEOS$t_co_ldap_key where comp_seq=#compSeq#
	</delete>			
	
	<insert id="LdapManage.insertLdapKey" parameterClass="hashmap">
		insert into $DB_NEOS$t_co_ldap_key(org_div, gw_seq, usn, ad_name, relate_dept_seq, comp_seq
		<isNotEmpty property="pwSyncYn">
		,pw_sync_yn
		</isNotEmpty>
		) VALUES
		(#orgDiv#, #gwSeq#, #usn#, #adName#, #relateDeptSeq#, #compSeq#
		<isNotEmpty property="pwSyncYn">
		,#pwSyncYn#
		</isNotEmpty>		
		)
	</insert>
	
	<update id="LdapManage.updateLdapKey" parameterClass="hashmap">
    	update $DB_NEOS$t_co_ldap_key set
    	org_div = org_div
		<isNotEmpty property="adName">
		,ad_name = #adName#
		</isNotEmpty>    	
		<isNotEmpty property="relateDeptSeq">
		,relate_dept_seq=#relateDeptSeq#
		</isNotEmpty>
		<isNotEmpty property="pwSyncYn">
		,pw_sync_yn=#pwSyncYn#
		</isNotEmpty>			
    	where org_div=#orgDiv# and gw_seq=#gwSeq#
	</update>
	
	<select id="LdapManage.selectLdapKey" parameterClass="hashmap" resultClass="egovMap">
		select * 
		  from $DB_NEOS$t_co_ldap_key 
		 where org_div=#orgDiv# 
		   and gw_seq=#gwSeq#
	</select>	
	
	<update id="LdapManage.updateLdapSchSet" parameterClass="hashmap">
	/* LdapManage.updateLdapSchSet - oracle */
		update $DB_NEOS$t_co_ldap set
		modify_date = SYSDATE
		,modify_seq = #createSeq#
		,sch_type = #schType#
		,sch_info = #schInfo#
		,sch_time = #schTime#
    	where comp_seq=#compSeq#
	</update>
	
	<update id="LdapManage.updateLdapSetInfo" parameterClass="hashmap">
		update $DB_NEOS$t_co_ldap set
		modify_date = SYSDATE
		,modify_seq = #createSeq#
		,ad_ip = #adIp#
		,ad_domain = #adDomain#
		,use_yn = #useYn#
		,sync_mode = #syncMode#
		,userid = #userid#
		,password = #password#
		,emp_dir = #empDir#
		,dept_ou_type = #deptOuType#
		,dept_dir = #deptDir#
		,base_dir = #baseDir#
		,addr_sync_yn = #addrSyncYn#
		,email_sync_yn = #emailSyncYn#
		,login_id_sync_yn = #loginIdSyncYn#
		,login_passwd_sync_yn = #loginPasswdSyncYn#
		,tel_num_sync_yn = #telNumSyncYn#
    	where comp_seq=#compSeq#
	</update>
	
	<delete id="LdapManage.deleteLdapSetInfo" parameterClass="hashmap">
	/* LdapManage.deleteLdapSetInfo - oracle */
		delete from $DB_NEOS$t_co_ldap where comp_seq=#compSeq#
	</delete>	
	
	<delete id="LdapManage.deleteLdapDept" parameterClass="hashmap">
	/* LdapManage.deleteLdapDept - oracle */
		delete from $DB_NEOS$t_co_ldap_dept where comp_seq=#compSeq#
	</delete>
	
	<delete id="LdapManage.deleteLdapEmp" parameterClass="hashmap">
	/* LdapManage.deleteLdapEmp - oracle */
		delete from $DB_NEOS$t_co_ldap_emp where comp_seq=#compSeq#
	</delete>
    
    <select id="LdapManage.selectLdapSyncList" parameterClass="hashmap" resultClass="egovMap">
        /* LdapManage.selectLdapSyncList - oracle */
        SELECT ta.sync_seq
             , TO_CHAR(ta.sync_date, 'YYYY-MM-DD HH24:MI:SS') AS sync_date
             , CASE
                 WHEN ta.sync_mode = 'M' THEN '수동'
                 ELSE '자동'
               END AS sync_mode
             , ta.emp_name
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_dept WHERE sync_seq = ta.sync_seq AND sync_type = 'I') AS dept_new
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_dept WHERE sync_seq = ta.sync_seq AND sync_type = 'U') AS dept_mod
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_dept WHERE sync_seq = ta.sync_seq AND sync_type = 'D') AS dept_del
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_emp  WHERE sync_seq = ta.sync_seq AND sync_type = 'I') AS emp_new
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_emp  WHERE sync_seq = ta.sync_seq AND sync_type = 'U') AS emp_mod
             , ( SELECT COUNT(*) FROM $DB_NEOS$t_co_ldap_emp  WHERE sync_seq = ta.sync_seq AND sync_type = 'D') AS emp_del
          FROM ( SELECT t1.sync_seq  AS sync_seq
                      , t1.sync_date AS sync_date
                      , t1.sync_mode AS sync_mode
                      , t2.emp_name  AS emp_name
                      , RANK() OVER (ORDER BY t1.sync_date DESC) AS rnk_num
                   FROM $DB_NEOS$t_co_ldap_req t1
              LEFT JOIN $DB_NEOS$t_co_emp_multi t2
                     ON t1.create_seq = t2.emp_seq
                    AND t2.lang_code  = 'kr'
                  WHERE t1.comp_seq   = #compSeq#
                  
                  <isNotEmpty property="syncType">
                    AND t1.sync_mode  = #syncType#
                  </isNotEmpty>
        
               ORDER BY t1.sync_date DESC
               ) ta
               
        <isNotEmpty property="startNum">
            <isNotEmpty property="endNum">
                <isNotEqual property="endNum" compareValue="0">
                  WHERE ta.rnk_num BETWEEN $startNum$+1 AND ($startNum$+$endNum$)
                </isNotEqual>
            </isNotEmpty>
        </isNotEmpty>
    </select>
	
	<select id="LdapManage.selectLdapSyncList_TOTALCOUNT" parameterClass="hashmap" resultClass="string">
		select count(*) as cnt from $DB_NEOS$t_co_ldap_req where comp_seq=#compSeq#
		<isNotEmpty property="syncType">
			and	r.sync_mode = #syncType#
		</isNotEmpty>
	</select>
	
	<delete id="LdapManage.deleteLdapReq" parameterClass="hashmap">
	/* LdapManage.deleteLdapReq - oracle */
		delete from $DB_NEOS$t_co_ldap_req where comp_seq=#compSeq#
	</delete>	
	
    <select id="LdapManage.selectLdapSyncDetail" parameterClass="hashmap" resultClass="egovMap">
        /* LdapManage.selectLdapSyncDetail - oracle */
        SELECT tb.reg_date
             , tb.reg_datetime
             , tb.sync_type
             , tb.sync_status
             , tb.sync_msg
             , tb.sync_date
             , tb.org_div
             , tb.org_name
          FROM ( SELECT ta.reg_date
                      , ta.reg_datetime
                      , ta.sync_type
                      , ta.sync_status
                      , ta.sync_msg
                      , ta.sync_date
                      , ta.org_div
                      , ta.org_name
                      , RANK() OVER (ORDER BY ta.reg_datetime DESC) as rnk_num
                   FROM ( SELECT TO_CHAR(d.reg_date, 'YYYY-MM-DD HH24:MI:SS') AS reg_date
                               , d.reg_date AS reg_datetime
                               , CASE d.sync_type
                                   WHEN 'I' THEN '등록'
                                   WHEN 'U' THEN '수정'
                                   WHEN 'D' THEN '삭제'
                                   ELSE ''
                                 END AS sync_type
                               , CASE d.sync_status
                                   WHEN 'P' THEN '처리중'
                                   WHEN 'C' THEN '처리완료'
                                   WHEN 'E' THEN '전송불가'
                                   ELSE '대기'
                                 END AS sync_status
                               , d.error_msg AS sync_msg
                               , NVL(TO_CHAR(d.sync_date, 'YYYY-MM-DD HH24:MI:SS'), '') AS sync_date
                               , '부서' AS org_div
                               , dm.dept_name AS org_name
                          FROM $DB_NEOS$t_co_ldap_dept d
                          JOIN $DB_NEOS$t_co_dept_multi dm
                            ON dm.lang_code = 'kr'
                           AND d.dept_seq   = dm.dept_seq
                           AND d.sync_seq   = #syncSeq#
                         UNION ALL
                         SELECT TO_CHAR(d.reg_date, 'YYYY-MM-DD HH24:MI:SS') AS reg_date
                              , d.reg_date AS reg_datetime
                              , CASE d.sync_type
                                  WHEN 'I' THEN '등록'
                                  WHEN 'U' THEN '수정'
                                  WHEN 'D' THEN '삭제'
                                  ELSE ''
                                END AS sync_type
                              , CASE d.sync_status
                                  WHEN 'P' THEN '처리중'
                                  WHEN 'C' THEN '처리완료'
                                  WHEN 'E' THEN '전송불가'
                                  ELSE '대기'
                                END AS sync_status
                              , d.error_msg AS sync_msg
                              , NVL(TO_CHAR(d.sync_date, 'YYYY-MM-DD HH24:MI:SS'), '') AS sync_date
                              , '사용자' AS org_div
                              , em.emp_name AS org_name
                           FROM $DB_NEOS$t_co_ldap_emp d
                           JOIN $DB_NEOS$t_co_emp_multi em
                             ON em.lang_code = 'kr'
                            AND d.emp_seq    = em.emp_seq 
                            AND d.sync_seq   = #syncSeq#
                        ) ta
                 ORDER BY ta.reg_datetime DESC
               ) tb
        
               <isNotEmpty property="startNum">
                   <isNotEmpty property="endNum">
                       <isNotEqual property="endNum" compareValue="0">
                           WHERE tb.rnk_num BETWEEN $startNum$+1, ($startNum$+$endNum$)
                       </isNotEqual>
                   </isNotEmpty>
               </isNotEmpty>
    </select>
	
	<select id="LdapManage.selectLdapSyncDetail_TOTALCOUNT" parameterClass="hashmap" resultClass="string">
		select (select count(*) from $DB_NEOS$t_co_ldap_dept where sync_seq=#syncSeq#) + (select count(*) from $DB_NEOS$t_co_ldap_emp where sync_seq=#syncSeq#) as cnt
	</select>	
	
	<insert id="LdapManage.insertLdapReq" parameterClass="hashmap">
		insert into $DB_NEOS$t_co_ldap_req (sync_seq, comp_seq, sync_date, sync_mode, create_seq) VALUES
		(#syncSeq#, #compSeq#, SYSDATE, #syncMode#, #createSeq#)
	</insert>	
	
	<select id="LdapManage.selectLdapDeptCnt" parameterClass="hashmap" resultClass="string">
	/* LdapManage.selectLdapDeptCnt - oracle */
		select count(*) as cnt from $DB_NEOS$t_co_ldap_dept where comp_seq=#compSeq# and sync_status=' '
	</select>
	
	<select id="LdapManage.selectLdapEmpCnt" parameterClass="hashmap" resultClass="string">
	/* LdapManage.selectLdapEmpCnt - oracle */
		select count(*) as cnt from $DB_NEOS$t_co_ldap_emp where comp_seq=#compSeq# and sync_status=' '
	</select>
	
	<select id="LdapManage.selectLdapSyncTargetList" parameterClass="hashmap" resultClass="egovMap">
	/* LdapManage.selectLdapSyncTargetList - oracle */
		select 
	    result.org_div,
	    result.org_name,
	    result.uid_ as "uid"
	    from
		(
			select
			d.reg_date,
			'D' as org_div,
			dm.dept_name as org_name,
			d.uid_
			from $DB_NEOS$t_co_ldap_dept d
			join $DB_NEOS$t_co_dept_multi dm on d.dept_seq=dm.dept_seq and dm.lang_code='kr'
			where d.comp_seq=#compSeq# and d.sync_status=' '
			union all
			select
			d.reg_date,
			'U' as org_div,
			dm.emp_name as org_name,
			d.uid_
			from $DB_NEOS$t_co_ldap_emp d
			join $DB_NEOS$t_co_emp_multi dm on d.emp_seq=dm.emp_seq and dm.lang_code='kr'
			where d.comp_seq=#compSeq# and d.sync_status=' '
		) result
		order by reg_date
	</select>	
	
	<select id="LdapManage.selectEmpLoginCheckInfo" parameterClass="hashmap" resultClass="egovMap">
		select *
		  from(
			    select
			    		rownum as rnum,
					    case when e.login_passwd = #loginPasswdEnc# then 'Y' 
					    	 else 'N' 
					    	 end as enc_password_check,
						NVL(lk.pw_sync_yn,'N') as pw_sync_yn,
						lk.ad_name,
						lk.gw_seq,
						l.comp_seq,
						l.ad_ip,
						l.userid, 
						l.password,
						l.ad_domain,
						l.base_dir,
						l.dept_dir,
						l.emp_dir,
						l.dept_ou_type,
						NVL(l.sync_mode,' ') as sync_mode,
						case when l.sync_mode = 'atg' and le.emp_seq is not null then 'Y'
					    	 when l.sync_mode = 'gta' and lk.gw_seq is not null then 'Y'
					    	 when l.sync_mode = 'login' then 'Y'
					    	 else 'N' 
					    	 end as ldap_use_yn
			    from $DB_NEOS$t_co_emp e
			    join $DB_NEOS$t_co_emp_comp ec on e.emp_seq = ec.emp_seq and ec.use_yn = 'Y'
			    join $DB_NEOS$t_co_comp c on ec.comp_seq = c.comp_seq and c.use_yn = 'Y'
			    left join $DB_NEOS$t_co_ldap l on ec.comp_seq = l.comp_seq
			    left join $DB_NEOS$t_co_ldap_emp le on e.emp_seq = le.emp_seq and l.comp_seq = le.comp_seq
			    left join $DB_NEOS$t_co_ldap_key lk on lk.org_div='U' and e.emp_seq = lk.gw_seq
			    where e.login_id=#loginId#
			    order by l.use_yn desc
			    )
		where rnum = 1
	</select>
	
	<select id="LdapManage.selectLdapPasswdLiveChangeInfo" parameterClass="hashmap" resultClass="egovMap">
		select
		l.group_seq, 
		l.comp_seq,
		l.use_yn,
		l.ad_ip,
		l.userid, 
		l.password,
		l.ad_domain,
		l.base_dir,
		l.dept_dir,
		l.emp_dir,
		l.dept_ou_type, 
		l.sync_mode,
		lk.gw_seq,
		lk.org_div,
		lk.ad_name,
		e.login_id
		from $DB_NEOS$t_co_ldap_key lk
		join $DB_NEOS$t_co_ldap l on lk.comp_seq = l.comp_seq and l.sync_mode='gta'
		join $DB_NEOS$t_co_comp c on c.comp_seq=l.comp_seq and c.use_yn='Y'
		join $DB_NEOS$t_co_emp e on lk.gw_seq=e.emp_seq
		where lk.org_div='U' and lk.gw_seq=#empSeq#
		  and rownum = 1
	</select>
	
    <select id="LdapManage.selectLdapKeyUsn" parameterClass="hashmap" resultClass="egovMap">
        /* LdapManage.selectLdapKeyUsn - oracle */
        SELECT org_div
             , gw_seq
             , usn
             , ad_name
             , relate_dept_seq
             , comp_seq
             , pw_sync_yn
          FROM $DB_NEOS$t_co_ldap_key
         WHERE comp_seq = #compSeq#
           AND usn      = #usn#
           AND ROWNUM   = 1
    </select>
    
    <delete id="LdapManage.deleteGarbageLdapKey" parameterClass="hashmap">
        /* LdapManage.deleteGarbageLdapKey - oracle */
        DELETE
          FROM $DB_NEOS$t_co_ldap_key
         WHERE org_div = 'D' and comp_seq = #compSeq# and relate_dept_seq NOT IN ( SELECT dept_seq
                                          FROM $DB_NEOS$t_co_dept )
    </delete>
    
    <delete id="LdapManage.deleteGarbageLdapEmp" parameterClass="hashmap">
        /* LdapManage.deleteGarbageLdapEmp - oracle */
        DELETE
          FROM $DB_NEOS$t_co_ldap_emp
         WHERE comp_seq = #compSeq#
           AND login_id NOT IN ( SELECT login_id
                                   FROM t_co_emp )
    </delete>
    
    <delete id="LdapManage.deleteRemoveLdapKey" parameterClass="hashmap">
        /* LdapManage.deleteRemoveLdapKey - oracle */
        DELETE
          FROM $DB_NEOS$t_co_ldap_key
         WHERE comp_seq = #compSeq#
           AND #usnArray# NOT LIKE '%,'||usn||',%'
    </delete>
    
    <select id="LdapManage.ldapKeyList" parameterClass="hashmap" resultClass="string">
        /* LdapManage.ldapKeyList - oracle */
         SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH(ta.usn, ',')), 2) AS usn
           FROM ( SELECT ROWNUM AS row_num
                       , usn
                    FROM $DB_NEOS$t_co_ldap_key
                   WHERE org_div  = #orgDiv#
                     AND comp_seq = #compSeq#
                ) ta
          START WITH row_num = 1
          CONNECT BY PRIOR row_num = row_num-1
    </select>
	
	<select id="LdapManage.ldapUserKeyArray" parameterClass="hashmap" resultClass="string">
		select NVL((',' || (LISTAGG(sync_seq, ',') WITHIN GROUP(ORDER BY sync_seq)) || ','),' ') as "uid" 
		  from $DB_NEOS$t_co_ldap_emp 
		 where comp_seq=#compSeq#
	</select>	

    <select id="LdapManage.selectLdapKeyAll" parameterClass="hashmap" resultClass="egovMap">
        /* LdapManage.selectLdapKeyAll - oracle */    
    
        SELECT org_div
             , gw_seq
             , usn
             , ad_name
             , relate_dept_seq
             , comp_seq
             , pw_sync_yn
          FROM $DB_NEOS$t_co_ldap_key
         WHERE comp_seq = #compSeq#

    </select>

    <select id="LdapManage.selectLdapAtgUserList" parameterClass="hashmap" resultClass="egovMap">
         /* LdapManage.selectLdapAtgUserList - oracle */
         SELECT ta.sync_seq
              , ta.uid
              , ta.sync_status
              , ta.login_id
              , ta.emp_name
              , ta.email_addr
              , ta.email_domain
              , ta.mobile_tel_num
              , ta.tel_num
              , ta.gw_dept_name
              , ta.sync_date
              , ta.reg_date
              , ta.link_emp_seq
              , ta.error_msg
           FROM ( SELECT le.sync_seq
                       , le.uid
                       , CASE 
                           WHEN cc.emp_seq IS NOT NULL THEN '동기화완료'
                           WHEN ec.emp_seq IS NOT NULL THEN '동기화대기(동일계정연결)'
                           WHEN e.emp_seq IS NOT NULL AND ect.emp_seq IS NOT NULL THEN '동기화불가(중복ID)'
                           ELSE '동기화대기(입사처리)'
                         END AS sync_status
                       , le.login_id
                       , le.emp_name
                       , le.email_addr
                       , le.email_domain
                       , le.mobile_tel_num
                       , le.tel_num
                       , NVL(dm.dept_name, NVL(rd.dept_name, '')) AS gw_dept_name
                       , NVL(TO_CHAR(le.sync_date, 'YYYY-MM-DD HH24:MI:SS'), '') AS sync_date
                       , NVL(TO_CHAR(le.reg_date, 'YYYY-MM-DD HH24:MI:SS'), '') AS reg_date
                       , NVL(ec.emp_seq, '') AS link_emp_seq
                       , le.error_msg
                       , RANK() OVER (ORDER BY le.sync_date DESC, le.reg_date DESC, le.emp_name) AS rnk_num
                    FROM $DB_NEOS$t_co_ldap_emp le
               LEFT JOIN $DB_NEOS$t_co_ldap_key lk   ON le.dept_seq        = lk.relate_dept_seq
               LEFT JOIN $DB_NEOS$t_co_dept_multi rd ON rd.lang_code       = 'kr'
                                                    AND lk.relate_dept_seq = rd.dept_seq
               LEFT JOIN $DB_NEOS$t_co_emp e         ON le.login_id        = e.login_id
               LEFT JOIN $DB_NEOS$t_co_emp_comp ec   ON e.emp_seq          = ec.emp_seq
                                                    AND le.comp_seq        = ec.comp_seq 
               LEFT JOIN $DB_NEOS$t_co_emp_comp ect  ON le.comp_seq       != ect.comp_seq
                                                    AND e.emp_seq          = ect.emp_seq
                                                    AND e.main_comp_seq    = ect.comp_seq
               LEFT JOIN $DB_NEOS$t_co_emp_comp cc   ON le.comp_seq        = cc.comp_seq
                                                    AND le.emp_seq         = cc.emp_seq
               LEFT JOIN $DB_NEOS$t_co_dept_multi dm ON dm.lang_code       = 'kr'
                                                    AND cc.dept_seq        = dm.dept_seq
                   WHERE le.comp_seq = #compSeq#
                     AND (le.login_id LIKE '%$empSearchName$%' OR le.emp_name LIKE '%$empSearchName$%')
                     
                      <isEqual property="syncStatus" compareValue="success">
                          AND cc.emp_seq IS NOT NULL
                      </isEqual>
                      
                      <isEqual property="syncStatus" compareValue="link">
                          AND cc.emp_seq IS NULL
                          AND ec.emp_seq IS NOT NULL
                      </isEqual>
                      
                      <isEqual property="syncStatus" compareValue="overlap">
                          AND cc.emp_seq  IS NULL
                          AND ec.emp_seq  IS NULL
                          AND e.emp_seq   IS NOT NULL
                          AND ect.emp_seq IS NOT NULL
                      </isEqual>
                      
                      <isEqual property="syncStatus" compareValue="new">
                          AND e.emp_seq IS NULL
                      </isEqual>
                      
                  ORDER BY le.sync_date DESC, le.reg_date DESC, le.emp_name
                ) ta 
            
                <isNotEmpty property="startNum">
                    <isNotEmpty property="endNum">
                        <isNotEqual property="endNum" compareValue="0">
                            WHERE ta.rnk_num BETWEEN $startNum$+1, ($startNum$+$endNum$)
                        </isNotEqual>
                    </isNotEmpty>
                </isNotEmpty>
    </select>

	<update id="LdapManage.updateLdapEmpLinkSeq" parameterClass="hashmap">
	/* LdapManage.updateLdapEmpLinkSeq - oracle */ 		
 		MERGE INTO $DB_NEOS$t_co_ldap_emp le
		     USING( SELECT ec.emp_seq as emp_seq, le.uid_ as uid_
		     		  from $DB_NEOS$t_co_ldap_emp le
				 left join $DB_NEOS$t_co_ldap_key lk on le.dept_seq = lk.relate_dept_seq
				 left join $DB_NEOS$t_co_emp e on le.login_id = e.login_id
				inner join $DB_NEOS$t_co_emp_comp ec on e.emp_seq = ec.emp_seq and le.comp_seq = ec.comp_seq
				 left join $DB_NEOS$t_co_emp_comp cc on le.comp_seq = cc.comp_seq and le.emp_seq = cc.emp_seq
				 	 where le.comp_seq = #compSeq# and cc.emp_seq is null
				 <isNotEqual property="chkLdapUser" compareValue="all">
				 	   and le.sync_seq in ($chkLdapUser$)
				 </isNotEqual>
		            ) JOINED_TABLE
	       ON (le.uid_ = JOINED_TABLE.uid_)
	               
	WHEN MATCHED THEN UPDATE
	      SET le.emp_seq = JOINED_TABLE.emp_seq
	        , le.sync_date = SYSDATE
	        , le.sync_status = 'L'
	        , error_msg = '동일계정 연결완료'
 		
	</update>

    <select id="LdapManage.selectLdapAtgNewUserList" parameterClass="hashmap" resultClass="egovMap">
         /* LdapManage.selectLdapAtgNewUserList - oracle */
         SELECT le.sync_seq
              , le.uid
              , le.login_id
              , le.comp_seq
              , d.biz_seq
              , d.dept_seq
              , le.emp_name
              , CASE
                  WHEN le.email_domain = c.email_domain THEN le.email_addr
                  ELSE le.login_id
                END AS email_addr
              , CASE
                  WHEN le.email_domain != c.email_domain THEN le.email_addr
                  ELSE ''
                END AS out_mail
              , CASE
                  WHEN le.email_domain != c.email_domain THEN le.email_domain
                  ELSE ''
                END AS out_domain
              , le.mobile_tel_num
              , le.tel_num
              , le.fax_num
              , le.home_tel_num
           FROM $DB_NEOS$t_co_ldap_emp le
           JOIN $DB_NEOS$t_co_ldap_key lk ON le.dept_seq        = lk.relate_dept_seq
           
			<isEmpty property="selectedDeptSeq">
			JOIN $DB_NEOS$t_co_dept d      ON lk.relate_dept_seq = d.dept_seq
			</isEmpty>
	
			<isNotEmpty property="selectedDeptSeq">
			JOIN $DB_NEOS$t_co_dept d      ON d.dept_seq = #selectedDeptSeq#
			</isNotEmpty>           
           
           JOIN $DB_NEOS$t_co_comp c      ON d.comp_seq         = c.comp_seq
      LEFT JOIN $DB_NEOS$t_co_emp e       ON le.login_id        = e.login_id
          WHERE le.comp_seq = #compSeq#
            AND e.emp_seq IS NULL
            <isNotEqual property="chkLdapUser" compareValue="all">
                AND le.sync_seq IN ($chkLdapUser$)
            </isNotEqual>       
         ORDER BY le.reg_date DESC, le.sync_date DESC, le.emp_name
    </select>
	
	<update id="LdapManage.updateLoginpwFromLdap" parameterClass="hashmap">
		update $DB_NEOS$t_co_emp
		   SET passwd_date=SYSDATE
		     , passwd_status_code='P'
		     , prev_login_passwd = login_passwd
		     , login_passwd = #loginPasswdEnc#
		     , last_login_date = null
		 where login_id = #loginId#
	</update>		
	
	<select id="LdapManage.selectDeptSeqFomDeptCd" parameterClass="hashmap" resultClass="string">
		select dept_seq from $DB_NEOS$t_co_dept where use_yn = 'Y' and comp_seq = #compSeq# and dept_cd = #deptCd# and rownum=1
	</select>
		
    
</sqlMap>