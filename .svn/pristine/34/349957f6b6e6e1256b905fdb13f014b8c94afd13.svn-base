<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="neos.cmm.erp.sqlmap.iu.mssql">

	<select id="selectCurrentTime" resultType="hashmap">
		select convert(varchar, getdate(), 120) as "currentTime"
	</select>
	
	<select id="selectMaCompList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			mc.cd_company   as "cdCompany",
			mc.nm_company   as "nmCompany",
			mc.company_gn   as "companyGn",
			mc.fg_lang      as "fgLang",
			mc.no_company   as "noCompany",
			mc.en_company   as "enCompany",
			mc.fiscal_yr    as "fiscalYr",
			mc.fiscal_sd    as "fiscalSd",
			mc.fiscal_ed    as "fiscalEd",
			ISNULL(mc.no_tel, '')       as "noTel",
			mc.no_fax       as "noFax",
			mc.ads_no       as "adsNo",
			mc.ads_h        as "adsH",
			mc.ads_d        as "adsD",
			mc.nm_ceo       as "nmCeo",
			mc.no_regist    as "noRegist",
			mc.no_tel1      as "noTel1",
			mc.ads_no1      as "adsNo1",
			mc.ads1_h       as "ads1H",
			mc.ads1_d       as "ads1D",
			mc.dt_open      as "dtOpen",
			mc.dt_start     as "dtStart",
			mc.no_allpay    as "noAllpay",
			mc.id_insert    as "idInsert",
			mc.dts_insert   as "dtsInsert",
			mc.id_update    as "idUpdate",
			mc.dts_update   as "dtsUpdate",
			mc.nm_eng       as "nmEng",
			mc.fg_corp      as "fgCorp",
			mc.yn_affiliate as "ynAffiliate",
			mc.fg_comp      as "fgComp",
			mc.fg_acct      as "fgAcct",
			mc.cd_groupware as "cdGroupware",
			mc.cd_ceo       as "cdCeo",
			mc.cd_gun       as "cdGun",
			mc.yn_image     as "ynImage",
			mc.ads_e        as "adsE",
			mc.cd_company as "id",
			'c' as "gbnOrg",
			'c' as "orgDiv",
			mc.cd_company as "includeDeptCode",
			mc.cd_company as "compSeq",
			'' as "bizSeq",
			'0' as "parentSeq",
			mc.cd_company as "path",
			'' as "parentPath",
			mc.nm_company as "text"
		from neoe.ma_company mc
		where
			mc.cd_company = #{cdCompany}
	</select>
	
	<select id="selectMaDeptList" parameterType="hashmap" resultType="hashmap">
		/* selectMaDeptList - mssql */
		SELECT 
			cd_dept        as "cdDept",
			cd_company     as "cdCompany",
			nm_dept        as "nmDept",
			cd_bizarea     as "cdBizarea",
			cd_cc          as "cdCc",
			tp_cal         as "tpCal",
			ISNULL(h_dept, '')         as "hDept",
			no_empmng      as "noEmpmng",
			sd_dept        as "sdDept",
			ed_dept        as "edDept",
			dt_start       as "dtStart",
			dt_end         as "dtEnd",
			tp_dept        as "tpDept",
			lb_dept        as "lbDept",
			yn_rest        as "ynRest",
			id_insert      as "idInsert",
			dts_insert     as "dtsInsert",
			id_update      as "idUpdate",
			dts_update     as "dtsUpdate",
			cd_dept_map    as "cdDeptMap",
			nm_dept_map    as "nmDeptMap",
			en_dept        as "enDept",
			dc_rmk1        as "dcRmk1",
			dc_rmk2        as "dcRmk2",
			cd_account     as "cdAccount",
			cd_bgdept_map  as "cdBgdeptMap",
			cd_user1       as "cdUser1",
			cd_user2       as "cdUser2",
       <!-- nm_dept_l1     as "nmDeptL1",
			nm_dept_l2     as "nmDeptL2",
			nm_dept_l3     as "nmDeptL3",
			nm_dept_l4     as "nmDeptL4",
			nm_dept_l5     as "nmDeptL5",
			cd_level       as "cdLevel",
			no_sort        as "noSort", db에 필드 없음.. -->
			gw_insert_time as "gwInsertTime",
			gw_update_time as "gwUpdateTime",
			cd_company+cd_dept as "id",
			cd_company+cd_dept as "deptSeq",
			'd' as "gbnOrg",
			'd' as "orgDiv",
			cd_company+cd_dept as "includeDeptCode",
			cd_company as "compSeq",
			cd_company+cd_bizarea as "bizSeq",
			(
				CASE ISNULL(h_dept,'')
					WHEN '' THEN cd_company+cd_bizarea
					ELSE cd_company+h_dept
				END
			) as "parentSeq",
			cd_company+'|'+cd_company+cd_bizarea+'|'+cd_company+cd_dept as "path",
			cd_company+'|'+cd_company+cd_bizarea as "parentPath",
			md.nm_dept as "text",
			'N' as "team_yn",
			en_dept        as "deptNameEn",
			case when (convert(nvarchar(8), GETDATE(), 112) <![CDATA[<=]]> md.dt_end or replace(ISNULL(md.dt_end,''),' ','') = '') then 'Y' else 'N' end as useYn
		from neoe.ma_dept md
		where
			md.cd_company = #{cdCompany}			
			<if test='cdDept != null and cdDept != "" '>
			and md.cd_dept = #{cdDept}
			</if>
			<if test='erpIuDeptSelectFilter != null and erpIuDeptSelectFilter != ""'>
				${erpIuDeptSelectFilter}
			</if>
			and ISNULL(md.cd_dept,'') != ISNULL(md.h_dept,'')
		order by cd_dept
	</select>
	
	<select id="selectMaDeptPathList" parameterType="hashmap" resultType="hashmap">
		WITH CTE_TABLE
		AS
		(
		    SELECT 
				1 as "level", 
				A.cd_company+A.CD_DEPT as "deptSeq", 
				A.cd_company+ISNULL(A.H_DEPT,'') as "hDept", 
				A.NM_DEPT as "nmDept", 
				<if test='isCompPath == null or isCompPath == ""'>
				CONVERT(VARCHAR(256), CAST(A.NM_DEPT as VARCHAR(256))) AS "pathName",
				CONVERT(VARCHAR(256), CAST(A.cd_company+A.CD_DEPT as VARCHAR(256))) AS "path",
				CONVERT(VARCHAR(256), CAST('0' as VARCHAR(256))) AS "parentPath"
				</if>
				<if test='isCompPath != null and isCompPath == "Y"'>
				CONVERT(VARCHAR(256), CAST(C.NM_COMPANY+'|'+B.NM_BIZAREA+'|'+A.cd_company+A.NM_DEPT as VARCHAR(256))) AS "pathName",
				CONVERT(VARCHAR(256), CAST(A.CD_COMPANY+'|'+A.cd_company+A.CD_BIZAREA+'|'+A.cd_company+A.CD_DEPT as VARCHAR(256))) AS "path",
				CONVERT(VARCHAR(256), CAST(A.CD_COMPANY+'|'+A.cd_company+A.CD_BIZAREA as VARCHAR(256))) AS "parentPath"
				</if>
		    FROM neoe.MA_DEPT A 
				LEFT OUTER JOIN neoe.MA_COMPANY C on A.CD_COMPANY = C.CD_COMPANY
				LEFT OUTER JOIN neoe.MA_BIZAREA B on A.CD_BIZAREA = B.CD_BIZAREA AND A.CD_COMPANY = B.CD_COMPANY
		    WHERE A.lb_dept = 1
		    AND A.CD_COMPANY = #{cdCompany}
		 
		    UNION ALL
		      
		    SELECT 
				LEVEL + 1, 
				M.cd_company+M.CD_DEPT  as "deptSeq", 
				M.cd_company+M.H_DEPT as "hDept",   
				M.NM_DEPT  as "nmDept", 
				CONVERT(VARCHAR(256), N.pathName + '|' + CAST(M.NM_DEPT AS VARCHAR(256))) AS "pathName",
				CONVERT(VARCHAR(256), N.path + '|' + CAST(M.cd_company+M.CD_DEPT AS VARCHAR(256))) AS "path",
				N.path AS "parentPath"
		    FROM neoe.MA_DEPT M JOIN CTE_TABLE N ON M.cd_company+M.H_DEPT = N.deptSeq
		)
		SELECT * FROM CTE_TABLE
	</select>
	
	<select id="selectMaBizList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			mb.cd_bizarea    as "cdBizarea",
			mb.cd_company    as "cdCompany",
			mb.nm_bizarea    as "nmBizarea",
			mb.tp_bizarea    as "tpBizarea",
			mb.no_bizarea    as "noBizarea",
			mb.en_bizarea    as "enBizarea",
			mb.no_tel        as "noTel",
			mb.ads_no        as "adsNo",
			mb.ads_h         as "adsH",
			mb.ads_d         as "adsD",
			mb.nm_master     as "nmMaster",
			mb.no_fax        as "noFax",
			mb.cd_law        as "cdLaw",
			mb.nm_law        as "nmLaw",
			mb.tp_job        as "tpJob",
			mb.cls_job       as "clsJob",
			mb.tax_bizarea   as "taxBizarea",
			mb.vat_bizarea   as "vatBizarea",
			mb.nm_empcity    as "nmEmpcity",
			mb.cd_pc         as "cdPc",
			mb.id_etax       as "idEtax",
			mb.cd_cls        as "cdCls",
			mb.dt_fopen      as "dtFopen",
			case when isnull(mb.dt_topen,'') = '' then '99991201' else mb.dt_topen end	as "dtTopen",
			mb.id_insert     as "idInsert",
			mb.dts_insert    as "dtsInsert",
			mb.id_update     as "idUpdate",
			mb.dts_update    as "dtsUpdate",
			mb.cd_area       as "cdArea",
			mb.tp_use        as "tpUse",
			mb.dc_ads_eng    as "dcAdsEng",
			mb.nm_biz_rpt    as "nmBizRpt",
			mb.cd_empcity    as "cdEmpcity",
			mb.no_email      as "noEmail",
			mb.no_mobile     as "noMobile",
			mb.am_local      as "amLocal",
			mb.am_foreign    as "amForeign",
			mb.tp_calcunit   as "tpCalcunit",
			mb.tp_ads        as "tpAds",
			mb.ads_no2       as "adsNo2",
			mb.ads_h2        as "adsH2",
			mb.ads_d2        as "adsD2",
			mb.no_taxagent   as "noTaxagent",
			mb.no_company    as "noCompany",
			mb.no_biz        as "noBiz",
			mb.cd_company+cd_bizarea as "id",
			'b' as "gbnOrg",
			'b' as "orgDiv",
			mb.cd_company+cd_bizarea as "includeDeptCode",
			cd_company as "compSeq",
			mb.cd_company+cd_bizarea as "bizSeq",
			cd_company as "parentSeq",
			cd_company+'|'+mb.cd_company+cd_bizarea as "path",
			cd_company as "parentPath",
			mb.nm_bizarea as "text",
			mb.EN_BIZAREA    as "bizNameEn"
		from neoe.ma_bizarea mb
		where
			mb.cd_company = #{cdCompany}
			<if test='saveYn != null and saveYn == "Y"'>
			and GETDATE() between mb.dt_fopen and isnull((case when mb.dt_topen = '' or mb.dt_topen = null then null else mb.dt_topen end),'99991231')
			</if>
		order by cd_bizarea
	</select>
	
	<select id="selectMaUserList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			mu.id_user as "idUser",
			mu.cd_company as "cdCompany",
			mu.nm_user as "nmUser",
			mu.usr_gbn as "usrGbn",
			mu.gw_insert_time as "gwInsertTime", 
			mu.gw_update_time as "gwUpdateTime"
		from neoe.ma_user mu
		where
			mu.cd_company = #{cdCompany}
			<if test='gwUpdateTime != null and gwUpdateTime != ""'>
			and (mu.GW_INSERT_TIME is null or mu.GW_INSERT_TIME > #{gwUpdateTime}
			</if>
	</select>
	
	<select id="selectHrPhotoList" parameterType="hashmap" resultType="hashmap">
		SELECT 
			hp.cd_company as "cdCompany",
			hp.no_emp as "noEmp",
			hp.dc_photo as "dcPhoto",
			hp.gw_insert_time as "gwInsertTime", 
			hp.gw_update_time as "gwUpdateTime"
		from neoe.hr_photo hp
		where
			hp.cd_company = #{cdCompany}
			<if test='gwUpdateTime != null and gwUpdateTime != ""'>
			and (hp.GW_INSERT_TIME is null or hp.GW_INSERT_TIME > #{gwUpdateTime}
			</if>
	</select>
	
	<select id="selectMaEmpList" parameterType="hashmap" resultType="hashmap">
		/* selectMaEmpList - mssql */
		select t.* from (
		SELECT 
			convert(char, row_number() over(order by 
			<if test='sortField != null and sortField != ""'>
				<if test='sortField != null and sortField == "empName"'>nmKor ${sortType}</if>
				<if test='sortField != null and sortField == "deptName"'>cdDeptName ${sortType}</if>
				<if test='sortField != null and sortField == "emailId"'>noEmail ${sortType}</if>
				<if test='sortField != null and sortField == "erpEmpSeq"'>noEmp ${sortType}</if>
				<if test='sortField != null and sortField == "positionCode"'>cdDutyRankName ${sortType}</if>
				<if test='sortField != null and sortField == "dutyCode"'>cdDutyStepName ${sortType}</if>
				<if test='sortField != null and sortField == "workStatus"'>cdIncom ${sortType}</if>
				<if test='sortField != null and sortField == "statusCode"'>cdEmp ${sortType}</if>
				<if test='sortField != null and sortField == "jobCode"'>cdDutyTypeName ${sortType}</if>
			</if>
			<if test='sortField == null or sortField == ""'>
				cdIncom
			</if>
			) - 1) "rownum",
			pagetable.*
			FROM (
				SELECT 
					top (select count(*) from ma_emp where cd_company = #{cdCompany})
					COUNT(me.no_emp) OVER() "TOTAL_COUNT",
					me.NO_EMP 			as "noEmp",
					me.CD_COMPANY 		as "cdCompany",
					me.NM_KOR 			as "nmKor",
					me.CD_BIZAREA 		as "cdBizarea",
					me.CD_COMPANY+me.CD_BIZAREA as "bizSeq",
					me.CD_DEPT 			as "cdDept",
					me.CD_COMPANY+me.CD_DEPT as "deptSeq",
					(select NM_DEPT from neoe.MA_DEPT where CD_DEPT = me.CD_DEPT AND CD_COMPANY = #{cdCompany}) 		as "cdDeptName",
					me.CD_DDEPT 		as "cdDdept",
					me.CD_COMPANY+me.CD_DDEPT as "gwDeptSeq2",
					(select NM_DEPT from neoe.MA_DEPT where CD_DEPT = me.CD_DDEPT AND CD_COMPANY = #{cdCompany}) 		as "cdDdeptName",
					me.TP_EMP 			as "tpEmp",
					me.CD_EMP			as "cdEmp",
					me.CD_DUTY_RANK 	as "cdDutyRank",
					(select nm_sysdef from neoe.ma_codedtl where CD_COMPANY = me.CD_COMPANY AND cd_field = 'HR_H000002' AND cd_sysdef = me.CD_DUTY_RANK) 		as "cdDutyRankName",
					me.CD_DUTY_STEP		as "cdDutyStep",
					(select nm_sysdef from neoe.ma_codedtl where CD_COMPANY = me.CD_COMPANY AND cd_field = 'HR_H000003' AND cd_sysdef = me.CD_DUTY_STEP) 		as "cdDutyStepName",
					me.CD_PAY_STEP 		as "cdPayStep",
					me.CD_DUTY_RESP 	as "cdDutyResp",
					(select nm_sysdef from neoe.ma_codedtl where CD_COMPANY = me.CD_COMPANY AND cd_field = 'HR_H000052' AND cd_sysdef = me.CD_DUTY_RESP) 		as "cdDutyRespName",				
					me.CD_DUTY_WORK 	as "cdDutyWork",
					me.CD_DUTY_TYPE 	as "cdDutyType",
					(select nm_sysdef from neoe.ma_codedtl where CD_COMPANY = me.CD_COMPANY AND cd_field = 'HR_H000004' AND cd_sysdef = me.CD_DUTY_TYPE) 		as "cdDutyTypeName",
					me.CD_JOB_SERIES 	as "cdJobSeries",
					me.CD_SEX 			as "cdSex",
					me.DT_GENTER 		as "dtGenter",
					me.DT_ENTER 		as "dtEnter",
					REPLACE(me.DT_RETIRE, ' ', '') 		as "dtRetire",
					me.DT_BRETIRE 		as "dtBretire",
					me.CD_INCOM 		as "cdIncom",
					me.NO_POST_RES 		as "noPostRes",
					me.DC_ADDRESS_RES1 	as "dcAddressRes1",
					me.DC_ADDRESS_RES2 	as "dcAddressRes2",
					me.NO_POST_RES 		as "noPostCur",
					me.DC_ADDRESS_RES1 	as "dcAddressCur1",
					me.DC_ADDRESS_RES2 	as "dcAddressCur2",
					mb.ADS_NO 			as "noPostBiz",
					mb.ADS_H 			as "dcAddressBiz1",
					mb.ADS_D 			as "dcAddressBiz2",				
					isnull(me.NO_TEL,'') 			as "noTel",
					isnull(me.NO_TEL_EMER,'')		as "noTelEmer",
					isnull(me.DC_RMK1,'')			as "dcRmk1",
					isnull(me.DC_RMK3,'')			as "dcRmk3",
					REPLACE(me.DT_BIRTH, ' ', '') 		as "dtBirth",
					me.CD_DAY 			as "cdDay",
					me.CD_PART 			as "cdPart",
					me.NO_EMAIL 		as "noEmail",
					REPLACE(me.DT_MARRY, ' ', '') 		as "dtMarry",
					me.CD_ACCOUNT 		as "cdAccount",
					me.CD_PATTERN 		as "cdPattern",
					me.DC_RMK 			as "dcRmk",
					me.DTS_INSERT 		as "dtsInsert",
					me.ID_INSERT 		as "idInsert",
					me.DTS_UPDATE 		as "dtsUpdate",
					me.ID_UPDATE 		as "idUpdate",
					me.YN_USE 			as "ynUse",
					me.YN_MARRY 		as "ynMarry",
					convert(char(23),me.GW_INSERT_TIME,21) 	as "gwInsertTime",
					convert(char(23),me.GW_UPDATE_TIME,21)  as "gwUpdateTime",
					(select no_emp from neoe.hr_photo where cd_company = me.cd_company and no_emp = me.no_emp) as "erpPicFileId",
					me.NM_ENG 			as "nmEn",
					me.NM_CHIN 			as "nmCn"
				from neoe.ma_emp me
				left join neoe.ma_bizarea mb on me.cd_bizarea= mb.cd_bizarea and me.cd_company= mb.cd_company
				where
					me.cd_company = #{cdCompany}
					<if test='noEmpList != null and noEmpList != ""'>
						and me.no_emp in (${noEmpList})
					</if> 
					<if test='empName != null and empName != ""'>
					and me.NM_KOR like '%${empName}%'
					</if>
					<if test='deptName != null and deptName != ""'>
					and me.CD_DEPT IN (select CD_DEPT from neoe.MA_DEPT where NM_DEPT like '%${deptName}%' and cd_company = #{cdCompany})
					</if>
					<if test='deptEmpName != null and deptEmpName != ""'>
					and (me.CD_DEPT IN (select CD_DEPT from neoe.MA_DEPT where NM_DEPT like '%${deptEmpName}%' and cd_company = #{cdCompany}) or me.NM_KOR like '%${deptEmpName}%')
					</if>
					<if test='updateErp != null'>
						and (me.GW_INSERT_TIME is null or CONVERT(CHAR(19),DATEADD(Year, -100, me.GW_INSERT_TIME),20) <![CDATA[<]]> CONVERT(CHAR(19),me.GW_UPDATE_TIME,20)) 
					</if>
					<if test='updateErp == null'>
						and (me.GW_INSERT_TIME is null or me.GW_INSERT_TIME between #{startSyncTime} and #{endSyncTime} or me.GW_UPDATE_TIME between #{startSyncTime} and #{endSyncTime})
					</if>
					<if test='workStatus != null and workStatus != ""'>
						and me.cd_incom = #{workStatus}
					</if>
					<if test='autoYn != null and autoYn == "Y"'>
						<if test='resignCodeStr != null and resignCodeStr != ""'>
							and me.cd_incom not in (${resignCodeStr})					
						</if>
					</if>
					<if test='erpIuEmpSelectFilter != null and erpIuEmpSelectFilter != ""'>
						${erpIuEmpSelectFilter}
					</if>
					<if test='sortField != null and sortField != ""'>
						<if test='sortField != null and sortField == "empName"'>order by nmKor ${sortType}</if>
						<if test='sortField != null and sortField == "deptName"'>order by cdDeptName ${sortType}</if>
						<if test='sortField != null and sortField == "emailId"'>order by noEmail ${sortType}</if>
						<if test='sortField != null and sortField == "erpEmpSeq"'>order by noEmp ${sortType}</if>
						<if test='sortField != null and sortField == "positionCode"'>
							<if test='posiSetCode != null and posiSetCode == "cdDutyResp"'>order by cdDutyRespName ${sortType}</if>
							<if test='posiSetCode != null and posiSetCode == "cdDutyRank"'>order by cdDutyRankName ${sortType}</if>
							<if test='posiSetCode != null and posiSetCode == "cdDutyStep"'>order by cdDutyStepName ${sortType}</if>
						</if>
						<if test='sortField != null and sortField == "dutyCode"'>
							<if test='dutySetCode != null and dutySetCode == "cdDutyResp"'>order by cdDutyRespName ${sortType}</if>
							<if test='dutySetCode != null and dutySetCode == "cdDutyRank"'>order by cdDutyRankName ${sortType}</if>
							<if test='dutySetCode != null and dutySetCode == "cdDutyStep"'>order by cdDutyStepName ${sortType}</if>
						</if>
						<if test='sortField != null and sortField == "workStatus"'>order by cdIncom ${sortType}</if>
						<if test='sortField != null and sortField == "jobCode"'>order by cdDutyTypeName ${sortType}</if>
						<if test='sortField != null and sortField == "statusCode"'>order by cdEmp ${sortType}</if>
					</if>
				) pagetable
			<if test='startNum != null and autoYn != "Y"'>
			</if>
		)t	where rownum between ${startNum} and ${endNum}
	</select>
	
	<select id="selectMaCodedtlList" parameterType="hashmap" resultType="hashmap" useCache="false">
		SELECT 
			mc.cd_company as "cdCompany",
			mc.cd_field as "cdField",
			mc.cd_sysdef <if test='aliasCode !=null and aliasCode != ""'>as "${aliasCode}"</if> <if test='aliasCode ==null or aliasCode == ""'>as "cdSysdef"</if>,
			mc.fg1_syscode as "fg1Syscode",
			mc.nm_sysdef <if test='aliasName !=null and aliasName != ""'>as "${aliasName}"</if> <if test='aliasName ==null or aliasName == ""'>as "nmSysdef"</if>,
			mc.NM_SYSDEF_E as "nmSysdefEn",
			mc.use_yn as "useYN",
			mc.gw_insert_time as "gwInsertTime", 
			mc.gw_update_time as "gwUpdateTime"
		from neoe.ma_codedtl mc
		where
			mc.cd_company = #{cdCompany}
			and mc.cd_field = #{cdField}
		order by mc.cd_sysdef
	</select>
	
	<select id="selectMaDeptGwDelete" parameterType="hashmap" resultType="hashmap">
		SELECT 
			d.cd_dept as "cdDept",
			d.cd_company as "cdCompany",
			convert(varchar, d.gw_delete_time, 120) as  gw_delete_time
		from neoe.ma_dept_gw_delete d
		where
			d.cd_company = #{cdCompany}
			and (d.gw_delete_time is null or d.gw_delete_time between #{startSyncTime} and #{endSyncTime})
	</select>
	
	<select id="selectMaUserGwDelete" parameterType="hashmap" resultType="hashmap">
		SELECT 
			d.id_user as "idUser",
			d.cd_company as "cdCompany",
			convert(varchar, d.gw_delete_time, 120) as  gw_delete_time
		from neoe.ma_user_gw_delete d
		where
			d.cd_company = #{cdCompany}
			and (d.gw_delete_time is null or d.gw_delete_time between #{startSyncTime} and #{endSyncTime})
	</select>
	
	<select id="selectHrPhotoGwDelete" parameterType="hashmap" resultType="hashmap">
		SELECT 
			d.no_emp as "noEmp",
			d.cd_company as "cdCompany",
			convert(varchar, d.gw_delete_time, 120) as  gw_delete_time
		from neoe.hr_photo_gw_delete d
		where
			d.cd_company = #{cdCompany}
			and (d.gw_delete_time is null or d.gw_delete_time between #{startSyncTime} and #{endSyncTime})
	</select>
	
	<select id="selectMaEmpGwDelete" parameterType="hashmap" resultType="hashmap">
		SELECT 
			d.no_emp as "noEmp",
			d.cd_company as "cdCompany",
			convert(varchar, d.gw_delete_time, 120) as  gw_delete_time
		from neoe.ma_emp_gw_delete d
		where
			d.cd_company = #{cdCompany}
			and (d.gw_delete_time is null or d.gw_delete_time between #{startSyncTime} and #{endSyncTime})
	</select>
	
	<select id="selectMaCodedtlGwDelete" parameterType="hashmap" resultType="hashmap">
		SELECT 
			d.cd_field as "cdField",
			d.cd_sysdef as "cdSysdef",
			d.cd_company as "cdCompany",
			convert(varchar, d.gw_delete_time, 120) as  gw_delete_time
		from neoe.ma_codedtl_gw_delete d
		where
			d.cd_company = #{cdCompany}
			and (d.gw_delete_time is null or d.gw_delete_time between #{startSyncTime} and #{endSyncTime})
	</select>
	
	<!-- <select id="selectErpEmpWorkCodeList" parameterType="hashmap" resultType="hashmap">
		select me.cd_incom as "erpCode"
		from neoe.ma_emp me
		where
			me.cd_company = #{cdCompany}
		group by me.cd_incom	
	</select> -->
	
	<update id="updateMaEmpGwUpdateDate" parameterType="hashmap">
		update	neoe.ma_emp
		set GW_INSERT_TIME = DATEADD(${timeType},${time},GETDATE())
		where
			CD_COMPANY = #{erpCompSeq}
			<if test='erpEmpSeq != null and erpEmpSeq != ""'>
			and no_emp = #{erpEmpSeq}
			</if>
	</update>
	
	<update id="updateMaDeptGwUpdateDate" parameterType="hashmap">
		update	neoe.ma_dept
		set GW_INSERT_TIME = DATEADD(${timeType},${time},GETDATE())
		where
			CD_COMPANY = #{erpCompSeq}
			<if test='erpDeptSeq != null and erpDeptSeq != ""'>
			and cd_dept = #{erpDeptSeq}
			</if>
			and GW_INSERT_TIME is null
	</update>
	
	<select id="selectErpProjectList" parameterType="hashmap" resultType="hashmap">
		select
		ISNULL(NO_PROJECT,'') as noProject,
		ISNULL(NO_SEQ,0) as noSeq,
		ISNULL(CD_COMPANY,'') as cdCompany,
		ISNULL(NM_PROJECT,'') as nmProject,
		ISNULL(TP_PROJECT,'') as tpProject,
		ISNULL(CD_PARTNER,'') as cdPartner,
		ISNULL(AM_CONTRACT,0) as amContract,
		ISNULL(CD_EXCH,'') as cdExch,
		ISNULL(RT_EXCH,0) as rtExch,
		ISNULL(FG_VAT,'') as fgVat,
		ISNULL(AM_BASE,0) as amBase,
		ISNULL(AM_WONAMT,0) as amWonamt,
		0 as amWonvat,
		ISNULL(SD_PROJECT,'') as sdProject,
		ISNULL(ED_PROJECT,'') as edProject,
		ISNULL(STA_PROJECT,'') as staProject,
		ISNULL(DT_CHANGE,'') as dtChange,
		ISNULL(NO_TEL_PARTNER,'') as noTel,
		'' as noHp,
		'' as noFax,
		ISNULL(NM_GRADE_PARTNER,'') as eMail,
		ISNULL(NM_EMP_PARTNER,'') as lnPartner,
		ISNULL(NM_EMP_PARTNER,'') as nmPtr
		from NEOE.SA_PROJECTH
		where CD_COMPANY = #{cdCompany}
		<if test='termTp != null and termTp == "1"'>
		and (CONVERT(NVARCHAR, getdate(), 112) BETWEEN ISNULL(SD_PROJECT,'00000000') AND (CASE WHEN (ISNULL(ED_PROJECT,'00000000') = '00000000' OR ED_PROJECT = '') THEN '99999999' ELSE ED_PROJECT END))
		</if>
		<if test='termTp != null and termTp == "2"'>
		and (ED_PROJECT <![CDATA[<]]> CONVERT(NVARCHAR, getdate(), 112) AND ISNULL(ED_PROJECT,'') NOT IN ('','00000000'))
		</if>
	</select>
	
	
	<select id="selectErpPartnerList" parameterType="hashmap" resultType="hashmap">
		select
		 ISNULL(CD_PARTNER,'') as cdPartner
		,ISNULL(CD_COMPANY,'') as cdCompany
		,ISNULL(LN_PARTNER,'') as lnPartner
		,ISNULL(NO_COMPANY,'') as noCompany
		,case when ISNULL(CLS_PARTNER,'') = '' then '001' else CLS_PARTNER end as clsPartner
		,ISNULL(NM_CEO,'') as nmCeo
		,ISNULL(TP_JOB,'') as tpJob 
		,ISNULL(CLS_JOB,'') as clsJob
		,ISNULL(NO_TEL,'') as noTel1
		,ISNULL(NO_FAX,'') as noFax1
		,ISNULL(NO_POST1,'') as noPost1
		,ISNULL(DC_ADS1_H,'') as dcAds1H
		,ISNULL(DC_ADS1_D,'') as dcAds1D
		,ISNULL(NM_PTR,'') as nmPtr
		,ISNULL(NO_FAX,'') as noFax
		,ISNULL(E_MAIL,'') as eEail
		,ISNULL(NO_TEL,'') as noTel
		,'' as noHp
		,ISNULL(USE_YN,'Y') as useYn
		from NEOE.MA_PARTNER	
		where CD_COMPANY = #{cdCompany}
	</select>
	
	<select id="selectErpDeptDeleteList" parameterType="hashmap" resultType="hashmap">
		/* selectErpDeptDeleteList - mssql */
		SELECT	isnull(CD_COMPANY,'') as cdCompany
				, isnull((CD_COMPANY + CD_DEPT), '') as deleteDeptSeq
		FROM	NEOE.MA_DEPT
		WHERE   CD_COMPANY = #{erpCompSeq}
		  AND	DT_END between CONVERT(VARCHAR(8), (CONVERT(datetime, #{startSyncTime})) , 112) and CONVERT(VARCHAR(8), (CONVERT(datetime, #{endSyncTime})) , 112)
	</select>
	
	
	
	
	<update id="updateIuEmpGwUpdateDate" parameterType="hashmap">
		update	neoe.ma_emp
		set GW_INSERT_TIME = DATEADD(Year, 100, getdate()) 
		where
			CD_COMPANY = #{erpCompSeq} and no_emp = #{erpEmpSeq} 
			<if test='gwUpdateTime != null and gwUpdateTime != ""'>
			and gw_update_time = #{gwUpdateTime}
			</if>
	</update>
</mapper>