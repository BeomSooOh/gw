<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CompManage">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

		<select id="CompManage.getCompList" parameterClass="hashmap" resultClass="egovMap">
			SELECT 
					A.group_seq AS 'groupSeq', 
					A.comp_seq AS 'compSeq', 
					A.comp_cd AS 'compCd', 
					A.parent_comp_seq AS 'parentCompSeq',  
					A.login_type AS 'loginType', 
					A.comp_regist_num AS 'compRegistNum', 
					A.comp_num AS 'compNum', 
					A.standard_code AS 'standardCode', 
					A.erp_use AS 'erpUse', 
					A.tel_num AS 'telNum', 
					A.fax_num AS 'faxNum', 
					A.homepg_addr AS 'homepgAddr', 
					A.comp_mail_url AS 'compMailUrl', 
					A.comp_domain AS 'compDomain', 
					A.email_addr AS 'emailAddr', 
					A.email_domain AS 'emailDomain', 
					A.zip_code AS 'zipCode', 
					A.sms_use AS 'smsUse', 
					A.sms_id AS 'smsId', 
					A.sms_passwd AS 'smsPasswd', 
					A.native_lang_code AS 'nativeLangCode', 
					A.order_num AS 'orderNum', 
					A.use_yn AS 'useYn', 
					A.ea_type AS 'eaType',
					A.comp_email_yn AS 'compEmailYn', 
					A.erp_use_yn AS 'erpUseYn', 
					A.sms_use_yn AS 'smsUseYn', 
					$DB_NEOS$FN_GetMultiLang('kr',B.comp_name_multi) AS 'compName', 
					B.comp_display_name AS 'compDisplayName',  
					B.owner_name AS 'ownerName', 
					B.sender_name AS 'senderName', 
					B.biz_condition AS 'bizCondition', 
					B.item AS 'item', 
					B.addr AS 'addr', 
					B.detail_addr AS 'detailAddr'
			FROM $DB_NEOS$t_co_comp A, $DB_NEOS$v_t_co_comp_multi B 
			WHERE
				A.comp_seq = B.comp_seq
				AND A.group_seq = #groupSeq#
				AND	A.use_yn = 'Y'
				<isNotEmpty property="compSeq">  
				AND	A.comp_seq = #compSeq#
				</isNotEmpty>
				<isNotEmpty property="compName">  
				AND	$DB_NEOS$FN_GetMultiLang(#langCode#,B.comp_name_multi) LIKE CONCAT('%',ifnull(#compName#,''),'%')
				</isNotEmpty>
			ORDER BY A.order_num
		</select>
		
		<select id="CompManage.getCompListAuth" parameterClass="hashmap" resultClass="egovMap">
		    /* CompManage.getCompListAuth - mariadb */
			SELECT A.comp_seq, $DB_NEOS$FN_GetMultiLang(#langCode#,B.comp_name_multi) as comp_name
			FROM $DB_NEOS$t_co_comp A
			<isNotEqual property="userSe" compareValue="MASTER">  	
			INNER JOIN $DB_NEOS$t_co_auth_relate C	
			ON A.comp_seq = C.comp_seq
			AND C.emp_seq = #empSeq#
			AND C.author_type = '005'
			</isNotEqual>	 			    
			   , $DB_NEOS$v_t_co_comp_multi B 
			WHERE
				A.comp_seq = B.comp_seq
                <isNotEqual property="userSe" compareValue="MASTER">
				<isNotEmpty property="compSeq">
				AND	A.comp_seq = #compSeq#
				</isNotEmpty>
				</isNotEqual>
				AND A.group_seq = #groupSeq#
				AND	A.use_yn = 'Y'
				
			GROUP BY A.comp_seq	
			ORDER BY A.order_num, A.comp_seq
		</select>
		
		<select id="CompManage.getCompListGroupping" parameterClass="hashmap" resultClass="egovMap">
			<![CDATA[
			select 
				comp_seq, comp_name
				From $DB_NEOS$v_t_co_comp_multi bb 
			where comp_seq in(
			
				SELECT	DISTINCT 
						IGC.comp_seq 
						FROM 	(
							SELECT	comp_seq
							FROM	$DB_NEOS$t_co_emp_comp
							WHERE 	emp_seq = #empSeq#
							AND 	use_yn			= 'Y'
							AND     work_status IN ('999','004')
						)	IUC
							INNER JOIN 	(
								SELECT	GC.comp_seq		'user_comp_seq'
									, GC.groupping_seq	'groupping_seq'
									, AG.comp_seq		'comp_seq'
								FROM	$DB_NEOS$t_co_groupping_comp	GC
									INNER JOIN	$DB_NEOS$t_co_groupping_comp	AG
									ON 	GC.groupping_seq = AG.groupping_seq	
								WHERE	GC.use_yn	= 'Y'
								AND	AG.use_yn	= 'Y'
							)	IGC
							ON	IUC.comp_seq = IGC.user_comp_seq
						UNION
						SELECT	comp_seq
						FROM	$DB_NEOS$t_co_emp_comp
						WHERE 	emp_seq = #empSeq#
						AND 	use_yn			= 'Y'
						AND     work_status IN ('999','004')    
						
			) and lang_code = 'kr' 
			and
				(select count(menu_no) from $DB_NEOS$t_co_authcode a
					inner join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code
					inner join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
					where a.comp_seq = bb.comp_seq and a.author_type = '005' and b.emp_seq = #empSeq# and c.menu_no = '900000000') > 0
			and
				(select count(menu_no) from $DB_NEOS$t_co_authcode a
					inner join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code
					inner join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
					where a.comp_seq = bb.comp_seq and a.author_type = '005' and b.emp_seq = #empSeq# and c.menu_no = '902000000') > 0
			and
				(select count(menu_no) from $DB_NEOS$t_co_authcode a
					inner join $DB_NEOS$t_co_auth_relate b on a.author_code = b.author_code
					inner join $DB_NEOS$t_co_menu_auth c on a.author_code = c.author_code
					where a.comp_seq = bb.comp_seq and a.author_type = '005' and b.emp_seq = #empSeq# and c.menu_no = '902020000') > 0
			]]>			
		</select>
		
		<select id="CompManage.getComp" parameterClass="hashmap" resultClass="egovMap">
			select *
			from $DB_NEOS$t_co_comp
			where
				comp_seq = #compSeq#
				<isEmpty property="blockUseYn"> 
				and	use_yn = 'Y'
				</isEmpty> 
			limit 1
		</select>
		
		<select id="CompManage.getCompAdmin" parameterClass="hashmap" resultClass="egovMap">
			select c.*,
			case when scm.comp_name_multi is not null then concat($DB_NEOS$FN_GetMultiLang(#langCode#, scm.comp_name_multi),'(', sc.standard_code ,')') else '' end as standard_comp_name
			from $DB_NEOS$t_co_comp c
			left join $DB_NEOS$t_co_comp sc on c.standard_comp_seq = sc.comp_seq
			left join $DB_NEOS$v_t_co_comp_multi scm on sc.comp_seq = scm.comp_seq
			where c.comp_seq = #compSeq#
			limit 1			
		</select>
		
		<delete id="CompManage.deleteComp" parameterClass="hashmap">
			delete
			from $DB_NEOS$t_co_comp
			where
				comp_seq = #compSeq#
		</delete>
		
		<delete id="CompManage.deleteCompMulti" parameterClass="hashmap">
			delete
			from $DB_NEOS$t_co_comp_multi
			where
				comp_seq = #compSeq#
		</delete>
		
		<delete id="CompManage.delCompMulti" parameterClass="hashmap">
			delete
			from $DB_NEOS$t_co_comp_multi
			where
				comp_seq = #compSeq# and lang_code = #langCode#
		</delete>
		
		<select id="CompManage.getChildComp" parameterClass="hashmap" resultClass="egovMap">
			select *
			from $DB_NEOS$t_co_comp
			where
				parent_comp_seq = #compSeq#
		</select>
		
		<select id="CompManage.getCompMulti" parameterClass="hashmap" resultClass="egovMap">
			select *
			from $DB_NEOS$t_co_comp_multi
			where
				comp_seq = #compSeq#
				and lang_code = #langCode#
			limit 1
		</select>
		
		<select id="CompManage.getCompMultiLang" parameterClass="hashmap" resultClass="egovMap">
			select *,
      		ifnull(en.comp_name,'') as comp_name_en,
      		ifnull(jp.comp_name,'') as comp_name_jp,
      		ifnull(cn.comp_name,'') as comp_name_cn
			from $DB_NEOS$t_co_comp_multi a
      		left join $DB_NEOS$t_co_comp_multi en on a.comp_seq = en.comp_seq and en.lang_code = 'en'
      		left join $DB_NEOS$t_co_comp_multi jp on a.comp_seq = jp.comp_seq and jp.lang_code = 'jp'
      		left join $DB_NEOS$t_co_comp_multi cn on a.comp_seq = cn.comp_seq and cn.lang_code = 'cn'
			where
				a.lang_code = 'kr' and a.comp_seq = #compSeq#
		</select>

	    <update id="CompManage.updateComp" parameterClass="hashmap">
			UPDATE $DB_NEOS$`t_co_comp` 
				SET
				<isNotEmpty property="compRegistNum">
				`comp_regist_num` = #compRegistNum# ,
				</isNotEmpty>
				<isNotEmpty property="compNum"> 
				`comp_num` = #compNum# , 
				</isNotEmpty>
				<isNotEmpty property="standardCode">
				`standard_code` = #standardCode# ,
				</isNotEmpty>
				<isNotEmpty property="telNum"> 
				`tel_num` = #telNum# , 
				</isNotEmpty>
				<isNotEmpty property="faxNum">
				`fax_num` = #faxNum# , 
				</isNotEmpty>
				<isNotEmpty property="homepgAddr">
				`homepg_addr` = #homepgAddr# , 
				</isNotEmpty>
				<isNotEmpty property="emailAddr">
				`email_addr` = #emailAddr# , 
				</isNotEmpty>
				<isNotEmpty property="emailDomain">
				`email_domain` = #emailDomain# ,
				</isNotEmpty>
				<isNotEmpty property="zipCode"> 
				`zip_code` = #zipCode# , 
				</isNotEmpty>
				<isNotEmpty property="smsId">
				`sms_id` = #smsId# , 
				</isNotEmpty>
				<isNotEmpty property="smsPasswd">
				`sms_passwd` = #smsPasswd# , 
				</isNotEmpty>
				<isNotEmpty property="useYn">
				`use_yn` = #useYn# , 
				</isNotEmpty>
				<isNotEmpty property="orderNum">
				`order_num` = #orderNum# , 
				</isNotEmpty>
				`modify_seq` = #modifySeq# , 
				`modify_date` = now()
				WHERE
				`comp_seq` = #compSeq#
	    </update>
	    
	     <update id="CompManage.updateCompMulti" parameterClass="hashmap">
	     	UPDATE $DB_NEOS$`t_co_comp_multi` 
			SET
				<isNotEmpty property="compName">
				`comp_name` = #compName# , 
				</isNotEmpty>
				<isNotEmpty property="compDisplayName">
				`comp_display_name` = #compDisplayName# ,
				</isNotEmpty>
				<isNotEmpty property="ownerName"> 
				`owner_name` = #ownerName# , 
				</isNotEmpty>
				<isNotEmpty property="senderName">
				`sender_name` = #senderName# , 
				</isNotEmpty>
				<isNotEmpty property="bizCondition">
				`biz_condition` = #bizCondition# ,
				</isNotEmpty>
				<isNotEmpty property="item"> 
				`item` = #item# , 
				</isNotEmpty>
				<isNotEmpty property="addr">
				`addr` = #addr# , 
				</isNotEmpty>
				<isNotEmpty property="detailAddr">
				`detail_addr` = #detailAddr# , 
				</isNotEmpty>
				<isNotEmpty property="useYn">
				`use_yn` = #useYn# , 
				</isNotEmpty>
				`modify_seq` = #modifySeq# , 
				`modify_date` = now()
			WHERE
				`comp_seq` = #compSeq# AND `lang_code` = #langCode#
	     </update>
	     
	     
	     
	    
	     
	     <insert id="CompManage.insertCompLang" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$`t_co_comp_lang`
			SET 
				lang_code 				= 			#langCode#,
				comp_seq 				= 			#compSeq#,
				main_yn					= 			#mainYn#,
				<isNotEmpty property="subYn">
				sub_yn 					= 			#subYn#,
				</isNotEmpty>
				create_seq 				= 			#createSeq#,
				create_date 			= 			now(), 
				modify_seq 				= 			#modifySeq#, 
				modify_date				 = 			now()
			ON DUPLICATE KEY UPDATE
				main_yn					= 			#mainYn#,
				<isNotEmpty property="subYn">
				sub_yn 					= 			#subYn#,
				</isNotEmpty>
				modify_seq 				= 			#modifySeq#, 
				modify_date				 = 			now()
	     </insert>
	     
	     <insert id="CompManage.insertCompMulti" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$`t_co_comp_multi`
			SET 
				comp_seq = #compSeq#
				,lang_code = #langCode#
				,group_seq = #groupSeq#
				,comp_name = #compName#
				,comp_display_name = #compDisplayName#
				,owner_name = #ownerName#
				,sender_name = #senderName#
				,use_yn='Y'
				,comp_nickname = #compNickname#
				,create_seq = #createSeq#
				,create_date = now()
			ON DUPLICATE KEY UPDATE
				comp_name = #compName#
				,modify_seq = #modifySeq#
				,modify_date = now()
	     </insert>
	     
	     <update id="CompManage.updateCompLang" parameterClass="hashmap">
	     	UPDATE $DB_NEOS$`t_co_comp_lang`
	     	SET
	     		main_yn					= 			#mainYn#,
				sub_yn 					= 			#subYn#,
				modify_seq 				= 			#modifySeq#, 
				modify_date				= 			now()
			WHERE
				comp_seq = #compSeq#
				<isNotEmpty property="langCode">
				AND	lang_code = #langCode#
				</isNotEmpty>
	     </update>
	     
 		<select id="CompManage.getGroupCompList_TOTALCOUNT" parameterClass="hashmap" resultClass="string">
	    	SELECT 
				COUNT(a.comp_seq) TOTAL_COUNT
			FROM 
				$DB_NEOS$t_co_comp a, 
				$DB_NEOS$v_t_co_comp_multi b
			WHERE a.group_seq = b.group_seq
				AND a.comp_seq = b.comp_seq
				AND a.group_seq = #groupSeq#
				
				<isNotEmpty property="searchType">
					<isEqual property="searchType" compareValue="0">
						AND $DB_NEOS$FN_GetMultiLang(#langCode#,b.comp_name_multi) like CONCAT('%',ifnull(#searchKeyword#,''),'%')
					</isEqual>
					
					<isEqual property="searchType" compareValue="1">
						AND b.comp_seq like CONCAT('%',ifnull(#searchKeyword#,''),'%')
					</isEqual>
				
				</isNotEmpty>
	    </select>
		
		<select id="CompManage.getGroupCompList" parameterClass="hashmap" resultClass="egovMap">
        select
        RESULT.comp_seq,
        $DB_NEOS$FN_GetMultiLang('',RESULT.comp_name_multi) as comp_name,
        RESULT.use_yn,
        IF ((SELECT COUNT(*) FROM $DB_NEOS$`t_co_erp_comp` WHERE erp_comp_seq = RESULT.comp_seq) > 0, 'Y', 'N') AS erp_yn,
        RESULT.sms_id,
        RESULT.login_type,
        RESULT.lang,
        DATE_FORMAT(RESULT.create_date, '%Y-%m-%d') AS create_date
        from
        (SELECT 
				a.comp_seq, 
				b.comp_name_multi, 
				a.use_yn, 
				a.sms_id,
				a.login_type,
				c.lang,
				a.create_date
			FROM 
				$DB_NEOS$t_co_comp a
				LEFT OUTER JOIN
				(
					SELECT 
						comp_seq, 
						GROUP_CONCAT($DB_NEOS$get_code_detail_info('0','LNG000',lang_code,#langCode#),'|', IFNULL(main_yn,'N')) AS lang 
					FROM 
						$DB_NEOS$t_co_comp_lang 
					GROUP BY 
						comp_seq
				) c ON a.comp_seq = c.comp_seq,
				$DB_NEOS$v_t_co_comp_multi b 
			WHERE a.group_seq = b.group_seq
				AND a.comp_seq = b.comp_seq
				AND a.group_seq = #groupSeq#
				
				<isNotEmpty property="searchType">
					<isEqual property="searchType" compareValue="0">
						AND b.comp_name_multi like CONCAT('%',ifnull(#searchKeyword#,''),'%')
					</isEqual>
					
					<isEqual property="searchType" compareValue="1">
						AND b.comp_seq like CONCAT('%',ifnull(#searchKeyword#,''),'%')
					</isEqual>
				
				</isNotEmpty>
				
			ORDER BY a.create_date
			
			LIMIT $startNum$, $endNum$) RESULT
	    </select>
	    
	    <select id="CompManage.getCompDeptExist" parameterClass="hashmap" resultClass="Integer">
	        /* CompManage.getCompDeptExist - mariadb */
            SELECT count(*) 
            FROM ( SELECT A.* , CONCAT('|',`a`.`path`,'|') AS `fPath` 
                   FROM $DB_NEOS$v_org_chart_admin A
                 ) AA 
            WHERE INSTR(fPath , CONCAT('|' , #compSeq# , '|'))
            AND   seq != #compSeq# 
            <isNotEmpty property="chkType">
              <isEqual property="chkType" compareValue="U"> 
            AND   use_yn = 'Y'  <!-- 사용여부 -->
              </isEqual>
            </isNotEmpty>       
        </select>
        
        <select id="CompManage.getErpConInfo_ac" parameterClass="hashmap" resultClass="hashmap">
        	/* CompManage.getErpConInfo_ac - mariadb */
        	SELECT *
        	FROM $DB_NEOS$t_co_erp A
        	     LEFT OUTER JOIN $DB_NEOS$t_co_erp_comp B
        	     ON A.comp_seq = B.comp_seq and A.group_seq = B.group_seq and A.erp_comp_seq = B.erp_comp_seq
        	WHERE A.group_seq = #groupSeq#
       		AND	  A.comp_seq = #compSeq#
       		AND   A.achr_gbn = 'ac' 
        </select>
        
        <select id="CompManage.getErpConInfo_hr" parameterClass="hashmap" resultClass="hashmap">
        	/* CompManage.getErpConInfo_ac - mariadb */
        	SELECT *
        	FROM $DB_NEOS$t_co_erp
        	WHERE group_seq = #groupSeq#
       		AND	  comp_seq = #compSeq#
       		AND   achr_gbn = 'hr'
        </select>
        
        <select id="CompManage.getErpConInfo_etc" parameterClass="hashmap" resultClass="hashmap">
        	/* CompManage.getErpConInfo_ac - mariadb */
        	SELECT *
        	FROM $DB_NEOS$t_co_erp
        	WHERE group_seq = #groupSeq#
       		AND	  comp_seq = #compSeq#
       		AND   achr_gbn = 'etc'
        </select>
        
        <insert id="CompManage.dbConnectInfoSave" parameterClass="hashmap">
        INSERT INTO $DB_NEOS$`t_co_erp`
			SET 
				group_seq 				= 			#groupSeq#,
				comp_seq 				= 			#compSeq#,
				erp_seq					=			#erpCompSeq#,
				erp_comp_seq			= 			#erpCompSeq#,
				achr_gbn 				= 			#achrGbn#,
				erp_type_code 			= 			#erpTypeCode# ,
				erp_comp_name			= 			#erpCompName#, 
				erp_name				= 			#erpCompName#,
				database_type    		= 			#databaseType#,
				driver		    		= 			#Driver#,
				url			    		= 			#Url#,
				userid    				= 			#UserID#,
				password	    		= 			#PassWord#,
				create_seq	    		= 			#empSeq#,
				create_date	    		= 			now(),
				g20_yn		    		= 			#g20Yn#
			ON DUPLICATE KEY UPDATE
				erp_seq					= 			#erpCompSeq#,
				erp_comp_seq			= 			#erpCompSeq#,
				achr_gbn 				= 			#achrGbn#,
				erp_type_code 			= 			#erpTypeCode#, 
				erp_name 				= 			#erpCompName#, 
				erp_comp_name			= 			#erpCompName#,
				database_type    		= 			#databaseType#,
				driver		    		= 			#Driver#,
				url			    		= 			#Url#,
				userid    				= 			#UserID#,
				password	    		= 			#PassWord#,
				modify_seq	    		= 			#empSeq#,
				modify_date	    		= 			now(),
				g20_yn		    		= 			#g20Yn#
        </insert>
        
        
        <delete id="CompManage.dbConnectInfoDelete" parameterClass="hashmap">
        	DELETE FROM
        		$DB_NEOS$t_co_erp
       		WHERE
       			group_seq = #groupSeq#
       			AND comp_seq = #compSeq#
       			AND achr_gbn = #achrGbn#
        </delete>
        
        <delete id="CompManage.deleteDbConnectInfo" parameterClass="hashmap">
       	DELETE FROM $DB_NEOS$t_co_erp
       	WHERE group_seq = #groupSeq#
       	AND   comp_seq = #compSeq#
       	AND   achr_gbn = #achrGbn#
        </delete>
        
        <update id="CompManage.updateCompInfo" parameterClass="hashmap">
        	UPDATE $DB_NEOS$t_co_comp
        	SET
        		erp_use = #erpUseYN#
        		,sms_use = #smsUseYN#
        		,login_type = #loginType#
        	WHERE
        		group_seq = #groupSeq#
        		AND comp_seq = #compSeq#
        </update>
        
        
        <select id="CompManage.selectCompSmsOption" parameterClass="hashmap" resultClass="hashmap">
        	SELECT 
        		sms_use as smsUse
        		,sms_id as smsId
        		,sms_passwd as smsPasswd
       		FROM $DB_NEOS$t_co_comp
       		WHERE
       			comp_seq = #compSeq#
        </select>
        
        <select id="CompManage.selectOrgImg" parameterClass="hashmap" resultClass="hashmap">
        	SELECT A.*, B.file_extsn, 
        			concat(replace(replace(c.absol_path,'/home',''),'/NAS_File',''),B.file_stre_cours,'/') orgPath
        	FROM $DB_NEOS$t_co_org_img A
        	LEFT JOIN $DB_NEOS$t_co_atch_file_detail B on A.file_id = B.file_id
        	LEFT JOIN $DB_NEOS$t_co_group_path c on c.path_seq = B.path_seq
        	WHERE
        		org_seq = #compSeq#
        		and img_type = #imgType#    
       		LIMIT 1    
        </select>
        
        <select id="CompManage.getTitle" parameterClass="hashmap" resultClass="egovMap">
        	SELECT 
        		A.comp_display_name,
        		B.comp_domain
        		
       		FROM $DB_NEOS$v_t_co_comp_multi A
       		INNER JOIN 
       			$DB_NEOS$t_co_comp B ON A.comp_seq = B.comp_seq
       		WHERE 
       			A.comp_seq = #compSeq#
       			<isNotEmpty property="langCode">
       			AND A.lang_code = #langCode#
       			</isNotEmpty>
        </select>
        
        <select id="CompManage.getErpConList" parameterClass="hashmap" resultClass="egovMap">
        	SELECT 
        		a.*,
				CASE 
				WHEN achr_gbn = 'ac' THEN '2' 
				WHEN achr_gbn = 'hr' THEN '1' 
				WHEN achr_gbn = 'etc' THEN '3' END  AS orderNum
       		FROM $DB_NEOS$t_co_erp a
       		inner join $DB_NEOS$t_co_comp b on a.comp_seq = b.comp_seq
       		WHERE 
       			a.group_seq = #groupSeq#
       			AND a.comp_seq = #compSeq#
       			AND b.erp_use = 'Y'
     		ORDER BY orderNum
        </select>
        
        <select id="CompManage.getErpEmpInfo" parameterClass="hashmap" resultClass="egovMap">
        	SELECT 
        		emp_seq
        		,group_seq
        		,comp_seq
        		,biz_seq
        		,dept_seq
        		,erp_emp_seq
        		,erp_comp_seq
        		,erp_biz_seq
        		,erp_dept_seq
        		,check_work_yn
        		,shift
        		,job_code
        		,status_code
        		,work_status
        		,use_yn        		
       		FROM $DB_NEOS$t_co_emp_comp
       		WHERE 
       			comp_seq = #compSeqOld#
       			AND emp_seq = #empSeq#
        </select>
        
        
        <update id="CompManage.updateErpEmpInfo" parameterClass="hashmap">
        	UPDATE
        		$DB_NEOS$t_co_emp_comp
       		SET
       			group_seq = #groupSeq#
       			<isNotNull property="erpEmpNum">
       			,erp_emp_seq = #erpEmpNum#
       			</isNotNull>
       			,comp_seq = #compSeq#
       			,biz_seq = #bizSeq#
       			,dept_seq = #deptSeq#
       			,emp_seq = #empSeq#
				<isNotEmpty property="checkWork">
       				,check_work_yn = #checkWork#
       			</isNotEmpty>
				<isNotEmpty property="shift">
       				,shift = #shift#
       			</isNotEmpty>
				<isNotEmpty property="jobCode">
       				,job_code = #jobCode#
       			</isNotEmpty>
				<isNotEmpty property="statusCode">
       				,status_code = #statusCode#
       			</isNotEmpty>
       			<isNotEmpty property="resign_day">
       				,resign_day = #resign_day#
       			</isNotEmpty>
       			<isNotEmpty property="workStatus">
       				,work_status = #workStatus#
       			</isNotEmpty>
       			<isNotEmpty property="use_yn">
       				,use_yn = #use_yn#
       			</isNotEmpty>
       			<isNotEmpty property="useYn">
       				,use_yn = #useYn#
       			</isNotEmpty>
       			
     		WHERE
     			comp_seq = #compSeqOld#
     			AND emp_seq = #empSeq#
       			
        </update>
        
        
        <insert id="CompManage.insertErpEmpInfo" parameterClass="hashmap">
        	INSERT INTO $DB_NEOS$t_co_emp_comp
        	(erp_emp_seq, group_seq, comp_seq, biz_seq, dept_seq, emp_seq, check_work_yn, shift, job_code, status_code, resign_day, work_status, use_yn)
        	VALUES
        	(#erpEmpNum#, #groupSeq#, #compSeq#, #bizSeq#, #deptSeq#, #empSeq#, 
        	#checkWork#, #shift#, #jobCode#, #statusCode#, #resign_day#, #workStatus#, #useYn#)
        </insert>
        
        <update id="CompManage.updateOtherStatus" parameterClass="hashmap">
            UPDATE
                $DB_NEOS$t_co_emp_comp
            SET                
                check_work_yn = (CASE WHEN comp_seq = #compSeq# THEN 'Y'
                                    ELSE 'N' END)
            WHERE
                emp_seq = #empSeq#
                
        </update>
        
        <select id="CompMange.checkMessengerUseYn" parameterClass="hashmap" resultClass="egovMap">
        	SELECT
        		*
       		FROM
       			$DB_NEOS$t_co_emp_dept
       		WHERE
       			emp_seq = #empSeq#        	
        </select>
        
        
        
        <delete id="CompManage.deleteErpEmpInfo" parameterClass="hashmap">
        	DELETE FROM $DB_NEOS$t_co_emp_comp
        	WHERE 
       			comp_seq = #compSeqOld#
       			AND emp_seq = #empSeq#
        </delete>
        
        
        <select id="CompManage.getMyCompList" parameterClass="hashmap" resultClass="egovMap">
        	SELECT DISTINCT
        		B.comp_seq, $DB_NEOS$FN_GetMultiLang(#langCode#,B.comp_name_multi) as comp_name
       		FROM
       			$DB_NEOS$t_co_emp_dept A
    		INNER JOIN
    			$DB_NEOS$v_t_co_comp_multi B on A.comp_seq = B.comp_seq
   			INNER JOIN
   				$DB_NEOS$t_co_comp C on A.comp_seq = C.comp_seq
   			WHERE
   				A.emp_seq = #empSeq#
   				AND A.use_yn = 'Y'
   				AND A.main_dept_yn = 'Y'
   				AND c.use_yn = 'Y'
        </select>  
        
        <update id="CompManage.setCompDomain" parameterClass="hashmap">
        	UPDATE 
        		$DB_NEOS$t_co_comp
       		SET
       			comp_domain = #compDomain#
      		WHERE
      			comp_seq = #compSeq# AND group_seq = #groupSeq#
        </update>
        
        <select id="CompManage.getBizSeq" parameterClass="hashmap" resultClass="String">
            SELECT biz_seq FROM $DB_NEOS$t_co_dept where dept_seq = #deptSeq#
        </select>
        
        <select id="CompManage.getTeamWorkInfo" parameterClass="hashmap" resultClass="egovMap">
            SELECT * FROM $DB_NEOS$t_at_work_team_member
				WHERE comp_seq = #compSeq#
				AND emp_seq = #empSeq#
				AND dept_seq = #deptSeq#
				ORDER BY create_dt
				LIMIT 1
        </select>
        
        <insert id="CompManage.setBaseAlarm" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$`t_alert_master`
			SET 
				comp_seq 				= 			#compSeq#,
				group_seq 				= 			#groupSeq#,
				alert_yn				= 			'B',				
				push_yn 				= 			'B',
				talk_yn 				= 			'B',
				mail_yn 				= 			'B', 
				sms_yn				 	= 			'N',
				portal_yn				= 			'B',
				timeline_yn				= 			'B',
				use_yn				 	= 			'Y',
				create_seq				= 			#empSeq#,
				create_date				= 			now()
			ON DUPLICATE KEY UPDATE
				alert_yn				= 			'B',				
				push_yn 				= 			'B',
				talk_yn 				= 			'B', 
				mail_yn 				= 			'B', 
				sms_yn				 	= 			'N',
				portal_yn				= 			'B',
				timeline_yn				= 			'B',
				use_yn				 	= 			'Y',
				modify_seq				=			#empSeq#,
				modify_date				=			now()
	     </insert>
	     
         <insert id="CompManage.setBaseAlarmAdmin" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$t_alert_admin
	     	(comp_seq, group_seq, alert_type, alert_yn, push_yn, talk_yn, mail_yn, sms_yn, portal_yn, timeline_yn, use_yn, create_seq, create_date, modify_seq, modify_date, divide_type)
			SELECT #compSeq#, #groupSeq#, alert_type, alert_yn, push_yn, talk_yn, mail_yn, sms_yn, portal_yn, timeline_yn, use_yn, create_seq, create_date, modify_seq, modify_date, divide_type 
			FROM $DB_NEOS$t_alert_setting
	     </insert>
	     
	     <insert id="CompManage.insertGrouppingComp" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$t_co_groupping_comp
	     	(groupping_seq, comp_seq, use_yn, create_seq, create_date)
	     	VALUES
	     	('1', #compSeq#, 'Y', #empSeq#, now())	     	
	     </insert>
	     
	     <delete id="CompManage.deleteGrouppingComp" parameterClass="hashmap">
	     	DELETE FROM $DB_NEOS$t_co_groupping_comp
	     	WHERE groupping_seq = 1 AND comp_seq = #compSeq#
	     </delete>
	     
	     
	     
	     <insert id="CompManage.insertBizInfo" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$t_co_biz
	     	(biz_seq, group_seq, comp_seq, display_yn, native_lang_code, order_num, use_yn, create_seq, create_date)
	     	VALUES
	     	(#compSeq#, #groupSeq#, #compSeq#, 'N', #nativeLangCode#, '0', 'Y', #empSeq#, now())
	     </insert>
	     
	      <insert id="CompManage.insertBizMultiInfo" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$t_co_biz_multi
	     	(biz_seq, lang_code, group_seq, comp_seq, biz_name, use_yn, create_seq, create_date)
	     	VALUES
	     	(#compSeq#, #nativeLangCode#, #groupSeq#, #compSeq#, get_code_detail_info('0', 'TX000010069', '1', #nativeLangCode#), 'Y', #empSeq#, now())
	     </insert>
	     
	     
	     <delete id="CompManage.deleteBizInfo" parameterClass="hashmap">
	     	DELETE FROM $DB_NEOS$t_co_biz
	     	WHERE
	     		group_seq = #groupSeq#
	     		AND comp_seq = #compSeq#
	     </delete>
	     
	     <delete id="CompManage.deleteBizMultiInfo" parameterClass="hashmap">
	     	DELETE FROM $DB_NEOS$t_co_biz_multi
	     	WHERE
	     		group_seq = #groupSeq#
	     		AND comp_seq = #compSeq#
	     </delete>
	     
	     
	     <delete id="CompManage.deleteErpCompInfo" parameterClass="hashmap">
	     	DELETE FROM $DB_NEOS$t_co_erp_comp
	     	WHERE comp_seq = #compSeq#	     
	     </delete>
	     
	     
	     
	     
	     <insert id="CompManage.insertErpCompInfo" parameterClass="hashmap">
	     	INSERT INTO $DB_NEOS$t_co_erp_comp
	     	VALUES   
	     	<isEmpty property="accountExtCode">
	     	(#erpCompSeq#, #groupSeq#, #compSeq#, #erpCompSeq#, #erpCompSeq#)
	     	</isEmpty>
	     	<isNotEmpty property="accountExtCode">
	     	(#erpCompSeq#, #groupSeq#, #compSeq#, #erpCompSeq#, #accountExtCode#)
	     	</isNotEmpty>
	     	
	     </insert>  
	     
	     <update id="CompManage.updateErpEmpCheckWorkInfo" parameterClass="hashmap">
	     	UPDATE
	     		$DB_NEOS$t_co_emp_comp
	     	SET
	     		check_work_yn = 'N'
	     	WHERE
	     		emp_seq = #empSeq# AND comp_seq != #compSeq#  
	     		
	     </update>
	     
	     <update id="CompManage.updateEmailDomail" parameterClass="hashmap">
	     	UPDATE
	     		$DB_NEOS$t_co_comp
     		SET
     			email_domain = #emailDomain#
     			,comp_email_yn = #compEmailYn#
   			WHERE
	     		comp_seq in($compSeq$)
	     </update>
	     
	     <delete id="CompManage.deleteMsgLinkInfo" parameterClass="hashmap">
	     	DELETE FROM
	     		$DB_NEOS$t_msg_tcmg_link
	     	WHERE
	     		comp_seq = #compSeq#	     	
	     </delete>
	     
	     
	     
	     <procedure id="CompManage.setBaseDateInfo" parameterClass="java.util.HashMap">
			<![CDATA[
				CALL $DB_NEOS$p_baseDateSet(#compSeq#,#groupSeq#,#empSeq#)
			]]>
		 </procedure>
		 
		 <procedure id="CompManage.deleteBaseAuthInfo" parameterClass="hashmap">
		 	<![CDATA[
				CALL $DB_NEOS$p_baseDateDelete(#compSeq#)
			]]>
		 
		 </procedure>
		 
		 
		 <select id="CompManage.getEmpDeptCnt" parameterClass="hashmap" resultClass="string">
		 	select
		 		count(emp_seq)
	 		from
	 			$DB_NEOS$t_co_emp_dept
 			where
 				emp_seq = #empSeq#
		 
		 </select>
		 
		 <select id="CompManage.getEmpInfoList" parameterClass="hashmap" resultClass="String">
		 	select 
		 		count(comp_seq) 
	 		from 
	 			$DB_NEOS$t_co_emp_dept 
 			where 
 				emp_seq = #empSeq#
 				and comp_seq = #compSeq#
		 </select>
		 
		 
		 <update id="CompManage.updateEmpMainCompSeq" parameterClass="hashmap">
		 	update 
		 		$DB_NEOS$t_co_emp
		 	set
		 		main_comp_seq = (select comp_seq from $DB_NEOS$t_co_emp_dept where emp_seq = #empSeq# AND comp_seq != #compSeq# limit 1)
		 	where
		 		emp_seq = #empSeq#		 
		 </update>
		 
		 <update id="CompManage.updateCompEaType" parameterClass="hashmap">
		 	update
		 		$DB_NEOS$t_co_comp
	 		set
	 			ea_type = #eaType#
	 		where
	 			comp_seq = #compSeq#
		 </update>
		 
		 <select id="CompManage.getPortalId" parameterClass="hashMap" resultClass="egovMap">
		 	select 
		 	ifnull(portal_div,'') as portal_div,
		 	ifnull(portal_id,'') as  portal_id
		 	from $DB_NEOS$t_co_portal 
		 	where use_yn='Y' 
		 	and comp_seq=#compSeq# or comp_seq = '0' 
		 	order by comp_seq = #compSeq# desc 
		 	limit 1
		 </select>
		 
		 <select id="CompManage.selectCompAuthList" parameterClass="hashmap" resultClass="egovMap">
		 	select author_code
		 	from $DB_NEOS$t_co_authcode
		 	where comp_seq = #compSeq#
		 </select>
		 
		 
		 <delete id="CompManage.deleteAuthCode" parameterClass="hashmap">
		 	DELETE FROM
		 		$DB_NEOS$t_co_authcode
		 	WHERE
		 		comp_seq = #compSeq#
		 </delete>
		 
		 <delete id="CompManage.deleteAuthCodeMulti" parameterClass="hashmap">
		 	DELETE FROM
		 		$DB_NEOS$t_co_authcode_multi
		 	WHERE
		 		author_code in($authorCodeList$)
		 </delete>
		 
		 <update id="CompManage.updateCompEmailYn" parameterClass="hashmap">
		 update $DB_NEOS$t_co_comp
		 set comp_email_yn = 'N'
		 where comp_seq = #compSeq#
		 </update>
		 
		 
		 <select id="CompManage.getEmpErpCompList" parameterClass="hashmap" resultClass="egovMap">
			select a.comp_seq, b.erp_comp_seq, b.achr_gbn from $DB_NEOS$t_co_comp a
			left join $DB_NEOS$t_co_erp b on a.comp_seq = b.comp_seq
			where a.comp_seq = #compSeq#
		 </select>
		 
		 
		 <update id="CompManage.updateCompCdInfo" parameterClass="hashmap">
		 	update
		 		$DB_NEOS$t_co_comp
		 	set
		 		comp_cd = #compCd#
		 	where
		 		comp_seq = #compSeq#
		 </update>
		 
		 <select id="CompManage.getCompCdInfo" parameterClass="hashmap" resultClass="egovMap">
		 	select
		 		comp_cd
		 	from
		 		$DB_NEOS$t_co_comp
		 	where
		 		comp_cd = #compCd# 
		 		<isNotEmpty property="compSeq">
		 			AND comp_seq != #compSeq# 
		 		</isNotEmpty>
		 		<isNotEmpty property="groupSeq">
		 			AND group_seq = #groupSeq# 
		 		</isNotEmpty>
		 	limit 1
		 </select>
		 
		 <select id="CompManage.getCompMailUrl" parameterClass="hashmap" resultClass="egovMap">
			<isNotEmpty property="compAccessDomain">
				select
				ifnull(c.comp_seq, ifnull(cd.comp_seq, '0')) as comp_seq,
				ifnull(c.comp_mail_url, ifnull(cd.comp_mail_url, g.mail_url)) as comp_mail_url
				from $DB_NEOS$t_co_group g
				left join $DB_NEOS$t_co_comp c on c.use_yn = 'Y' and g.group_seq = c.group_seq and replace(replace(concat(ifnull(c.comp_domain,''),'**'),':80**',''),'**','') = replace(replace(concat(ifnull(#compAccessDomain#,''),'**'),':443**',''),'**','')
				left join $DB_NEOS$t_co_comp cd on cd.use_yn = 'Y' and g.group_seq = cd.group_seq and cd.comp_seq = #compSeq#
				order by c.comp_seq desc, cd.comp_seq desc
				limit 1;			
			</isNotEmpty>
			<isEmpty property="compAccessDomain">
				select
				c.comp_seq,
				ifnull(c.comp_mail_url, g.mail_url) as comp_mail_url
				from $DB_NEOS$t_co_group g
				left join $DB_NEOS$t_co_comp c on g.group_seq = c.group_seq and c.group_seq = #groupSeq# and c.use_yn = 'Y'
				and c.comp_seq = #compSeq#
				limit 1;
			</isEmpty>		 
		 </select>
		 
 		<select id="CompManage.getFooterText" parameterClass="hashmap" resultClass="string">
			select display_text from $DB_NEOS$t_co_org_img where org_seq=#compSeq# and img_type='TEXT_COMP_FOOTER' limit 1
	    </select>
	    
	    
	    <select id="CompManage.getMailDomain" parameterClass="hashmap" resultClass="string">
	    	select
				ifnull(if(comp_mail_url = '', null, comp_mail_url), a.mail_url) mailUrl
			From 
				$DB_NEOS$t_co_group a
			inner join 
				$DB_NEOS$t_co_comp b 
			on 
				a.group_seq = b.group_seq
			where b.comp_seq = #compSeq#	    
	    </select>
	    
	    
		<delete id="CompManage.deleteEdmsDocList" parameterClass="hashmap">
			delete from np_doclist;
		</delete>
	    
        <insert id="CompManage.insertEdmsDocList" parameterClass="hashmap">
			INSERT INTO np_doclist(
			   NTT_ID
			  ,BBS_ID
			  ,NTT_NO
			  ,NTT_SJ
			  ,NTT_CN
			  ,ANSWER_AT
			  ,PARNTSCTT_NO
			  ,ANSWER_LC
			  ,SORT_ORDR
			  ,USE_AT
			  ,RDCNT
			  ,NTCE_BGNDE
			  ,NTCE_ENDDE
			  ,NTCR_ID
			  ,NTCR_NM
			  ,PASSWORD
			  ,ATCH_FILE_ID
			  ,FRST_REGIST_PNTTM
			  ,FRST_REGISTER_ID
			  ,LAST_UPDT_PNTTM
			  ,LAST_UPDUSR_ID
			  ,BBS_NOTICE
			  ,BBS_ANONYM
			  ,BBS_IMAGE
			  ,BBS_GROUP
			  ,BBS_POS
			  ,BBS_SEQ
			  ,BBS_REF
			  ,BBS_EXTOPEN
			) VALUES (
			   #nttId#   -- NTT_ID - IN int(20)
			  ,#bbsId#  -- BBS_ID - IN char(20)
			  ,#nttNo#   -- NTT_NO - IN int(20)
			  ,#nttSj#  -- NTT_SJ - IN varchar(2000)
			  ,#nttCn#   -- NTT_CN - IN mediumtext
			  ,#answerAt#  -- ANSWER_AT - IN char(1)
			  ,#parntscttNo#   -- PARNTSCTT_NO - IN int(10)
			  ,#answerLc#   -- ANSWER_LC - IN int(8)
			  ,#sortOrdr#   -- SORT_ORDR - IN int(8)
			  ,#useAt#  -- USE_AT - IN char(1)
			  ,#rdcnt#   -- RDCNT - IN int(10)
			  ,#ntceBgde#  -- NTCE_BGNDE - IN char(20)
			  ,#ntceEndde#  -- NTCE_ENDDE - IN char(20)
			  ,#ntcrId#  -- NTCR_ID - IN varchar(20)
			  ,#ntcrNm#  -- NTCR_NM - IN varchar(20)
			  ,#password#  -- PASSWORD - IN varchar(200)
			  ,#atchFileId#  -- ATCH_FILE_ID - IN char(20)
			  ,#frstregistPnttm#  -- FRST_REGIST_PNTTM - IN date
			  ,#frstRegisterId#  -- FRST_REGISTER_ID - IN varchar(20)
			  ,#lastUpdtPnttm#  -- LAST_UPDT_PNTTM - IN date
			  ,#lastUpdusrId#  -- LAST_UPDUSR_ID - IN varchar(20)
			  ,#bbsNotice#  -- BBS_NOTICE - IN char(1)
			  ,#bbsAnonym#  -- BBS_ANONYM - IN char(1)
			  ,#bbsImage#  -- BBS_IMAGE - IN varchar(100)
			  ,#bbsGroup#   -- BBS_GROUP - IN int(10)
			  ,#bbsPos#   -- BBS_POS - IN int(10)
			  ,#bbsSeq#   -- BBS_SEQ - IN int(10)
			  ,#bbsRef#   -- BBS_REF - IN int(10)
			  ,#bbsExtopen#  -- BBS_EXTOPEN - IN char(1)
			)
        </insert>
        
		<delete id="CompManage.deleteEdmsBoxList" parameterClass="hashmap">
			delete from NP_BoxList;
		</delete>        
        
        <insert id="CompManage.insertEdmsBoxList" parameterClass="hashmap">
			INSERT INTO NP_BoxList(
				MENU_NO
				,UPPER_MENU_NO
				,MENU_ORDR
				,BBS_NM
				,BBS_TY_CODE
				,BBS_ATTRB_CODE
				,REPLY_POSBL_AT
				,FILE_ATCH_POSBL_AT
				,USE_AT
				,FRST_REGISTER_ID
				,FRST_REGIST_PNTTM
				,LAST_UPDUSR_ID
				,LAST_UPDT_PNTTM
				,ANSWER_AT
				,STSFDG_AT
				,ANONYM_AT
				,EXTOPEN_AT
				,MAINOPEN_AT
				,LASTOPEN_AT			
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].menuNo#
			   ,#resultList[].upperMenuNo#
			   ,#resultList[].menuOrdr#
			   ,#resultList[].bbsNm#
			   ,#resultList[].bbsTyCode#
			   ,#resultList[].bbsAttrbCode#
			   ,#resultList[].replyPosblAt#
			   ,#resultList[].fileAtchPosblAt#
			   ,#resultList[].useAt#
			   ,#resultList[].frstRegistId#
			   ,#resultList[].frstRegistPnttm#
			   ,#resultList[].lastUpdusrId#
			   ,#resultList[].lastUpdtPnttm#
			   ,#resultList[].answerAt#
			   ,#resultList[].stsfdgAt#
			   ,#resultList[].anonymAt#
			   ,#resultList[].extopenAt#
			   ,#resultList[].mainopenAt#
			   ,#resultList[].lastopenAt#
			)		       
		   </iterate>
		   </dynamic>
        </insert>
        
		<delete id="CompManage.deleteEdmsBoxPermList" parameterClass="hashmap">
			delete from NP_BoxPermList;
		</delete>          
        
        <insert id="CompManage.insertEdmsBoxPermList" parameterClass="hashmap">
			INSERT INTO NP_BoxPermList(
				 MENU_NO
				,PERM_TYPE
				,PERM_ID
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].menuNo#
			   ,#resultList[].permType#
			   ,#resultList[].permId#
			)		       
		   </iterate>
		   </dynamic>
        </insert>
        
		<delete id="CompManage.deleteEdmsReadList" parameterClass="hashmap">
			delete from NP_ReadList;
		</delete>          
        
        <insert id="CompManage.insertEdmsReadList" parameterClass="hashmap">
			INSERT INTO NP_ReadList(
				U_ESNTL_ID
				,U_BBS_ID
				,U_NTT_ID
				,U_READ_DATE
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].uEsntlId#
			   ,#resultList[].uBbsId#
			   ,#resultList[].uNttId#
			   ,#resultList[].ureadDate#
			)		       
		   </iterate>
		   </dynamic>			
        </insert>
        
		<delete id="CompManage.deleteEdmsPublicList" parameterClass="hashmap">
			delete from NP_PublicList;
		</delete>         
        
        <insert id="CompManage.insertEdmsPublicList" parameterClass="hashmap">
			INSERT INTO NP_PublicList(
				NTT_ID
				,BBS_ID 
				,PUBLIC_ID 
				,PUBLIC_NM 
				,ID_ORDER		
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].nttId#
			   ,#resultList[].bbsId#
			   ,#resultList[].publicId#
			   ,#resultList[].publicNm#
			   ,#resultList[].idOrder#
			)	       
		   </iterate>
		   </dynamic>			
        </insert>
        
		<delete id="CompManage.deleteEdmsCommentList" parameterClass="hashmap">
			delete from NP_CommentList;
		</delete>           
        
        <insert id="CompManage.insertEdmsCommentList" parameterClass="hashmap">
			INSERT INTO NP_CommentList(
			  	NTT_ID 
				,BBS_ID 
				,ANSWER_NO 
				,WRTER_ID 
				,WRTER_NM 
				,ANSWER 
				,USE_AT 
				,FRST_REGIST_PNTTM 
				,FRST_REGISTER_ID 
				,LAST_UPDT_PNTTM 
				,LAST_UPDUSR_ID 
				,PASSWORD
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].nttId#
			   ,#resultList[].bbsId#
			   ,#resultList[].answerNo#
			   ,#resultList[].writerId#
			   ,#resultList[].writerNm#
			   ,#resultList[].answer#
			   ,#resultList[].useAt#
			   ,#resultList[].frstRegistPnttm#
			   ,#resultList[].frstRegisterId#
			   ,#resultList[].lastUpdtPnttm#
			   ,#resultList[].lastUpdusrId#
			   ,#resultList[].password#
			)      
		   </iterate>
		   </dynamic>			
        </insert>    
        
		<delete id="CompManage.deleteEdmsFileList" parameterClass="hashmap">
			delete from NP_FileList;
		</delete>                                  
        
        <insert id="CompManage.insertEdmsFileList" parameterClass="hashmap">
			INSERT INTO NP_FileList(
			  	ATCH_FILE_ID 
				,CREAT_DT 
				,USE_AT			
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].atchFileId#
			   ,#resultList[].creatDt#
			   ,#resultList[].useAt#
			)   
		   </iterate>
		   </dynamic>				
        </insert> 
        
		<delete id="CompManage.deleteEdmsFileDetailList" parameterClass="hashmap">
			delete from NP_FileDetailList;
		</delete>                  

        <insert id="CompManage.insertEdmsFileDetailList" parameterClass="hashmap">
			INSERT INTO NP_FileDetailList(
				ATCH_FILE_ID 
				,FILE_SN 
				,STRE_FILE_NM 
				,ORIGNL_FILE_NM 
				,FILE_EXTSN 
				,FILE_CN 
				,FILE_SIZE	
			) VALUES
		   <dynamic>
		   <iterate conjunction="," property="resultList">
			 (
			   #resultList[].atchFileId#
			   ,#resultList[].fileSn#
			   ,#resultList[].streFileNm#
			   ,#resultList[].orignlFileNm#
			   ,#resultList[].fileExtsn#
			   ,#resultList[].fileCn#
			   ,#resultList[].fileSize#
			)
		   </iterate>
		   </dynamic>			
        </insert> 
	    
	    
	    
	    <select id="CompManage.getErpConectInfo" parameterClass="hashmap" resultClass="egovMap">
	    	select *From $DB_NEOS$t_co_erp where comp_seq = (select comp_seq from $DB_NEOS$t_co_comp where comp_cd = #compCd#) and achr_gbn = 'hr'
	    	limit 1	    
	    </select>
	    
	    
	    <select id="CompManage.getGwDomain" parameterClass="hashmap" resultClass="string">
	    	select 
	    		ifnull(comp_domain,'') comp_domain 
	    	From 
	    		$DB_NEOS$t_co_comp
	    	where 
	    		email_domain = #emailDomain#
	    	limit 1	    
	    </select>
</sqlMap>